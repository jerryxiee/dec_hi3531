// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* ..\..\onvif_code\receiver.h
   Generated by wsdl2h 2.8.21 from ..\..\onvif-wsdl\onvif.xsd ..\..\onvif-wsdl\Receiver.wsdl ..\..\onvif-wsdl\devicemgmt.wsdl ..\..\onvif-wsdl\remotediscovery.wsdl and ..\..\gsoap-2.8\gsoap\typemap.dat
   2015-03-17 06:23:59 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2014 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on ..\..\onvif_code\receiver.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "wsdd10.h"	// wsdd10 = <http://schemas.xmlsoap.org/ws/2005/04/discovery>
#import "xop.h"	// xop = <http://www.w3.org/2004/08/xop/include>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>
#import "wsse.h"
/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

tt = "http://www.onvif.org/ver10/schema"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"
trv = "http://www.onvif.org/ver10/receiver/wsdl"
tds = "http://www.onvif.org/ver10/device/wsdl"
tdn = "http://www.onvif.org/ver10/network/wsdl"

*/

#define SOAP_NAMESPACE_OF_tt	"http://www.onvif.org/ver10/schema"
//gsoap tt    schema namespace:	http://www.onvif.org/ver10/schema
//gsoap tt    schema elementForm:	qualified
//gsoap tt    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trv	"http://www.onvif.org/ver10/receiver/wsdl"
//gsoap trv   schema namespace:	http://www.onvif.org/ver10/receiver/wsdl
//gsoap trv   schema elementForm:	qualified
//gsoap trv   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tds	"http://www.onvif.org/ver10/device/wsdl"
//gsoap tds   schema namespace:	http://www.onvif.org/ver10/device/wsdl
//gsoap tds   schema elementForm:	qualified
//gsoap tds   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tdn	"http://www.onvif.org/ver10/network/wsdl"
//gsoap tdn   schema namespace:	http://www.onvif.org/ver10/network/wsdl
//gsoap tdn   schema elementForm:	qualified
//gsoap tdn   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD type "SOAP-ENV:Envelope".
struct SOAP_ENV__Envelope { struct SOAP_ENV__Header *SOAP_ENV__Header; _XML SOAP_ENV__Body; };

/// Built-in XSD type "xs:base64Binary".
struct xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: non-NULL for DIMEM/MIME/MTOM XOP attachments only
};

/// Built-in XSD type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };

/// Built-in XSD type "xs:duration".
#import "custom/duration.h"

/// Built-in XSD type "xs:hexBinary".
struct xsd__hexBinary { unsigned char *__ptr; int __size; };

// Imported XSD type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" defined by wsa5__EndpointReferenceType.
/// Primitive built-in type "xs:NCName".
typedef char* xsd__NCName;

/// Primitive built-in type "xs:anySimpleType".
typedef char* xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI".
typedef char* xsd__anyURI;

/// Primitive built-in type "xs:integer".
typedef char* xsd__integer;

/// Primitive built-in type "xs:nonNegativeInteger".
typedef char* xsd__nonNegativeInteger;

/// Primitive built-in type "xs:token".
typedef char* xsd__token;

// Imported element ""http://www.w3.org/2004/08/xop/include":Include" declared as _xop__Include.
/// Built-in attribute "xml:lang".
typedef char* _xml__lang;



/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":IntAttrList is a simpleType containing a whitespace separated list of xs:int.
///
typedef char* tt__IntAttrList;

/// @brief "http://www.onvif.org/ver10/schema":FloatAttrList is a simpleType containing a whitespace separated list of xs:float.
///
typedef char* tt__FloatAttrList;

/// @brief "http://www.onvif.org/ver10/schema":StringAttrList is a simpleType containing a whitespace separated list of xs:string.
///
typedef char* tt__StringAttrList;

/// @brief "http://www.onvif.org/ver10/schema":ReferenceTokenList is a simpleType containing a whitespace separated list of "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef char* tt__ReferenceTokenList;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from member types "xsd:dateTime xsd:duration".
typedef char* wsnt__AbsoluteOrRelativeTimeType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes is a simpleType containing a whitespace separated list of xs:int.
///
typedef char* tds__EAPMethodTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for a physical or logical resource.
///   Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class.
///   Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
typedef char* tt__ReferenceToken:64;

/// @brief "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
typedef char* tt__Name:64;

/// @brief "http://www.onvif.org/ver10/schema":RotateMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RotateMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RotateMode
{
	tt__RotateMode__OFF,	///< xs:string value="OFF"
	tt__RotateMode__ON,	///< xs:string value="ON"
	tt__RotateMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoding is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__VideoEncoding__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__VideoEncoding
{
	tt__VideoEncoding__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncoding__MPEG4,	///< xs:string value="MPEG4"
	tt__VideoEncoding__H264,	///< xs:string value="H264"
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Profile is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Mpeg4Profile__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Mpeg4Profile
{
	tt__Mpeg4Profile__SP,	///< xs:string value="SP"
	tt__Mpeg4Profile__ASP,	///< xs:string value="ASP"
};

/// @brief "http://www.onvif.org/ver10/schema":H264Profile is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__H264Profile__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__H264Profile
{
	tt__H264Profile__Baseline,	///< xs:string value="Baseline"
	tt__H264Profile__Main,	///< xs:string value="Main"
	tt__H264Profile__Extended,	///< xs:string value="Extended"
	tt__H264Profile__High,	///< xs:string value="High"
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoding is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__AudioEncoding__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__AudioEncoding
{
	tt__AudioEncoding__G711,	///< xs:string value="G711"
	tt__AudioEncoding__G726,	///< xs:string value="G726"
	tt__AudioEncoding__AAC,	///< xs:string value="AAC"
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataCompressionType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__MetadataCompressionType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__MetadataCompressionType
{
	tt__MetadataCompressionType__None,	///< xs:string value="None"
	tt__MetadataCompressionType__GZIP,	///< xs:string value="GZIP"
};

/// @brief "http://www.onvif.org/ver10/schema":StreamType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__StreamType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__StreamType
{
	tt__StreamType__RTP_Unicast,	///< xs:string value="RTP-Unicast"
	tt__StreamType__RTP_Multicast,	///< xs:string value="RTP-Multicast"
};

/// @brief "http://www.onvif.org/ver10/schema":TransportProtocol is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__TransportProtocol__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__TransportProtocol
{
	tt__TransportProtocol__UDP,	///< xs:string value="UDP"
	tt__TransportProtocol__TCP,	///< xs:string value="TCP"
	tt__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	tt__TransportProtocol__HTTP,	///< xs:string value="HTTP"
};

/// @brief "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ScopeDefinition__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ScopeDefinition
{
	tt__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	tt__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// @brief "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__DiscoveryMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DiscoveryMode
{
	tt__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	tt__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is a simpleType restriction of XSD type xs:integer.
///
/// Length of this string is 0..unbounded.
/// Value range is [0..31].
typedef xsd__integer tt__NetworkInterfaceConfigPriority;

/// @brief "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Duplex__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Duplex
{
	tt__Duplex__Full,	///< xs:string value="Full"
	tt__Duplex__Half,	///< xs:string value="Half"
};

/// @brief "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of XSD type xs:int.
///
/// <PRE><BLOCKQUOTE>
///   For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
typedef int tt__IANA_IfTypes;

/// @brief "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IPv6DHCPConfiguration__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPv6DHCPConfiguration
{
	tt__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	tt__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	tt__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	tt__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkProtocolType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__NetworkProtocolType
{
	tt__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	tt__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	tt__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkHostType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__NetworkHostType
{
	tt__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	tt__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	tt__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of XSD type xs:token.
///
/// Length of this string is 0..unbounded.
typedef xsd__token tt__IPv4Address;

/// @brief "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of XSD type xs:token.
///
/// Length of this string is 0..unbounded.
typedef xsd__token tt__IPv6Address;

/// @brief "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of XSD type xs:token.
///
/// Length of this string is 0..unbounded.
typedef xsd__token tt__HwAddress;

/// @brief "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IPType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPType
{
	tt__IPType__IPv4,	///< xs:string value="IPv4"
	tt__IPType__IPv6,	///< xs:string value="IPv6"
};

/// @brief "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of XSD type xs:token.
///
/// Length of this string is 0..unbounded.
typedef xsd__token tt__DNSName;

/// @brief "http://www.onvif.org/ver10/schema":Domain is a simpleType restriction of XSD type xs:token.
///
/// Length of this string is 0..unbounded.
typedef xsd__token tt__Domain;

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IPAddressFilterType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPAddressFilterType
{
	tt__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	tt__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__DynamicDNSType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DynamicDNSType
{
	tt__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	tt__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	tt__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SSIDType is a simpleType restriction of XSD type xs:hexBinary.
///
/// Length of this string is 1..32.
typedef struct xsd__hexBinary tt__Dot11SSIDType 1:32;

/// @brief "http://www.onvif.org/ver10/schema":Dot11StationMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11StationMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11StationMode
{
	tt__Dot11StationMode__Ad_hoc,	///< xs:string value="Ad-hoc"
	tt__Dot11StationMode__Infrastructure,	///< xs:string value="Infrastructure"
	tt__Dot11StationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SecurityMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11SecurityMode
{
	tt__Dot11SecurityMode__None,	///< xs:string value="None"
	tt__Dot11SecurityMode__WEP,	///< xs:string value="WEP"
	tt__Dot11SecurityMode__PSK,	///< xs:string value="PSK"
	tt__Dot11SecurityMode__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11SecurityMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Cipher is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11Cipher__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11Cipher
{
	tt__Dot11Cipher__CCMP,	///< xs:string value="CCMP"
	tt__Dot11Cipher__TKIP,	///< xs:string value="TKIP"
	tt__Dot11Cipher__Any,	///< xs:string value="Any"
	tt__Dot11Cipher__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSK is a simpleType restriction of XSD type xs:hexBinary.
///
/// Length of this string is 32.
typedef struct xsd__hexBinary tt__Dot11PSK;

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..unbounded.
/// Content pattern is "[ -~]{8,63}".
typedef char* tt__Dot11PSKPassphrase "[ -~]{8,63}";

/// @brief "http://www.onvif.org/ver10/schema":Dot11SignalStrength is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SignalStrength__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11SignalStrength
{
	tt__Dot11SignalStrength__None,	///< xs:string value="None"
	tt__Dot11SignalStrength__Very_x0020Bad,	///< xs:string value="Very Bad"
	tt__Dot11SignalStrength__Bad,	///< xs:string value="Bad"
	tt__Dot11SignalStrength__Good,	///< xs:string value="Good"
	tt__Dot11SignalStrength__Very_x0020Good,	///< xs:string value="Very Good"
	tt__Dot11SignalStrength__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11AuthAndMangementSuite__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11AuthAndMangementSuite
{
	tt__Dot11AuthAndMangementSuite__None,	///< xs:string value="None"
	tt__Dot11AuthAndMangementSuite__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11AuthAndMangementSuite__PSK,	///< xs:string value="PSK"
	tt__Dot11AuthAndMangementSuite__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__CapabilityCategory__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__CapabilityCategory
{
	tt__CapabilityCategory__All,	///< xs:string value="All"
	tt__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	tt__CapabilityCategory__Device,	///< xs:string value="Device"
	tt__CapabilityCategory__Events,	///< xs:string value="Events"
	tt__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	tt__CapabilityCategory__Media,	///< xs:string value="Media"
	tt__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available system log modes.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__SystemLogType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SystemLogType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a system log is requested.
/// </BLOCKQUOTE></PRE>
	tt__SystemLogType__System,	///< xs:string value="System"
/// <PRE><BLOCKQUOTE>
///   Indicates that a access log is requested.
/// </BLOCKQUOTE></PRE>
	tt__SystemLogType__Access,	///< xs:string value="Access"
};

/// @brief "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available factory default modes.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__FactoryDefaultType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__FactoryDefaultType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a hard factory default is requested.
/// </BLOCKQUOTE></PRE>
	tt__FactoryDefaultType__Hard,	///< xs:string value="Hard"
/// <PRE><BLOCKQUOTE>
///   Indicates that a soft factory default is requested.
/// </BLOCKQUOTE></PRE>
	tt__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// @brief "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__SetDateTimeType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SetDateTimeType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set manually.
/// </BLOCKQUOTE></PRE>
	tt__SetDateTimeType__Manual,	///< xs:string value="Manual"
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set through NTP
/// </BLOCKQUOTE></PRE>
	tt__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// @brief "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__UserLevel__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__UserLevel
{
	tt__UserLevel__Administrator,	///< xs:string value="Administrator"
	tt__UserLevel__Operator,	///< xs:string value="Operator"
	tt__UserLevel__User,	///< xs:string value="User"
	tt__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	tt__UserLevel__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayLogicalState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayLogicalState
{
	tt__RelayLogicalState__active,	///< xs:string value="active"
	tt__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayIdleState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayIdleState
{
	tt__RelayIdleState__closed,	///< xs:string value="closed"
	tt__RelayIdleState__open,	///< xs:string value="open"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayMode
{
	tt__RelayMode__Monostable,	///< xs:string value="Monostable"
	tt__RelayMode__Bistable,	///< xs:string value="Bistable"
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__EFlipMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__EFlipMode
{
	tt__EFlipMode__OFF,	///< xs:string value="OFF"
	tt__EFlipMode__ON,	///< xs:string value="ON"
	tt__EFlipMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ReverseMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReverseMode
{
	tt__ReverseMode__OFF,	///< xs:string value="OFF"
	tt__ReverseMode__ON,	///< xs:string value="ON"
	tt__ReverseMode__AUTO,	///< xs:string value="AUTO"
	tt__ReverseMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..128.
typedef char* tt__AuxiliaryData:128;

/// @brief "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__MoveStatus__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__MoveStatus
{
	tt__MoveStatus__IDLE,	///< xs:string value="IDLE"
	tt__MoveStatus__MOVING,	///< xs:string value="MOVING"
	tt__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourState
{
	tt__PTZPresetTourState__Idle,	///< xs:string value="Idle"
	tt__PTZPresetTourState__Touring,	///< xs:string value="Touring"
	tt__PTZPresetTourState__Paused,	///< xs:string value="Paused"
	tt__PTZPresetTourState__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourDirection is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourDirection__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourDirection
{
	tt__PTZPresetTourDirection__Forward,	///< xs:string value="Forward"
	tt__PTZPresetTourDirection__Backward,	///< xs:string value="Backward"
	tt__PTZPresetTourDirection__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOperation is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourOperation__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourOperation
{
	tt__PTZPresetTourOperation__Start,	///< xs:string value="Start"
	tt__PTZPresetTourOperation__Stop,	///< xs:string value="Stop"
	tt__PTZPresetTourOperation__Pause,	///< xs:string value="Pause"
	tt__PTZPresetTourOperation__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":AutoFocusMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__AutoFocusMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__AutoFocusMode
{
	tt__AutoFocusMode__AUTO,	///< xs:string value="AUTO"
	tt__AutoFocusMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__WideDynamicMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__WideDynamicMode
{
	tt__WideDynamicMode__OFF,	///< xs:string value="OFF"
	tt__WideDynamicMode__ON,	///< xs:string value="ON"
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationMode is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available backlight compenstation modes.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__BacklightCompensationMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__BacklightCompensationMode
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is disabled.
/// </BLOCKQUOTE></PRE>
	tt__BacklightCompensationMode__OFF,	///< xs:string value="OFF"
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is enabled.
/// </BLOCKQUOTE></PRE>
	tt__BacklightCompensationMode__ON,	///< xs:string value="ON"
};

/// @brief "http://www.onvif.org/ver10/schema":ExposurePriority is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ExposurePriority__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ExposurePriority
{
	tt__ExposurePriority__LowNoise,	///< xs:string value="LowNoise"
	tt__ExposurePriority__FrameRate,	///< xs:string value="FrameRate"
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ExposureMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ExposureMode
{
	tt__ExposureMode__AUTO,	///< xs:string value="AUTO"
	tt__ExposureMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":Enabled is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Enabled__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Enabled
{
	tt__Enabled__ENABLED,	///< xs:string value="ENABLED"
	tt__Enabled__DISABLED,	///< xs:string value="DISABLED"
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__WhiteBalanceMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__WhiteBalanceMode
{
	tt__WhiteBalanceMode__AUTO,	///< xs:string value="AUTO"
	tt__WhiteBalanceMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IrCutFilterMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IrCutFilterMode
{
	tt__IrCutFilterMode__ON,	///< xs:string value="ON"
	tt__IrCutFilterMode__OFF,	///< xs:string value="OFF"
	tt__IrCutFilterMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ImageStabilizationMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ImageStabilizationMode
{
	tt__ImageStabilizationMode__OFF,	///< xs:string value="OFF"
	tt__ImageStabilizationMode__ON,	///< xs:string value="ON"
	tt__ImageStabilizationMode__AUTO,	///< xs:string value="AUTO"
	tt__ImageStabilizationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoBoundaryType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IrCutFilterAutoBoundaryType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IrCutFilterAutoBoundaryType
{
	tt__IrCutFilterAutoBoundaryType__Common,	///< xs:string value="Common"
	tt__IrCutFilterAutoBoundaryType__ToOn,	///< xs:string value="ToOn"
	tt__IrCutFilterAutoBoundaryType__ToOff,	///< xs:string value="ToOff"
	tt__IrCutFilterAutoBoundaryType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ToneCompensationMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ToneCompensationMode
{
	tt__ToneCompensationMode__OFF,	///< xs:string value="OFF"
	tt__ToneCompensationMode__ON,	///< xs:string value="ON"
	tt__ToneCompensationMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__DefoggingMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DefoggingMode
{
	tt__DefoggingMode__OFF,	///< xs:string value="OFF"
	tt__DefoggingMode__ON,	///< xs:string value="ON"
	tt__DefoggingMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":TopicNamespaceLocation is a simpleType restriction of XSD type xs:anyURI.
///
/// Length of this string is 0..unbounded.
typedef xsd__anyURI tt__TopicNamespaceLocation;

/// @brief "http://www.onvif.org/ver10/schema":PropertyOperation is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PropertyOperation__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PropertyOperation
{
	tt__PropertyOperation__Initialized,	///< xs:string value="Initialized"
	tt__PropertyOperation__Deleted,	///< xs:string value="Deleted"
	tt__PropertyOperation__Changed,	///< xs:string value="Changed"
};

/// @brief "http://www.onvif.org/ver10/schema":Direction is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Direction__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Direction
{
	tt__Direction__Left,	///< xs:string value="Left"
	tt__Direction__Right,	///< xs:string value="Right"
	tt__Direction__Any,	///< xs:string value="Any"
};

/// @brief "http://www.onvif.org/ver10/schema":ClassType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ClassType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ClassType
{
	tt__ClassType__Animal,	///< xs:string value="Animal"
	tt__ClassType__Face,	///< xs:string value="Face"
	tt__ClassType__Human,	///< xs:string value="Human"
	tt__ClassType__Vehical,	///< xs:string value="Vehical"
	tt__ClassType__Other,	///< xs:string value="Other"
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverMode is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Specifies a receiver connection mode.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__ReceiverMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReceiverMode
{
/// <PRE><BLOCKQUOTE>
///   The receiver connects on demand, as required by consumers of the media streams.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__AutoConnect,	///< xs:string value="AutoConnect"
/// <PRE><BLOCKQUOTE>
///   The receiver attempts to maintain a persistent connection to the configured endpoint.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__AlwaysConnect,	///< xs:string value="AlwaysConnect"
/// <PRE><BLOCKQUOTE>
///   The receiver does not attempt to connect.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__NeverConnect,	///< xs:string value="NeverConnect"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverState is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Specifies the current connection state of the receiver.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__ReceiverState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReceiverState
{
/// <PRE><BLOCKQUOTE>
///   The receiver is not connected.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__NotConnected,	///< xs:string value="NotConnected"
/// <PRE><BLOCKQUOTE>
///   The receiver is attempting to connect.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__Connecting,	///< xs:string value="Connecting"
/// <PRE><BLOCKQUOTE>
///   The receiver is connected.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__Connected,	///< xs:string value="Connected"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":Description is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..unbounded.
typedef char* tt__Description;

/// @brief "http://www.onvif.org/ver10/schema":XPathExpression is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..unbounded.
typedef char* tt__XPathExpression;

/// @brief "http://www.onvif.org/ver10/schema":SearchState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__SearchState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SearchState
{
/// <PRE><BLOCKQUOTE>
///   The search is queued and not yet started.
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Queued,	///< xs:string value="Queued"
/// <PRE><BLOCKQUOTE>
///   The search is underway and not yet completed.
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Searching,	///< xs:string value="Searching"
/// <PRE><BLOCKQUOTE>
///   The search has been completed and no new results will be found.
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Completed,	///< xs:string value="Completed"
/// <PRE><BLOCKQUOTE>
///   The state of the search is unknown. (This is not a valid response from GetSearchState.)
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingStatus is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RecordingStatus__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RecordingStatus
{
	tt__RecordingStatus__Initiated,	///< xs:string value="Initiated"
	tt__RecordingStatus__Recording,	///< xs:string value="Recording"
	tt__RecordingStatus__Stopped,	///< xs:string value="Stopped"
	tt__RecordingStatus__Removing,	///< xs:string value="Removing"
	tt__RecordingStatus__Removed,	///< xs:string value="Removed"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__RecordingStatus__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":TrackType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__TrackType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__TrackType
{
	tt__TrackType__Video,	///< xs:string value="Video"
	tt__TrackType__Audio,	///< xs:string value="Audio"
	tt__TrackType__Metadata,	///< xs:string value="Metadata"
/// <PRE><BLOCKQUOTE>
///   Placeholder for future extension.
/// </BLOCKQUOTE></PRE>
	tt__TrackType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobMode is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..unbounded.
typedef char* tt__RecordingJobMode;

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobState is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..unbounded.
typedef char* tt__RecordingJobState;

/// @brief "http://www.onvif.org/ver10/schema":ModeOfOperation is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ModeOfOperation__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ModeOfOperation
{
	tt__ModeOfOperation__Idle,	///< xs:string value="Idle"
	tt__ModeOfOperation__Active,	///< xs:string value="Active"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__ModeOfOperation__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   AudioClassType acceptable values are;
///   gun_shot, scream, glass_breaking, tire_screech
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
typedef char* tt__AudioClassType;

/// @brief "http://www.onvif.org/ver10/schema":OSDType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__OSDType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__OSDType
{
	tt__OSDType__Text,	///< xs:string value="Text"
	tt__OSDType__Image,	///< xs:string value="Image"
	tt__OSDType__Extended,	///< xs:string value="Extended"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is a simpleType restriction of XSD type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   TopicPathExpression ::= TopicPath ( '|' TopicPath )* TopicPath ::= RootTopic ChildTopicExpression* RootTopic ::= NamespacePrefix? ('//')? (NCName | '*') NamespacePrefix ::= NCName ':' ChildTopicExpression ::= '/' '/'? (QName | NCName | '*'| '.')
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
/// Content pattern is "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*".
typedef xsd__token wstop__FullTopicExpression "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of XSD type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   ConcreteTopicPath ::= RootTopic ChildTopic* RootTopic ::= QName ChildTopic ::= '/' (QName | NCName)
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*".
typedef xsd__token wstop__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is a simpleType restriction of XSD type xs:QName.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   RootTopic ::= QName
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
typedef _QName wstop__SimpleTopicExpression;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tds__StorageType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tds__StorageType
{
/// <PRE><BLOCKQUOTE>
///   NFS protocol
/// </BLOCKQUOTE></PRE>
	tds__StorageType__NFS,	///< xs:string value="NFS"
/// <PRE><BLOCKQUOTE>
///   CIFS protocol
/// </BLOCKQUOTE></PRE>
	tds__StorageType__CIFS,	///< xs:string value="CIFS"
/// <PRE><BLOCKQUOTE>
///   CDMI protocol
/// </BLOCKQUOTE></PRE>
	tds__StorageType__CDMI,	///< xs:string value="CDMI"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":ReceiverReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
/// Length of this string is 0..unbounded.
typedef tt__ReferenceToken tt__ReceiverReference;

/// @brief "http://www.onvif.org/ver10/schema":RecordingReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
/// Length of this string is 0..unbounded.
typedef tt__ReferenceToken tt__RecordingReference;

/// @brief "http://www.onvif.org/ver10/schema":TrackReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
/// Length of this string is 0..unbounded.
typedef tt__ReferenceToken tt__TrackReference;

/// @brief "http://www.onvif.org/ver10/schema":JobToken is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
/// Length of this string is 0..unbounded.
typedef tt__ReferenceToken tt__JobToken;

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
/// Length of this string is 0..unbounded.
typedef tt__ReferenceToken tt__RecordingJobReference;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base class for physical entities like inputs and outputs.
/// </BLOCKQUOTE></PRE>
struct tt__DeviceEntity
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Rectangle defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
struct tt__IntRectangle
{
/// Attribute "x" of XSD type xs:int.
   @int                                  x                              1;	///< Required attribute.
/// Attribute "y" of XSD type xs:int.
   @int                                  y                              1;	///< Required attribute.
/// Attribute "width" of XSD type xs:int.
   @int                                  width                          1;	///< Required attribute.
/// Attribute "height" of XSD type xs:int.
   @int                                  height                         1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
struct tt__IntRectangleRange
{
/// <PRE><BLOCKQUOTE>
///   Range of X-axis.
/// </BLOCKQUOTE></PRE>
/// Element "XRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of Y-axis.
/// </BLOCKQUOTE></PRE>
/// Element "YRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 YRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of width.
/// </BLOCKQUOTE></PRE>
/// Element "WidthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 WidthRange                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of height.
/// </BLOCKQUOTE></PRE>
/// Element "HeightRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 HeightRange                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
struct tt__IntRange
{
/// Element "Min" of XSD type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element "Max" of XSD type xs:int.
    int                                  Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
struct tt__FloatRange
{
/// Element "Min" of XSD type xs:float.
    float                                Min                            1;	///< Required element.
/// Element "Max" of XSD type xs:float.
    float                                Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of duration greater equal Min duration and less equal Max duration.
/// </BLOCKQUOTE></PRE>
struct tt__DurationRange
{
/// Element "Min" of XSD type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element "Max" of XSD type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IntList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of values.
/// </BLOCKQUOTE></PRE>
struct tt__IntList
{
/// Size of array of int* is 0..unbounded.
   $int                                  __sizeItems                    0;
/// Array int* of size 0..unbounded.
    int*                                 Items                          0;
};

/// @brief "http://www.onvif.org/ver10/schema":FloatList is a complexType.
///
struct tt__FloatList
{
/// Size of array of float* is 0..unbounded.
   $int                                  __sizeItems                    0;
/// Array float* of size 0..unbounded.
    float*                               Items                          0;
};

/// @brief "http://www.onvif.org/ver10/schema":AnyHolder is a complexType.
///
struct tt__AnyHolder
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension is a complexType.
///
struct tt__VideoSourceExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "Imaging" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    struct tt__ImagingSettings20*        Imaging                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceExtension2.
    struct tt__VideoSourceExtension2*    Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is a complexType.
///
struct tt__VideoSourceExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Profile is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A media profile consists of a set of media configurations. Media profiles are used by a client
///   to configure properties of a media stream from an NVT.<br/>
///   An NVT shall provide at least one media profile at boot. An NVT should provide ready to use
///   profiles for the most common media configurations that the device offers.<br/>
///   A profile consists of a set of interconnected configuration entities. Configurations are provided
///   by the NVT and can be either static or created dynamically by the NVT. For example, the
///   dynamic configurations can be created by the NVT depending on current available encoding
///   resources.
/// </BLOCKQUOTE></PRE>
struct tt__Profile
{
/// <PRE><BLOCKQUOTE>
///   User readable name of the profile.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video input.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    struct tt__VideoSourceConfiguration*  VideoSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio input.
/// </BLOCKQUOTE></PRE>
/// Element "AudioSourceConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    struct tt__AudioSourceConfiguration*  AudioSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video encoder.
/// </BLOCKQUOTE></PRE>
/// Element "VideoEncoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  VideoEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio encoder.
/// </BLOCKQUOTE></PRE>
/// Element "AudioEncoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the video analytics module and rule engine.
/// </BLOCKQUOTE></PRE>
/// Element "VideoAnalyticsConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  VideoAnalyticsConfiguration    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the pan tilt zoom unit.
/// </BLOCKQUOTE></PRE>
/// Element "PTZConfiguration" of XSD type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    struct tt__PTZConfiguration*         PTZConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the metadata stream.
/// </BLOCKQUOTE></PRE>
/// Element "MetadataConfiguration" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    struct tt__MetadataConfiguration*    MetadataConfiguration          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extensions defined in ONVIF 2.0
/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ProfileExtension.
    struct tt__ProfileExtension*         Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the profile.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A value of true signals that the profile cannot be deleted. Default is false.
/// </BLOCKQUOTE></PRE>
/// Attribute "fixed" of XSD type xs:boolean.
   @enum xsd__boolean*                   fixed                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension is a complexType.
///
struct tt__ProfileExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio output.
/// </BLOCKQUOTE></PRE>
/// Element "AudioOutputConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    struct tt__AudioOutputConfiguration*  AudioOutputConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio decoder.
/// </BLOCKQUOTE></PRE>
/// Element "AudioDecoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    struct tt__AudioDecoderConfiguration*  AudioDecoderConfiguration      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ProfileExtension2.
    struct tt__ProfileExtension2*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension2 is a complexType.
///
struct tt__ProfileExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base type defining the common properties of a configuration.
/// </BLOCKQUOTE></PRE>
struct tt__ConfigurationEntity
{
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is a complexType.
///
struct tt__VideoSourceConfigurationExtension
{
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rotation of captured image.
/// </BLOCKQUOTE></PRE>
/// Element "Rotate" of XSD type "http://www.onvif.org/ver10/schema":Rotate.
    struct tt__Rotate*                   Rotate                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2.
    struct tt__VideoSourceConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is a complexType.
///
struct tt__VideoSourceConfigurationExtension2
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Rotate is a complexType.
///
struct tt__Rotate
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Rotation feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":RotateMode.
    enum tt__RotateMode                  Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure how much degree of clockwise rotation of image for On mode. Omitting this parameter for On mode means 180 degree rotation.
/// </BLOCKQUOTE></PRE>
/// Element "Degree" of XSD type xs:int.
    int*                                 Degree                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RotateExtension.
    struct tt__RotateExtension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RotateExtension is a complexType.
///
struct tt__RotateExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is a complexType.
///
struct tt__VideoSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported range for the capturing area.
/// </BLOCKQUOTE></PRE>
/// Element "BoundsRange" of XSD type "http://www.onvif.org/ver10/schema":IntRectangleRange.
    struct tt__IntRectangleRange*        BoundsRange                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of physical inputs.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeVideoSourceTokensAvailable 1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  VideoSourceTokensAvailable     1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension.
    struct tt__VideoSourceConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is a complexType.
///
struct tt__VideoSourceConfigurationOptionsExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Rotation feature.
/// </BLOCKQUOTE></PRE>
/// Element "Rotate" of XSD type "http://www.onvif.org/ver10/schema":RotateOptions.
    struct tt__RotateOptions*            Rotate                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2.
    struct tt__VideoSourceConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2 is a complexType.
///
struct tt__VideoSourceConfigurationOptionsExtension2
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptions is a complexType.
///
struct tt__RotateOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options of Rotate mode parameter.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__RotateMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__RotateMode* of size 1..unbounded.
    enum tt__RotateMode*                 Mode                           1;
/// <PRE><BLOCKQUOTE>
///   List of supported degree value for rotation.
/// </BLOCKQUOTE></PRE>
/// Element "DegreeList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  DegreeList                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RotateOptionsExtension.
    struct tt__RotateOptionsExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptionsExtension is a complexType.
///
struct tt__RotateOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoResolution is a complexType.
///
struct tt__VideoResolution
{
/// <PRE><BLOCKQUOTE>
///   Number of the columns of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Width" of XSD type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of the lines of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Height" of XSD type xs:int.
    int                                  Height                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoRateControl is a complexType.
///
struct tt__VideoRateControl
{
/// <PRE><BLOCKQUOTE>
///   Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateLimit" of XSD type xs:int.
    int                                  FrameRateLimit                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)
/// </BLOCKQUOTE></PRE>
/// Element "EncodingInterval" of XSD type xs:int.
    int                                  EncodingInterval               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the maximum output bitrate in kbps
/// </BLOCKQUOTE></PRE>
/// Element "BitrateLimit" of XSD type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Configuration is a complexType.
///
struct tt__Mpeg4Configuration
{
/// <PRE><BLOCKQUOTE>
///   Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
/// Element "GovLength" of XSD type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)
/// </BLOCKQUOTE></PRE>
/// Element "Mpeg4Profile" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Profile.
    enum tt__Mpeg4Profile                Mpeg4Profile                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Configuration is a complexType.
///
struct tt__H264Configuration
{
/// <PRE><BLOCKQUOTE>
///   Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
/// Element "GovLength" of XSD type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the H.264 profile, either baseline, main, extended or high
/// </BLOCKQUOTE></PRE>
/// Element "H264Profile" of XSD type "http://www.onvif.org/ver10/schema":H264Profile.
    enum tt__H264Profile                 H264Profile                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is a complexType.
///
struct tt__VideoEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Range of the quality values. A high value means higher quality.
/// </BLOCKQUOTE></PRE>
/// Element "QualityRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 QualityRange                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
/// Element "JPEG" of XSD type "http://www.onvif.org/ver10/schema":JpegOptions.
    struct tt__JpegOptions*              JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Options.
    struct tt__Mpeg4Options*             MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type "http://www.onvif.org/ver10/schema":H264Options.
    struct tt__H264Options*              H264                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension.
    struct tt__VideoEncoderOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is a complexType.
///
struct tt__VideoEncoderOptionsExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges.
/// </BLOCKQUOTE></PRE>
/// Element "JPEG" of XSD type "http://www.onvif.org/ver10/schema":JpegOptions2.
    struct tt__JpegOptions2*             JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Options2.
    struct tt__Mpeg4Options2*            MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type "http://www.onvif.org/ver10/schema":H264Options2.
    struct tt__H264Options2*             H264                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2.
    struct tt__VideoEncoderOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is a complexType.
///
struct tt__VideoEncoderOptionsExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions is a complexType.
///
struct tt__JpegOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options is a complexType.
///
struct tt__Mpeg4Options
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
   $int                                  __sizeMpeg4ProfilesSupported   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               Mpeg4ProfilesSupported         1;
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options is a complexType.
///
struct tt__H264Options
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__H264Profile* is 1..unbounded.
   $int                                  __sizeH264ProfilesSupported    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                H264ProfilesSupported          1;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is a complexType.
///
struct tt__AudioSourceConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Tokens of the audio source the configuration can be used for.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeInputTokensAvailable     1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  InputTokensAvailable           1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension.
    struct tt__AudioSourceOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is a complexType.
///
struct tt__AudioSourceOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is a complexType.
///
struct tt__AudioEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   list of supported AudioEncoderConfigurations
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioEncoderConfigurationOption* is 0..unbounded.
   $int                                  __sizeOptions                  0;
/// Array struct tt__AudioEncoderConfigurationOption* of size 0..unbounded.
    struct tt__AudioEncoderConfigurationOption*  Options                        0;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is a complexType.
///
struct tt__AudioEncoderConfigurationOption
{
/// <PRE><BLOCKQUOTE>
///   The enoding used for audio data (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps for the specified Encoding
/// </BLOCKQUOTE></PRE>
/// Element "BitrateList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  BitrateList                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported Sample Rates in kHz for the specified Encoding
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  SampleRateList                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension is a complexType.
///
struct tt__MetadataConfigurationExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZFilter is a complexType.
///
struct tt__PTZFilter
{
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ status (IDLE, MOVING or UNKNOWN)
/// </BLOCKQUOTE></PRE>
/// Element "Status" of XSD type xs:boolean.
    enum xsd__boolean                    Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ position
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:boolean.
    enum xsd__boolean                    Position                       1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EventSubscription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Subcription handling in the same way as base notification subscription.
/// </BLOCKQUOTE></PRE>
struct tt__EventSubscription
{
/// Element "Filter" of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
    struct _tt__EventSubscription_SubscriptionPolicy
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is a complexType.
///
struct tt__MetadataConfigurationOptions
{
/// Element "PTZStatusFilterOptions" of XSD type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions.
    struct tt__PTZStatusFilterOptions*   PTZStatusFilterOptions         1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension.
    struct tt__MetadataConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension is a complexType.
///
struct tt__MetadataConfigurationOptionsExtension
{
/// <PRE><BLOCKQUOTE>
///   List of supported metadata compression type. Its options shall be chosen from tt:MetadataCompressionType.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 0..unbounded.
   $int                                  __sizeCompressionType          0;
/// Array char** of size 0..unbounded.
    char**                               CompressionType                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2.
    struct tt__MetadataConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2 is a complexType.
///
struct tt__MetadataConfigurationOptionsExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is a complexType.
///
struct tt__PTZStatusFilterOptions
{
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream pan or tilt status information.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltStatusSupported" of XSD type xs:boolean.
    enum xsd__boolean                    PanTiltStatusSupported         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom status inforamtion.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomStatusSupported" of XSD type xs:boolean.
    enum xsd__boolean                    ZoomStatusSupported            1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream the pan or tilt position.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltPositionSupported" of XSD type xs:boolean.
    enum xsd__boolean*                   PanTiltPositionSupported       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom position information.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomPositionSupported" of XSD type xs:boolean.
    enum xsd__boolean*                   ZoomPositionSupported          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension.
    struct tt__PTZStatusFilterOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is a complexType.
///
struct tt__PTZStatusFilterOptionsExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputExtension is a complexType.
///
struct tt__VideoOutputExtension
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is a complexType.
///
struct tt__VideoOutputConfigurationOptions
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is a complexType.
///
struct tt__VideoDecoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode Jpeg streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
/// Element "JpegDecOptions" of XSD type "http://www.onvif.org/ver10/schema":JpegDecOptions.
    struct tt__JpegDecOptions*           JpegDecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode H.264 streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
/// Element "H264DecOptions" of XSD type "http://www.onvif.org/ver10/schema":H264DecOptions.
    struct tt__H264DecOptions*           H264DecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode Mpeg4 streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
/// Element "Mpeg4DecOptions" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4DecOptions.
    struct tt__Mpeg4DecOptions*          Mpeg4DecOptions                0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension.
    struct tt__VideoDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":H264DecOptions is a complexType.
///
struct tt__H264DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 Video Resolutions
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   List of supported H264 Profiles (either baseline, main, extended or high)
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__H264Profile* is 1..unbounded.
   $int                                  __sizeSupportedH264Profiles    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                SupportedH264Profiles          1;
/// <PRE><BLOCKQUOTE>
///   Supported H.264 bitrate range in kbps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedInputBitrate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported H.264 framerate range in fps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedFrameRate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedFrameRate             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegDecOptions is a complexType.
///
struct tt__JpegDecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported Jpeg Video Resolutions
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported Jpeg bitrate range in kbps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedInputBitrate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported Jpeg framerate range in fps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedFrameRate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedFrameRate             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is a complexType.
///
struct tt__Mpeg4DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported Mpeg4 Video Resolutions
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   List of supported Mpeg4 Profiles (either SP or ASP)
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
   $int                                  __sizeSupportedMpeg4Profiles   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               SupportedMpeg4Profiles         1;
/// <PRE><BLOCKQUOTE>
///   Supported Mpeg4 bitrate range in kbps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedInputBitrate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported Mpeg4 framerate range in fps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedFrameRate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SupportedFrameRate             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is a complexType.
///
struct tt__VideoDecoderConfigurationOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is a complexType.
///
struct tt__AudioOutputConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Tokens of the physical Audio outputs (typically one).
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeOutputTokensAvailable    1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  OutputTokensAvailable          1;
/// <PRE><BLOCKQUOTE>
///   An <b>audio</b> channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeSendPrimacyOptions       0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         SendPrimacyOptions             0;
/// <PRE><BLOCKQUOTE>
///   Minimum and maximum level range supported for this Output.
/// </BLOCKQUOTE></PRE>
/// Element "OutputLevelRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 OutputLevelRange               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is a complexType.
///
struct tt__AudioDecoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode AAC encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
/// Element "AACDecOptions" of XSD type "http://www.onvif.org/ver10/schema":AACDecOptions.
    struct tt__AACDecOptions*            AACDecOptions                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G711 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
/// Element "G711DecOptions" of XSD type "http://www.onvif.org/ver10/schema":G711DecOptions.
    struct tt__G711DecOptions*           G711DecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G726 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
/// Element "G726DecOptions" of XSD type "http://www.onvif.org/ver10/schema":G726DecOptions.
    struct tt__G726DecOptions*           G726DecOptions                 0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension.
    struct tt__AudioDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":G711DecOptions is a complexType.
///
struct tt__G711DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  SampleRateRange                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AACDecOptions is a complexType.
///
struct tt__AACDecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  SampleRateRange                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":G726DecOptions is a complexType.
///
struct tt__G726DecOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    struct tt__IntList*                  SampleRateRange                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is a complexType.
///
struct tt__AudioDecoderConfigurationOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MulticastConfiguration is a complexType.
///
struct tt__MulticastConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The multicast address (if this address is set to 0 no multicast streaming is enaled)
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type "http://www.onvif.org/ver10/schema":IPAddress.
    struct tt__IPAddress*                Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The RTP mutlicast destination port. A device may support RTCP. In this case the port value shall be even to allow the corresponding RTCP stream to be mapped to the next higher (odd) destination port number as defined in the RTSP specification.
/// </BLOCKQUOTE></PRE>
/// Element "Port" of XSD type xs:int.
    int                                  Port                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   In case of IPv6 the TTL value is assumed as the hop limit. Note that for IPV6 and administratively scoped IPv4 multicast the primary use for hop limit / TTL is to prevent packets from (endlessly) circulating and not limiting scope. In these cases the address contains the scope.
/// </BLOCKQUOTE></PRE>
/// Element "TTL" of XSD type xs:int.
    int                                  TTL                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Read only property signalling that streaming is persistant. Use the methods StartMulticastStreaming and StopMulticastStreaming to switch its state.
/// </BLOCKQUOTE></PRE>
/// Element "AutoStart" of XSD type xs:boolean.
    enum xsd__boolean                    AutoStart                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":StreamSetup is a complexType.
///
struct tt__StreamSetup
{
/// <PRE><BLOCKQUOTE>
///   Defines if a multicast or unicast stream is requested
/// </BLOCKQUOTE></PRE>
/// Element "Stream" of XSD type "http://www.onvif.org/ver10/schema":StreamType.
    enum tt__StreamType                  Stream                         1;	///< Required element.
/// Element "Transport" of XSD type "http://www.onvif.org/ver10/schema":Transport.
    struct tt__Transport*                Transport                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Transport is a complexType.
///
struct tt__Transport
{
/// <PRE><BLOCKQUOTE>
///   Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP
/// </BLOCKQUOTE></PRE>
/// Element "Protocol" of XSD type "http://www.onvif.org/ver10/schema":TransportProtocol.
    enum tt__TransportProtocol           Protocol                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to describe further tunnel options. This element is normally not needed
/// </BLOCKQUOTE></PRE>
/// Element "Tunnel" of XSD type "http://www.onvif.org/ver10/schema":Transport.
    struct tt__Transport*                Tunnel                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaUri is a complexType.
///
struct tt__MediaUri
{
/// <PRE><BLOCKQUOTE>
///   Stable Uri to be used for requesting the media stream
/// </BLOCKQUOTE></PRE>
/// Element "Uri" of XSD type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
/// Element "InvalidAfterConnect" of XSD type xs:boolean.
    enum xsd__boolean                    InvalidAfterConnect            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
/// Element "InvalidAfterReboot" of XSD type xs:boolean.
    enum xsd__boolean                    InvalidAfterReboot             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes
/// </BLOCKQUOTE></PRE>
/// Element "Timeout" of XSD type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Scope is a complexType.
///
struct tt__Scope
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the scope is fixed or configurable.
/// </BLOCKQUOTE></PRE>
/// Element "ScopeDef" of XSD type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum tt__ScopeDefinition             ScopeDef                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Scope item URI.
/// </BLOCKQUOTE></PRE>
/// Element "ScopeItem" of XSD type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
///
struct tt__NetworkInterfaceExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "InterfaceType" of XSD type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Extension point prepared for future 802.3 configuration.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Dot3Configuration* is 0..unbounded.
   $int                                  __sizeDot3                     0;
/// Array struct tt__Dot3Configuration* of size 0..unbounded.
    struct tt__Dot3Configuration*        Dot3                           0;
/// Size of array of struct tt__Dot11Configuration* is 0..unbounded.
   $int                                  __sizeDot11                    0;
/// Array struct tt__Dot11Configuration* of size 0..unbounded.
    struct tt__Dot11Configuration*       Dot11                          0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2.
    struct tt__NetworkInterfaceExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot3Configuration is a complexType.
///
struct tt__Dot3Configuration
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is a complexType.
///
struct tt__NetworkInterfaceExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
///
struct tt__NetworkInterfaceLink
{
/// <PRE><BLOCKQUOTE>
///   Configured link settings.
/// </BLOCKQUOTE></PRE>
/// Element "AdminSettings" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current active link settings.
/// </BLOCKQUOTE></PRE>
/// Element "OperSettings" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Integer indicating interface type, for example: 6 is ethernet.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceType" of XSD type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
///
struct tt__NetworkInterfaceConnectionSetting
{
/// <PRE><BLOCKQUOTE>
///   Auto negotiation on/off.
/// </BLOCKQUOTE></PRE>
/// Element "AutoNegotiation" of XSD type xs:boolean.
    enum xsd__boolean                    AutoNegotiation                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:int.
    int                                  Speed                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duplex type, Half or Full.
/// </BLOCKQUOTE></PRE>
/// Element "Duplex" of XSD type "http://www.onvif.org/ver10/schema":Duplex.
    enum tt__Duplex                      Duplex                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
///
struct tt__NetworkInterfaceInfo
{
/// <PRE><BLOCKQUOTE>
///   Network interface name, for example eth0.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type xs:string.
    char*                                Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Network interface MAC address.
/// </BLOCKQUOTE></PRE>
/// Element "HwAddress" of XSD type "http://www.onvif.org/ver10/schema":HwAddress.
    tt__HwAddress                        HwAddress                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
/// Element "MTU" of XSD type xs:int.
    int*                                 MTU                            0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
///
struct tt__IPv6NetworkInterface
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv6 configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Config" of XSD type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    struct tt__IPv6Configuration*        Config                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
///
struct tt__IPv4NetworkInterface
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Config" of XSD type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    struct tt__IPv4Configuration*        Config                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
///
struct tt__IPv4Configuration
{
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
   $int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      Manual                         0;
/// <PRE><BLOCKQUOTE>
///   Link local address.
/// </BLOCKQUOTE></PRE>
/// Element "LinkLocal" of XSD type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    struct tt__PrefixedIPv4Address*      LinkLocal                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address configured by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    struct tt__PrefixedIPv4Address*      FromDHCP                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type xs:boolean.
    enum xsd__boolean                    DHCP                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
///
struct tt__IPv6Configuration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
/// Element "AcceptRouterAdvert" of XSD type xs:boolean.
    enum xsd__boolean*                   AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration       DHCP                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of manually entered IPv6 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      Manual                         0;
/// <PRE><BLOCKQUOTE>
///   List of link local IPv6 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeLinkLocal                0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      LinkLocal                      0;
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeFromDHCP                 0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      FromDHCP                       0;
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using router advertisment.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeFromRA                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      FromRA                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    struct tt__IPv6ConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
///
struct tt__IPv6ConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
///
struct tt__NetworkProtocol
{
/// <PRE><BLOCKQUOTE>
///   Network protocol type string.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum tt__NetworkProtocolType         Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the protocol is enabled or not.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The port that is used by the protocol.
/// </BLOCKQUOTE></PRE>
/// Size of array of int* is 1..unbounded.
   $int                                  __sizePort                     1;
/// Array int* of size 1..unbounded.
    int*                                 Port                           1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    struct tt__NetworkProtocolExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
///
struct tt__NetworkProtocolExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
///
struct tt__NetworkHost
{
/// <PRE><BLOCKQUOTE>
///   Network host type: IPv4, IPv6 or DNS.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum tt__NetworkHostType             Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4Address" of XSD type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address.
/// </BLOCKQUOTE></PRE>
/// Element "IPv6Address" of XSD type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      IPv6Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
/// Element "DNSname" of XSD type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          DNSname                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    struct tt__NetworkHostExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
///
struct tt__NetworkHostExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
///
struct tt__IPAddress
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the address is an IPv4 or IPv6 address.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":IPType.
    enum tt__IPType                      Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4Address" of XSD type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
/// Element "IPv6Address" of XSD type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      IPv6Address                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
///
struct tt__PrefixedIPv4Address
{
/// <PRE><BLOCKQUOTE>
///   IPv4 address
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
/// Element "PrefixLength" of XSD type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
///
struct tt__PrefixedIPv6Address
{
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
/// Element "PrefixLength" of XSD type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
///
struct tt__HostnameInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether the hostname is obtained from DHCP or not.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the hostname.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type xs:token.
    xsd__token                           Name                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    struct tt__HostnameInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
///
struct tt__HostnameInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
///
struct tt__DNSInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DNS information is retrieved from DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Search domain.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__token* is 0..unbounded.
   $int                                  __sizeSearchDomain             0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          SearchDomain                   0;
/// <PRE><BLOCKQUOTE>
///   List of DNS addresses received from DHCP.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__IPAddress* is 0..unbounded.
   $int                                  __sizeDNSFromDHCP              0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSFromDHCP                    0;
/// <PRE><BLOCKQUOTE>
///   List of manually entered DNS addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__IPAddress* is 0..unbounded.
   $int                                  __sizeDNSManual                0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSManual                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    struct tt__DNSInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
///
struct tt__DNSInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
///
struct tt__NTPInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates if NTP information is to be retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of NTP addresses retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
   $int                                  __sizeNTPFromDHCP              0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPFromDHCP                    0;
/// <PRE><BLOCKQUOTE>
///   List of manually entered NTP addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
   $int                                  __sizeNTPManual                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPManual                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    struct tt__NTPInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
///
struct tt__NTPInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
///
struct tt__DynamicDNSInformation
{
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Time to live.
/// </BLOCKQUOTE></PRE>
/// Element "TTL" of XSD type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    struct tt__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
///
struct tt__DynamicDNSInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
///
struct tt__NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Link" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
/// Element "MTU" of XSD type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4" of XSD type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    struct tt__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv6" of XSD type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    struct tt__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    struct tt__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
///
struct tt__NetworkInterfaceSetConfigurationExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Size of array of struct tt__Dot3Configuration* is 0..unbounded.
   $int                                  __sizeDot3                     0;
/// Array struct tt__Dot3Configuration* of size 0..unbounded.
    struct tt__Dot3Configuration*        Dot3                           0;
/// Size of array of struct tt__Dot11Configuration* is 0..unbounded.
   $int                                  __sizeDot11                    0;
/// Array struct tt__Dot11Configuration* of size 0..unbounded.
    struct tt__Dot11Configuration*       Dot11                          0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2.
    struct tt__NetworkInterfaceSetConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
///
struct tt__IPv6NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
/// Element "AcceptRouterAdvert" of XSD type xs:boolean.
    enum xsd__boolean*                   AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv6 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      Manual                         0;
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration*      DHCP                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
///
struct tt__IPv4NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
   $int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      Manual                         0;
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type xs:boolean.
    enum xsd__boolean*                   DHCP                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
///
struct tt__NetworkGateway
{
/// <PRE><BLOCKQUOTE>
///   IPv4 address string.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__IPv4Address* is 0..unbounded.
   $int                                  __sizeIPv4Address              0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     IPv4Address                    0;
/// <PRE><BLOCKQUOTE>
///   IPv6 address string.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__IPv6Address* is 0..unbounded.
   $int                                  __sizeIPv6Address              0;
/// Array tt__IPv6Address* of size 0..unbounded.
    tt__IPv6Address*                     IPv6Address                    0;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
///
struct tt__NetworkZeroConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier of network interface.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the zero-configuration is enabled or not.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The zero-configuration IPv4 address(es)
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__IPv4Address* is 0..unbounded.
   $int                                  __sizeAddresses                0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     Addresses                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    struct tt__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
///
struct tt__NetworkZeroConfigurationExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional array holding the configuration for the second and possibly further interfaces.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkZeroConfiguration* is 0..unbounded.
   $int                                  __sizeAdditional               0;
/// Array struct tt__NetworkZeroConfiguration* of size 0..unbounded.
    struct tt__NetworkZeroConfiguration*  Additional                     0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2.
    struct tt__NetworkZeroConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2 is a complexType.
///
struct tt__NetworkZeroConfigurationExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
///
struct tt__IPAddressFilter
{
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum tt__IPAddressFilterType         Type                           1;	///< Required element.
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
   $int                                  __sizeIPv4Address              0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      IPv4Address                    0;
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
   $int                                  __sizeIPv6Address              0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      IPv6Address                    0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    struct tt__IPAddressFilterExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
///
struct tt__IPAddressFilterExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Configuration is a complexType.
///
struct tt__Dot11Configuration
{
/// Element "SSID" of XSD type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":Dot11StationMode.
    enum tt__Dot11StationMode            Mode                           1;	///< Required element.
/// Element "Alias" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Alias                          1;	///< Required element.
/// Element "Priority" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority.
    tt__NetworkInterfaceConfigPriority   Priority                       1;	///< Required element.
/// Element "Security" of XSD type "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration.
    struct tt__Dot11SecurityConfiguration*  Security                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is a complexType.
///
struct tt__Dot11SecurityConfiguration
{
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":Dot11SecurityMode.
    enum tt__Dot11SecurityMode           Mode                           1;	///< Required element.
/// Element "Algorithm" of XSD type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                Algorithm                      0;	///< Optional element.
/// Element "PSK" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSKSet.
    struct tt__Dot11PSKSet*              PSK                            0;	///< Optional element.
/// Element "Dot1X" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1X                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension.
    struct tt__Dot11SecurityConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is a complexType.
///
struct tt__Dot11SecurityConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSet is a complexType.
///
struct tt__Dot11PSKSet
{
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex<br/>
///   Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
/// </BLOCKQUOTE></PRE>
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSK.
    tt__Dot11PSK*                        Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and
///   each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.<br/>
///   If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
/// </BLOCKQUOTE></PRE>
/// Element "Passphrase" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase.
    tt__Dot11PSKPassphrase               Passphrase                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension.
    struct tt__Dot11PSKSetExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is a complexType.
///
struct tt__Dot11PSKSetExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is a complexType.
///
struct tt__NetworkInterfaceSetConfigurationExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Capabilities is a complexType.
///
struct tt__Dot11Capabilities
{
/// Element "TKIP" of XSD type xs:boolean.
    enum xsd__boolean                    TKIP                           1;	///< Required element.
/// Element "ScanAvailableNetworks" of XSD type xs:boolean.
    enum xsd__boolean                    ScanAvailableNetworks          1;	///< Required element.
/// Element "MultipleConfiguration" of XSD type xs:boolean.
    enum xsd__boolean                    MultipleConfiguration          1;	///< Required element.
/// Element "AdHocStationMode" of XSD type xs:boolean.
    enum xsd__boolean                    AdHocStationMode               1;	///< Required element.
/// Element "WEP" of XSD type xs:boolean.
    enum xsd__boolean                    WEP                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Status is a complexType.
///
struct tt__Dot11Status
{
/// Element "SSID" of XSD type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of XSD type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// Element "PairCipher" of XSD type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                PairCipher                     0;	///< Optional element.
/// Element "GroupCipher" of XSD type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                GroupCipher                    0;	///< Optional element.
/// Element "SignalStrength" of XSD type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "ActiveConfigAlias" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ActiveConfigAlias              1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is a complexType.
///
struct tt__Dot11AvailableNetworks
{
/// Element "SSID" of XSD type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of XSD type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   See IEEE802.11 7.3.2.25.2 for details.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__Dot11AuthAndMangementSuite* is 0..unbounded.
   $int                                  __sizeAuthAndMangementSuite    0;
/// Array enum tt__Dot11AuthAndMangementSuite* of size 0..unbounded.
    enum tt__Dot11AuthAndMangementSuite*  AuthAndMangementSuite          0;
/// Size of array of enum tt__Dot11Cipher* is 0..unbounded.
   $int                                  __sizePairCipher               0;
/// Array enum tt__Dot11Cipher* of size 0..unbounded.
    enum tt__Dot11Cipher*                PairCipher                     0;
/// Size of array of enum tt__Dot11Cipher* is 0..unbounded.
   $int                                  __sizeGroupCipher              0;
/// Array enum tt__Dot11Cipher* of size 0..unbounded.
    enum tt__Dot11Cipher*                GroupCipher                    0;
/// Element "SignalStrength" of XSD type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension.
    struct tt__Dot11AvailableNetworksExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is a complexType.
///
struct tt__Dot11AvailableNetworksExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
///
struct tt__Capabilities
{
/// <PRE><BLOCKQUOTE>
///   Analytics capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Analytics" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    struct tt__AnalyticsCapabilities*    Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Device capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Device" of XSD type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    struct tt__DeviceCapabilities*       Device                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Event capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Events" of XSD type "http://www.onvif.org/ver10/schema":EventCapabilities.
    struct tt__EventCapabilities*        Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Imaging capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Imaging" of XSD type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    struct tt__ImagingCapabilities*      Imaging                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Media capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Media" of XSD type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    struct tt__MediaCapabilities*        Media                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   PTZ capabilities
/// </BLOCKQUOTE></PRE>
/// Element "PTZ" of XSD type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    struct tt__PTZCapabilities*          PTZ                            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    struct tt__CapabilitiesExtension*    Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
///
struct tt__CapabilitiesExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "DeviceIO" of XSD type "http://www.onvif.org/ver10/schema":DeviceIOCapabilities.
    struct tt__DeviceIOCapabilities*     DeviceIO                       0;	///< Optional element.
/// Element "Display" of XSD type "http://www.onvif.org/ver10/schema":DisplayCapabilities.
    struct tt__DisplayCapabilities*      Display                        0;	///< Optional element.
/// Element "Recording" of XSD type "http://www.onvif.org/ver10/schema":RecordingCapabilities.
    struct tt__RecordingCapabilities*    Recording                      0;	///< Optional element.
/// Element "Search" of XSD type "http://www.onvif.org/ver10/schema":SearchCapabilities.
    struct tt__SearchCapabilities*       Search                         0;	///< Optional element.
/// Element "Replay" of XSD type "http://www.onvif.org/ver10/schema":ReplayCapabilities.
    struct tt__ReplayCapabilities*       Replay                         0;	///< Optional element.
/// Element "Receiver" of XSD type "http://www.onvif.org/ver10/schema":ReceiverCapabilities.
    struct tt__ReceiverCapabilities*     Receiver                       0;	///< Optional element.
/// Element "AnalyticsDevice" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities.
    struct tt__AnalyticsDeviceCapabilities*  AnalyticsDevice                0;	///< Optional element.
/// Element "Extensions" of XSD type "http://www.onvif.org/ver10/schema":CapabilitiesExtension2.
    struct tt__CapabilitiesExtension2*   Extensions                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is a complexType.
///
struct tt__CapabilitiesExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
///
struct tt__AnalyticsCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Analytics service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not rules are supported.
/// </BLOCKQUOTE></PRE>
/// Element "RuleSupport" of XSD type xs:boolean.
    enum xsd__boolean                    RuleSupport                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not modules are supported.
/// </BLOCKQUOTE></PRE>
/// Element "AnalyticsModuleSupport" of XSD type xs:boolean.
    enum xsd__boolean                    AnalyticsModuleSupport         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
///
struct tt__DeviceCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Device service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Network" of XSD type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    struct tt__NetworkCapabilities*      Network                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "System" of XSD type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    struct tt__SystemCapabilities*       System                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   I/O capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "IO" of XSD type "http://www.onvif.org/ver10/schema":IOCapabilities.
    struct tt__IOCapabilities*           IO                             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Security" of XSD type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    struct tt__SecurityCapabilities*     Security                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    struct tt__DeviceCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
///
struct tt__DeviceCapabilitiesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
///
struct tt__EventCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Event service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
/// Element "WSSubscriptionPolicySupport" of XSD type xs:boolean.
    enum xsd__boolean                    WSSubscriptionPolicySupport    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
/// Element "WSPullPointSupport" of XSD type xs:boolean.
    enum xsd__boolean                    WSPullPointSupport             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
/// Element "WSPausableSubscriptionManagerInterfaceSupport" of XSD type xs:boolean.
    enum xsd__boolean                    WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
///
struct tt__IOCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Number of input connectors.
/// </BLOCKQUOTE></PRE>
/// Element "InputConnectors" of XSD type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Number of relay outputs.
/// </BLOCKQUOTE></PRE>
/// Element "RelayOutputs" of XSD type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    struct tt__IOCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
///
struct tt__IOCapabilitiesExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Auxiliary" of XSD type xs:boolean.
    enum xsd__boolean*                   Auxiliary                      0;	///< Optional element.
/// Size of array of tt__AuxiliaryData* is 0..unbounded.
   $int                                  __sizeAuxiliaryCommands        0;
/// Array tt__AuxiliaryData* of size 0..unbounded.
    tt__AuxiliaryData*                   AuxiliaryCommands              0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2.
    struct tt__IOCapabilitiesExtension2*  Extension                      1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is a complexType.
///
struct tt__IOCapabilitiesExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
///
struct tt__MediaCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Media service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "StreamingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    struct tt__RealTimeStreamingCapabilities*  StreamingCapabilities          1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    struct tt__MediaCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
///
struct tt__MediaCapabilitiesExtension
{
/// Element "ProfileCapabilities" of XSD type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    struct tt__ProfileCapabilities*      ProfileCapabilities            1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
///
struct tt__RealTimeStreamingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP multicast is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RTPMulticast" of XSD type xs:boolean.
    enum xsd__boolean*                   RTPMulticast                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP over TCP is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_TCP" of XSD type xs:boolean.
    enum xsd__boolean*                   RTP_USCORETCP                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP/RTSP/TCP is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_RTSP_TCP" of XSD type xs:boolean.
    enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    struct tt__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
///
struct tt__RealTimeStreamingCapabilitiesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
///
struct tt__ProfileCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfProfiles" of XSD type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
///
struct tt__NetworkCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IP filtering is supported.
/// </BLOCKQUOTE></PRE>
/// Element "IPFilter" of XSD type xs:boolean.
    enum xsd__boolean*                   IPFilter                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not zeroconf is supported.
/// </BLOCKQUOTE></PRE>
/// Element "ZeroConfiguration" of XSD type xs:boolean.
    enum xsd__boolean*                   ZeroConfiguration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "IPVersion6" of XSD type xs:boolean.
    enum xsd__boolean*                   IPVersion6                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not is supported.
/// </BLOCKQUOTE></PRE>
/// Element "DynDNS" of XSD type xs:boolean.
    enum xsd__boolean*                   DynDNS                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    struct tt__NetworkCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
///
struct tt__NetworkCapabilitiesExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Dot11Configuration" of XSD type xs:boolean.
    enum xsd__boolean*                   Dot11Configuration             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2.
    struct tt__NetworkCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is a complexType.
///
struct tt__NetworkCapabilitiesExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
///
struct tt__SecurityCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.1 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "TLS1.1" of XSD type xs:boolean.
    enum xsd__boolean                    TLS1_x002e1                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.2 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "TLS1.2" of XSD type xs:boolean.
    enum xsd__boolean                    TLS1_x002e2                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not onboard key generation is supported.
/// </BLOCKQUOTE></PRE>
/// Element "OnboardKeyGeneration" of XSD type xs:boolean.
    enum xsd__boolean                    OnboardKeyGeneration           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not access policy configuration is supported.
/// </BLOCKQUOTE></PRE>
/// Element "AccessPolicyConfig" of XSD type xs:boolean.
    enum xsd__boolean                    AccessPolicyConfig             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security X.509 token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "X.509Token" of XSD type xs:boolean.
    enum xsd__boolean                    X_x002e509Token                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security SAML token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "SAMLToken" of XSD type xs:boolean.
    enum xsd__boolean                    SAMLToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security Kerberos token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "KerberosToken" of XSD type xs:boolean.
    enum xsd__boolean                    KerberosToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security REL token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RELToken" of XSD type xs:boolean.
    enum xsd__boolean                    RELToken                       1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    struct tt__SecurityCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
///
struct tt__SecurityCapabilitiesExtension
{
/// Element "TLS1.0" of XSD type xs:boolean.
    enum xsd__boolean                    TLS1_x002e0                    1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2.
    struct tt__SecurityCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is a complexType.
///
struct tt__SecurityCapabilitiesExtension2
{
/// Element "Dot1X" of XSD type xs:boolean.
    enum xsd__boolean                    Dot1X                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
/// Size of array of int* is 0..unbounded.
   $int                                  __sizeSupportedEAPMethod       0;
/// Array int* of size 0..unbounded.
    int*                                 SupportedEAPMethod             0;
/// Element "RemoteUserHandling" of XSD type xs:boolean.
    enum xsd__boolean                    RemoteUserHandling             1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
///
struct tt__SystemCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Discovery resolve requests are supported.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryResolve" of XSD type xs:boolean.
    enum xsd__boolean                    DiscoveryResolve               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Discovery Bye is supported.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryBye" of XSD type xs:boolean.
    enum xsd__boolean                    DiscoveryBye                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not remote discovery is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RemoteDiscovery" of XSD type xs:boolean.
    enum xsd__boolean                    RemoteDiscovery                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system backup is supported.
/// </BLOCKQUOTE></PRE>
/// Element "SystemBackup" of XSD type xs:boolean.
    enum xsd__boolean                    SystemBackup                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system logging is supported.
/// </BLOCKQUOTE></PRE>
/// Element "SystemLogging" of XSD type xs:boolean.
    enum xsd__boolean                    SystemLogging                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not firmware upgrade is supported.
/// </BLOCKQUOTE></PRE>
/// Element "FirmwareUpgrade" of XSD type xs:boolean.
    enum xsd__boolean                    FirmwareUpgrade                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates supported ONVIF version(s).
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__OnvifVersion* is 1..unbounded.
   $int                                  __sizeSupportedVersions        1;
/// Array struct tt__OnvifVersion* of size 1..unbounded.
    struct tt__OnvifVersion*             SupportedVersions              1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    struct tt__SystemCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
///
struct tt__SystemCapabilitiesExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "HttpFirmwareUpgrade" of XSD type xs:boolean.
    enum xsd__boolean*                   HttpFirmwareUpgrade            0;	///< Optional element.
/// Element "HttpSystemBackup" of XSD type xs:boolean.
    enum xsd__boolean*                   HttpSystemBackup               0;	///< Optional element.
/// Element "HttpSystemLogging" of XSD type xs:boolean.
    enum xsd__boolean*                   HttpSystemLogging              0;	///< Optional element.
/// Element "HttpSupportInformation" of XSD type xs:boolean.
    enum xsd__boolean*                   HttpSupportInformation         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2.
    struct tt__SystemCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is a complexType.
///
struct tt__SystemCapabilitiesExtension2
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
///
struct tt__OnvifVersion
{
/// <PRE><BLOCKQUOTE>
///   Major version number.
/// </BLOCKQUOTE></PRE>
/// Element "Major" of XSD type xs:int.
    int                                  Major                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Two digit minor version number (e.g. X.0.1 maps to "01" and X.2.1 maps to "21" where X stands for Major version number).
/// </BLOCKQUOTE></PRE>
/// Element "Minor" of XSD type xs:int.
    int                                  Minor                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
///
struct tt__ImagingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Imaging service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
///
struct tt__PTZCapabilities
{
/// <PRE><BLOCKQUOTE>
///   PTZ service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is a complexType.
///
struct tt__DeviceIOCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "VideoSources" of XSD type xs:int.
    int                                  VideoSources                   1;	///< Required element.
/// Element "VideoOutputs" of XSD type xs:int.
    int                                  VideoOutputs                   1;	///< Required element.
/// Element "AudioSources" of XSD type xs:int.
    int                                  AudioSources                   1;	///< Required element.
/// Element "AudioOutputs" of XSD type xs:int.
    int                                  AudioOutputs                   1;	///< Required element.
/// Element "RelayOutputs" of XSD type xs:int.
    int                                  RelayOutputs                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DisplayCapabilities is a complexType.
///
struct tt__DisplayCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication that the SetLayout command supports only predefined layouts.
/// </BLOCKQUOTE></PRE>
/// Element "FixedLayout" of XSD type xs:boolean.
    enum xsd__boolean                    FixedLayout                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingCapabilities is a complexType.
///
struct tt__RecordingCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "ReceiverSource" of XSD type xs:boolean.
    enum xsd__boolean                    ReceiverSource                 1;	///< Required element.
/// Element "MediaProfileSource" of XSD type xs:boolean.
    enum xsd__boolean                    MediaProfileSource             1;	///< Required element.
/// Element "DynamicRecordings" of XSD type xs:boolean.
    enum xsd__boolean                    DynamicRecordings              1;	///< Required element.
/// Element "DynamicTracks" of XSD type xs:boolean.
    enum xsd__boolean                    DynamicTracks                  1;	///< Required element.
/// Element "MaxStringLength" of XSD type xs:int.
    int                                  MaxStringLength                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SearchCapabilities is a complexType.
///
struct tt__SearchCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "MetadataSearch" of XSD type xs:boolean.
    enum xsd__boolean                    MetadataSearch                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayCapabilities is a complexType.
///
struct tt__ReplayCapabilities
{
/// <PRE><BLOCKQUOTE>
///   The address of the replay service.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverCapabilities is a complexType.
///
struct tt__ReceiverCapabilities
{
/// <PRE><BLOCKQUOTE>
///   The address of the receiver service.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP multicast streams.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_Multicast" of XSD type xs:boolean.
    enum xsd__boolean                    RTP_USCOREMulticast            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/TCP streams
/// </BLOCKQUOTE></PRE>
/// Element "RTP_TCP" of XSD type xs:boolean.
    enum xsd__boolean                    RTP_USCORETCP                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/RTSP/TCP streams.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_RTSP_TCP" of XSD type xs:boolean.
    enum xsd__boolean                    RTP_USCORERTSP_USCORETCP       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of receivers supported by the device.
/// </BLOCKQUOTE></PRE>
/// Element "SupportedReceivers" of XSD type xs:int.
    int                                  SupportedReceivers             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum allowed length for RTSP URIs.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumRTSPURILength" of XSD type xs:int.
    int                                  MaximumRTSPURILength           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is a complexType.
///
struct tt__AnalyticsDeviceCapabilities
{
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Obsolete property.
/// </BLOCKQUOTE></PRE>
/// Element "RuleSupport" of XSD type xs:boolean.
    enum xsd__boolean*                   RuleSupport                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension.
    struct tt__AnalyticsDeviceExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is a complexType.
///
struct tt__AnalyticsDeviceExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
///
struct tt__SystemLog
{
/// <PRE><BLOCKQUOTE>
///   The log information as attachment data.
/// </BLOCKQUOTE></PRE>
/// Element "Binary" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The log information as character data.
/// </BLOCKQUOTE></PRE>
/// Element "String" of XSD type xs:string.
    char*                                String                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
///
struct tt__SupportInformation
{
/// <PRE><BLOCKQUOTE>
///   The support information as attachment data.
/// </BLOCKQUOTE></PRE>
/// Element "Binary" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The support information as character data.
/// </BLOCKQUOTE></PRE>
/// Element "String" of XSD type xs:string.
    char*                                String                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
///
struct tt__BinaryData
{
/// <PRE><BLOCKQUOTE>
///   base64 encoded binary data.
/// </BLOCKQUOTE></PRE>
/// Element "Data" of XSD type xs:base64Binary.
    struct xsd__base64Binary             Data                           1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @char*                                xmime__contentType             0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
///
struct tt__AttachmentData
{
/// Imported element reference "http://www.w3.org/2004/08/xop/include":Include.
    _xop__Include                        xop__Include                   1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @char*                                xmime__contentType             0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
///
struct tt__BackupFile
{
/// Element "Name" of XSD type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Data                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUriList is a complexType.
///
struct tt__SystemLogUriList
{
/// Size of array of struct tt__SystemLogUri* is 0..unbounded.
   $int                                  __sizeSystemLog                0;
/// Array struct tt__SystemLogUri* of size 0..unbounded.
    struct tt__SystemLogUri*             SystemLog                      0;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUri is a complexType.
///
struct tt__SystemLogUri
{
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               Type                           1;	///< Required element.
/// Element "Uri" of XSD type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   General date time inforamtion returned by the GetSystemDateTime method.
/// </BLOCKQUOTE></PRE>
struct tt__SystemDateTime
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the time is set manully or through NTP.
/// </BLOCKQUOTE></PRE>
/// Element "DateTimeType" of XSD type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative indicator whether daylight savings is currently on/off.
/// </BLOCKQUOTE></PRE>
/// Element "DaylightSavings" of XSD type xs:boolean.
    enum xsd__boolean                    DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Timezone information in Posix format.
/// </BLOCKQUOTE></PRE>
/// Element "TimeZone" of XSD type "http://www.onvif.org/ver10/schema":TimeZone.
    struct tt__TimeZone*                 TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Current system date and time in UTC format. This field is mandatory since version 2.0.
/// </BLOCKQUOTE></PRE>
/// Element "UTCDateTime" of XSD type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 UTCDateTime                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in local format.
/// </BLOCKQUOTE></PRE>
/// Element "LocalDateTime" of XSD type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 LocalDateTime                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    struct tt__SystemDateTimeExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
///
struct tt__SystemDateTimeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":DateTime is a complexType.
///
struct tt__DateTime
{
/// Element "Time" of XSD type "http://www.onvif.org/ver10/schema":Time.
    struct tt__Time*                     Time                           1;	///< Required element.
/// Element "Date" of XSD type "http://www.onvif.org/ver10/schema":Date.
    struct tt__Date*                     Date                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Date is a complexType.
///
struct tt__Date
{
/// Element "Year" of XSD type xs:int.
    int                                  Year                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 12.
/// </BLOCKQUOTE></PRE>
/// Element "Month" of XSD type xs:int.
    int                                  Month                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 31.
/// </BLOCKQUOTE></PRE>
/// Element "Day" of XSD type xs:int.
    int                                  Day                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Time is a complexType.
///
struct tt__Time
{
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 23.
/// </BLOCKQUOTE></PRE>
/// Element "Hour" of XSD type xs:int.
    int                                  Hour                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 59.
/// </BLOCKQUOTE></PRE>
/// Element "Minute" of XSD type xs:int.
    int                                  Minute                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 61 (typically 59).
/// </BLOCKQUOTE></PRE>
/// Element "Second" of XSD type xs:int.
    int                                  Second                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/>
///   Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/>
///   CET = designation for standard time when daylight saving is not in force<br/>
///   -1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/>
///   CEST = designation when daylight saving is in force ("Central European Summer Time")<br/>
///   , = no offset number between code and comma, so default to one hour ahead for daylight saving<br/>
///   M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/>
///   /2, = the local time when the switch occurs = 2 a.m. in this case<br/>
///   M10.5.0 = when daylight saving ends = the last Sunday in October.<br/>
///   /3, = the local time when the switch occurs = 3 a.m. in this case<br/>
/// </BLOCKQUOTE></PRE>
struct tt__TimeZone
{
/// <PRE><BLOCKQUOTE>
///   Posix timezone string.
/// </BLOCKQUOTE></PRE>
/// Element "TZ" of XSD type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":RemoteUser is a complexType.
///
struct tt__RemoteUser
{
/// Element "Username" of XSD type xs:string.
    char*                                Username                       1;	///< Required element.
/// Element "Password" of XSD type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element "UseDerivedPassword" of XSD type xs:boolean.
    enum xsd__boolean                    UseDerivedPassword             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":User is a complexType.
///
struct tt__User
{
/// <PRE><BLOCKQUOTE>
///   Username string.
/// </BLOCKQUOTE></PRE>
/// Element "Username" of XSD type xs:string.
    char*                                Username                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Password string.
/// </BLOCKQUOTE></PRE>
/// Element "Password" of XSD type xs:string.
    char*                                Password                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User level string.
/// </BLOCKQUOTE></PRE>
/// Element "UserLevel" of XSD type "http://www.onvif.org/ver10/schema":UserLevel.
    enum tt__UserLevel                   UserLevel                      1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":UserExtension.
    struct tt__UserExtension*            Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
///
struct tt__UserExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is a complexType.
///
struct tt__CertificateGenerationParameters
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// Element "Subject" of XSD type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// Element "ValidNotBefore" of XSD type xs:token.
    xsd__token                           ValidNotBefore                 0;	///< Optional element.
/// Element "ValidNotAfter" of XSD type xs:token.
    xsd__token                           ValidNotAfter                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension.
    struct tt__CertificateGenerationParametersExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is a complexType.
///
struct tt__CertificateGenerationParametersExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Certificate is a complexType.
///
struct tt__Certificate
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
/// Element "Certificate" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Certificate                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
///
struct tt__CertificateStatus
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a certificate is used in a HTTPS configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Status" of XSD type xs:boolean.
    enum xsd__boolean                    Status                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is a complexType.
///
struct tt__CertificateWithPrivateKey
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// Element "Certificate" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Certificate                    1;	///< Required element.
/// Element "PrivateKey" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               PrivateKey                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformation is a complexType.
///
struct tt__CertificateInformation
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element "IssuerDN" of XSD type xs:string.
    char*                                IssuerDN                       0;	///< Optional element.
/// Element "SubjectDN" of XSD type xs:string.
    char*                                SubjectDN                      0;	///< Optional element.
/// Element "KeyUsage" of XSD type "http://www.onvif.org/ver10/schema":CertificateUsage.
    struct tt__CertificateUsage*         KeyUsage                       0;	///< Optional element.
/// Element "ExtendedKeyUsage" of XSD type "http://www.onvif.org/ver10/schema":CertificateUsage.
    struct tt__CertificateUsage*         ExtendedKeyUsage               0;	///< Optional element.
/// Element "KeyLength" of XSD type xs:int.
    int*                                 KeyLength                      0;	///< Optional element.
/// Element "Version" of XSD type xs:string.
    char*                                Version                        0;	///< Optional element.
/// Element "SerialNum" of XSD type xs:string.
    char*                                SerialNum                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"
/// </BLOCKQUOTE></PRE>
/// Element "SignatureAlgorithm" of XSD type xs:string.
    char*                                SignatureAlgorithm             0;	///< Optional element.
/// Element "Validity" of XSD type "http://www.onvif.org/ver10/schema":DateTimeRange.
    struct tt__DateTimeRange*            Validity                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":CertificateInformationExtension.
    struct tt__CertificateInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformationExtension is a complexType.
///
struct tt__CertificateInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfiguration is a complexType.
///
struct tt__Dot1XConfiguration
{
/// Element "Dot1XConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Element "Identity" of XSD type xs:string.
    char*                                Identity                       1;	///< Required element.
/// Element "AnonymousID" of XSD type xs:string.
    char*                                AnonymousID                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
/// Element "EAPMethod" of XSD type xs:int.
    int                                  EAPMethod                      1;	///< Required element.
/// Size of array of xsd__token* is 0..unbounded.
   $int                                  __sizeCACertificateID          0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          CACertificateID                0;
/// Element "EAPMethodConfiguration" of XSD type "http://www.onvif.org/ver10/schema":EAPMethodConfiguration.
    struct tt__EAPMethodConfiguration*   EAPMethodConfiguration         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension.
    struct tt__Dot1XConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is a complexType.
///
struct tt__Dot1XConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is a complexType.
///
struct tt__EAPMethodConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Confgiuration information for TLS Method.
/// </BLOCKQUOTE></PRE>
/// Element "TLSConfiguration" of XSD type "http://www.onvif.org/ver10/schema":TLSConfiguration.
    struct tt__TLSConfiguration*         TLSConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Password for those EAP Methods that require a password. The password shall never be returned on a get method.
/// </BLOCKQUOTE></PRE>
/// Element "Password" of XSD type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":EapMethodExtension.
    struct tt__EapMethodExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EapMethodExtension is a complexType.
///
struct tt__EapMethodExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":TLSConfiguration is a complexType.
///
struct tt__TLSConfiguration
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is a complexType.
///
struct tt__GenericEapPwdConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
///
struct tt__RelayOutputSettings
{
/// <PRE><BLOCKQUOTE>
///   'Bistable' or 'Monostable'
///   <ul>
///   <li>Bistable After setting the state, the relay remains in this state.</li>
///   <li>Monostable After setting the state, the relay returns to its idle state after the specified time.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":RelayMode.
    enum tt__RelayMode                   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.
/// </BLOCKQUOTE></PRE>
/// Element "DelayTime" of XSD type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   'open' or 'closed'
///   <ul>
///   <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li>
///   <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "IdleState" of XSD type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum tt__RelayIdleState              IdleState                      1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension is a complexType.
///
struct tt__PTZNodeExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Detail of supported Preset Tour feature.
/// </BLOCKQUOTE></PRE>
/// Element "SupportedPresetTour" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSupported.
    struct tt__PTZPresetTourSupported*   SupportedPresetTour            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZNodeExtension2.
    struct tt__PTZNodeExtension2*        Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension2 is a complexType.
///
struct tt__PTZNodeExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupported is a complexType.
///
struct tt__PTZPresetTourSupported
{
/// <PRE><BLOCKQUOTE>
///   Indicates number of preset tours that can be created. Required preset tour operations shall be available for this PTZ Node if one or more preset tour is supported.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfPresetTours" of XSD type xs:int.
    int                                  MaximumNumberOfPresetTours     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates which preset tour operations are available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__PTZPresetTourOperation* is 0..unbounded.
   $int                                  __sizePTZPresetTourOperation   0;
/// Array enum tt__PTZPresetTourOperation* of size 0..unbounded.
    enum tt__PTZPresetTourOperation*     PTZPresetTourOperation         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension.
    struct tt__PTZPresetTourSupportedExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension is a complexType.
///
struct tt__PTZPresetTourSupportedExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is a complexType.
///
struct tt__PTZConfigurationExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure PT Control Direction related features.
/// </BLOCKQUOTE></PRE>
/// Element "PTControlDirection" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirection.
    struct tt__PTControlDirection*       PTControlDirection             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2.
    struct tt__PTZConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2 is a complexType.
///
struct tt__PTZConfigurationExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirection is a complexType.
///
struct tt__PTControlDirection
{
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for E-Flip.
/// </BLOCKQUOTE></PRE>
/// Element "EFlip" of XSD type "http://www.onvif.org/ver10/schema":EFlip.
    struct tt__EFlip*                    EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for reversing of PT Control Direction.
/// </BLOCKQUOTE></PRE>
/// Element "Reverse" of XSD type "http://www.onvif.org/ver10/schema":Reverse.
    struct tt__Reverse*                  Reverse                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirectionExtension.
    struct tt__PTControlDirectionExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionExtension is a complexType.
///
struct tt__PTControlDirectionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EFlip is a complexType.
///
struct tt__EFlip
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable E-Flip feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":EFlipMode.
    enum tt__EFlipMode                   Mode                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Reverse is a complexType.
///
struct tt__Reverse
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Reverse feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ReverseMode.
    enum tt__ReverseMode                 Mode                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is a complexType.
///
struct tt__PTZConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   A list of supported coordinate systems including their range limitations.
/// </BLOCKQUOTE></PRE>
/// Element "Spaces" of XSD type "http://www.onvif.org/ver10/schema":PTZSpaces.
    struct tt__PTZSpaces*                Spaces                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A timeout Range within which Timeouts are accepted by the PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Element "PTZTimeout" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            PTZTimeout                     1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Supported options for PT Direction Control.
/// </BLOCKQUOTE></PRE>
/// Element "PTControlDirection" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirectionOptions.
    struct tt__PTControlDirectionOptions*  PTControlDirection             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2.
    struct tt__PTZConfigurationOptions2*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The list of acceleration ramps supported by the device. The
///   smallest acceleration value corresponds to the minimal index, the
///   highest acceleration corresponds to the maximum index.
/// </BLOCKQUOTE></PRE>
/// Attribute "PTZRamps" of XSD type "http://www.onvif.org/ver10/schema":IntAttrList.
   @tt__IntAttrList                      PTZRamps                       0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2 is a complexType.
///
struct tt__PTZConfigurationOptions2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptions is a complexType.
///
struct tt__PTControlDirectionOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for EFlip feature.
/// </BLOCKQUOTE></PRE>
/// Element "EFlip" of XSD type "http://www.onvif.org/ver10/schema":EFlipOptions.
    struct tt__EFlipOptions*             EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Reverse feature.
/// </BLOCKQUOTE></PRE>
/// Element "Reverse" of XSD type "http://www.onvif.org/ver10/schema":ReverseOptions.
    struct tt__ReverseOptions*           Reverse                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension.
    struct tt__PTControlDirectionOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension is a complexType.
///
struct tt__PTControlDirectionOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptions is a complexType.
///
struct tt__EFlipOptions
{
/// <PRE><BLOCKQUOTE>
///   Options of EFlip mode parameter.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__EFlipMode* is 0..unbounded.
   $int                                  __sizeMode                     0;
/// Array enum tt__EFlipMode* of size 0..unbounded.
    enum tt__EFlipMode*                  Mode                           0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":EFlipOptionsExtension.
    struct tt__EFlipOptionsExtension*    Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptionsExtension is a complexType.
///
struct tt__EFlipOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptions is a complexType.
///
struct tt__ReverseOptions
{
/// <PRE><BLOCKQUOTE>
///   Options of Reverse mode parameter.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__ReverseMode* is 0..unbounded.
   $int                                  __sizeMode                     0;
/// Array enum tt__ReverseMode* of size 0..unbounded.
    enum tt__ReverseMode*                Mode                           0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ReverseOptionsExtension.
    struct tt__ReverseOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptionsExtension is a complexType.
///
struct tt__ReverseOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
///
struct tt__PanTiltLimits
{
/// <PRE><BLOCKQUOTE>
///   A range of pan tilt limits.
/// </BLOCKQUOTE></PRE>
/// Element "Range" of XSD type "http://www.onvif.org/ver10/schema":Space2DDescription.
    struct tt__Space2DDescription*       Range                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
///
struct tt__ZoomLimits
{
/// <PRE><BLOCKQUOTE>
///   A range of zoom limit
/// </BLOCKQUOTE></PRE>
/// Element "Range" of XSD type "http://www.onvif.org/ver10/schema":Space1DDescription.
    struct tt__Space1DDescription*       Range                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
///
struct tt__PTZSpaces
{
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space2DDescription* is 0..unbounded.
   $int                                  __sizeAbsolutePanTiltPositionSpace 0;
/// Array struct tt__Space2DDescription* of size 0..unbounded.
    struct tt__Space2DDescription*       AbsolutePanTiltPositionSpace   0;
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizeAbsoluteZoomPositionSpace 0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       AbsoluteZoomPositionSpace      0;
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1, where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space2DDescription* is 0..unbounded.
   $int                                  __sizeRelativePanTiltTranslationSpace 0;
/// Array struct tt__Space2DDescription* of size 0..unbounded.
    struct tt__Space2DDescription*       RelativePanTiltTranslationSpace 0;
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range. Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1, where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizeRelativeZoomTranslationSpace 0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       RelativeZoomTranslationSpace   0;
/// <PRE><BLOCKQUOTE>
///   The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. Instead, the range should be defined as a range of the PTZ units speed normalized to the range -1 to 1, where a positive velocity would map to clockwise rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space2DDescription* is 0..unbounded.
   $int                                  __sizeContinuousPanTiltVelocitySpace 0;
/// Array struct tt__Space2DDescription* of size 0..unbounded.
    struct tt__Space2DDescription*       ContinuousPanTiltVelocitySpace 0;
/// <PRE><BLOCKQUOTE>
///   The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizeContinuousZoomVelocitySpace 0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       ContinuousZoomVelocitySpace    0;
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt movement is represented by a single non-negative scalar value.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizePanTiltSpeedSpace        0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       PanTiltSpeedSpace              0;
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
   $int                                  __sizeZoomSpeedSpace           0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       ZoomSpeedSpace                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZSpacesExtension.
    struct tt__PTZSpacesExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpacesExtension is a complexType.
///
struct tt__PTZSpacesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
///
struct tt__Space2DDescription
{
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
/// Element "URI" of XSD type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
/// Element "XRange" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of y-axis.
/// </BLOCKQUOTE></PRE>
/// Element "YRange" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YRange                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
///
struct tt__Space1DDescription
{
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
/// Element "URI" of XSD type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
/// Element "XRange" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               XRange                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
///
struct tt__Vector2D
{
/// Attribute "x" of XSD type xs:float.
   @float                                x                              1;	///< Required attribute.
/// Attribute "y" of XSD type xs:float.
   @float                                y                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Attribute "space" of XSD type xs:anyURI.
   @xsd__anyURI                          space                          0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
///
struct tt__Vector1D
{
/// Attribute "x" of XSD type xs:float.
   @float                                x                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul style="">
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Attribute "space" of XSD type xs:anyURI.
   @xsd__anyURI                          space                          0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
///
struct tt__PTZVector
{
/// <PRE><BLOCKQUOTE>
///   Pan and tilt position. The x component corresponds to pan and the y component to tilt.
/// </BLOCKQUOTE></PRE>
/// Element "PanTilt" of XSD type "http://www.onvif.org/ver10/schema":Vector2D.
    struct tt__Vector2D*                 PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom position.
/// </BLOCKQUOTE></PRE>
/// Element "Zoom" of XSD type "http://www.onvif.org/ver10/schema":Vector1D.
    struct tt__Vector1D*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
///
struct tt__PTZSpeed
{
/// <PRE><BLOCKQUOTE>
///   Pan and tilt speed. The x component corresponds to pan and the y component to tilt. If omitted in a request, the current (if any) PanTilt movement should not be affected.
/// </BLOCKQUOTE></PRE>
/// Element "PanTilt" of XSD type "http://www.onvif.org/ver10/schema":Vector2D.
    struct tt__Vector2D*                 PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom speed. If omitted in a request, the current (if any) Zoom movement should not be affected.
/// </BLOCKQUOTE></PRE>
/// Element "Zoom" of XSD type "http://www.onvif.org/ver10/schema":Vector1D.
    struct tt__Vector1D*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatus is a complexType.
///
struct tt__PTZStatus
{
/// <PRE><BLOCKQUOTE>
///   Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                Position                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.
/// </BLOCKQUOTE></PRE>
/// Element "MoveStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZMoveStatus.
    struct tt__PTZMoveStatus*            MoveStatus                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   States a current PTZ error.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    char*                                Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Specifies the UTC time when this status was generated.
/// </BLOCKQUOTE></PRE>
/// Element "UtcTime" of XSD type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
///
struct tt__PTZPreset
{
/// <PRE><BLOCKQUOTE>
///   A list of preset position name.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of preset position.
/// </BLOCKQUOTE></PRE>
/// Element "PTZPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                PTZPosition                    0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
///
struct tt__PTZMoveStatus
{

/// </BLOCKQUOTE></PRE>
/// Element "PanTilt" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 PanTilt                        0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Zoom" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PresetTour is a complexType.
///
struct tt__PresetTour
{
/// <PRE><BLOCKQUOTE>
///   Readable name of the preset tour.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Read only parameters to indicate the status of the preset tour.
/// </BLOCKQUOTE></PRE>
/// Element "Status" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStatus.
    struct tt__PTZPresetTourStatus*      Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Auto Start flag of the preset tour. True allows the preset tour to be activated always.
/// </BLOCKQUOTE></PRE>
/// Element "AutoStart" of XSD type xs:boolean.
    enum xsd__boolean                    AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameters to specify the detail behavior of the preset tour.
/// </BLOCKQUOTE></PRE>
/// Element "StartingCondition" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition.
    struct tt__PTZPresetTourStartingCondition*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of detail of touring spots including preset positions.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PTZPresetTourSpot* is 0..unbounded.
   $int                                  __sizeTourSpot                 0;
/// Array struct tt__PTZPresetTourSpot* of size 0..unbounded.
    struct tt__PTZPresetTourSpot*        TourSpot                       0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourExtension.
    struct tt__PTZPresetTourExtension*   Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of this preset tour.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourExtension is a complexType.
///
struct tt__PTZPresetTourExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpot is a complexType.
///
struct tt__PTZPresetTourSpot
{
/// <PRE><BLOCKQUOTE>
///   Detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "PresetDetail" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail.
    struct tt__PTZPresetTourPresetDetail*  PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify Pan/Tilt and Zoom speed on moving toward this tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify time duration of staying on this tour sport.
/// </BLOCKQUOTE></PRE>
/// Element "StayTime" of XSD type xs:duration.
    xsd__duration*                       StayTime                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension.
    struct tt__PTZPresetTourSpotExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension is a complexType.
///
struct tt__PTZPresetTourSpotExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail is a complexType.
///
struct tt__PTZPresetTourPresetDetail
{
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_PTZPresetTourPresetDetail;	///< Union _tt__union_PTZPresetTourPresetDetail selector: set to SOAP_UNION__tt__union_PTZPresetTourPresetDetail_<fieldname>
    union _tt__union_PTZPresetTourPresetDetail
    {
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with Preset Token defined in advance.
/// </BLOCKQUOTE></PRE>
/// Element "PresetToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with the home position of this PTZ Node. "False" to this parameter shall be treated as an invalid argument.
/// </BLOCKQUOTE></PRE>
/// Element "Home" of XSD type xs:boolean.
    enum xsd__boolean                    Home                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with vector of PTZ node directly.
/// </BLOCKQUOTE></PRE>
/// Element "PTZPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                PTZPosition                    1;	///< Required element.
/// Element "TypeExtension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension.
    struct tt__PTZPresetTourTypeExtension*  TypeExtension                  1;	///< Required element.
    }                                    union_PTZPresetTourPresetDetail;
//  END OF CHOICE
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension is a complexType.
///
struct tt__PTZPresetTourTypeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatus is a complexType.
///
struct tt__PTZPresetTourStatus
{
/// <PRE><BLOCKQUOTE>
///   Indicates state of this preset tour by Idle/Touring/Paused.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourState.
    enum tt__PTZPresetTourState          State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates a tour spot currently staying.
/// </BLOCKQUOTE></PRE>
/// Element "CurrentTourSpot" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSpot.
    struct tt__PTZPresetTourSpot*        CurrentTourSpot                0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension.
    struct tt__PTZPresetTourStatusExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension is a complexType.
///
struct tt__PTZPresetTourStatusExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition is a complexType.
///
struct tt__PTZPresetTourStartingCondition
{
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how many times the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringTime" of XSD type xs:int.
    int*                                 RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how long time duration the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringDuration" of XSD type xs:duration.
    xsd__duration*                       RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to choose which direction the preset tour goes. Forward shall be chosen in case it is omitted.
/// </BLOCKQUOTE></PRE>
/// Element "Direction" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourDirection.
    enum tt__PTZPresetTourDirection*     Direction                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension.
    struct tt__PTZPresetTourStartingConditionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Execute presets in random order. If set to true and Direction is also present, Direction will be ignored and presets of the Tour will be recalled randomly.
/// </BLOCKQUOTE></PRE>
/// Attribute "RandomPresetOrder" of XSD type xs:boolean.
   @enum xsd__boolean*                   RandomPresetOrder              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension is a complexType.
///
struct tt__PTZPresetTourStartingConditionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOptions is a complexType.
///
struct tt__PTZPresetTourOptions
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the AutoStart is supported.
/// </BLOCKQUOTE></PRE>
/// Element "AutoStart" of XSD type xs:boolean.
    enum xsd__boolean                    AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Starting Condition.
/// </BLOCKQUOTE></PRE>
/// Element "StartingCondition" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions.
    struct tt__PTZPresetTourStartingConditionOptions*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Spot.
/// </BLOCKQUOTE></PRE>
/// Element "TourSpot" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions.
    struct tt__PTZPresetTourSpotOptions*  TourSpot                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions is a complexType.
///
struct tt__PTZPresetTourSpotOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "PresetDetail" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions.
    struct tt__PTZPresetTourPresetDetailOptions*  PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported range of stay time for a tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "StayTime" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            StayTime                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions is a complexType.
///
struct tt__PTZPresetTourPresetDetailOptions
{
/// <PRE><BLOCKQUOTE>
///   A list of available Preset Tokens for tour spots.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 0..unbounded.
   $int                                  __sizePresetToken              0;
/// Array tt__ReferenceToken* of size 0..unbounded.
    tt__ReferenceToken*                  PresetToken                    0;
/// <PRE><BLOCKQUOTE>
///   An option to indicate Home postion for tour spots.
/// </BLOCKQUOTE></PRE>
/// Element "Home" of XSD type xs:boolean.
    enum xsd__boolean*                   Home                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Pan and Tilt for tour spots.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltPositionSpace" of XSD type "http://www.onvif.org/ver10/schema":Space2DDescription.
    struct tt__Space2DDescription*       PanTiltPositionSpace           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Zoom for a tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomPositionSpace" of XSD type "http://www.onvif.org/ver10/schema":Space1DDescription.
    struct tt__Space1DDescription*       ZoomPositionSpace              0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension.
    struct tt__PTZPresetTourPresetDetailOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension is a complexType.
///
struct tt__PTZPresetTourPresetDetailOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions is a complexType.
///
struct tt__PTZPresetTourStartingConditionOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Time.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringTime" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Duration.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringDuration" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Direction of Preset Tour.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__PTZPresetTourDirection* is 0..unbounded.
   $int                                  __sizeDirection                0;
/// Array enum tt__PTZPresetTourDirection* of size 0..unbounded.
    enum tt__PTZPresetTourDirection*     Direction                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension.
    struct tt__PTZPresetTourStartingConditionOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension is a complexType.
///
struct tt__PTZPresetTourStartingConditionOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus is a complexType.
///
struct tt__ImagingStatus
{
/// Element "FocusStatus" of XSD type "http://www.onvif.org/ver10/schema":FocusStatus.
    struct tt__FocusStatus*              FocusStatus                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus is a complexType.
///
struct tt__FocusStatus
{
/// <PRE><BLOCKQUOTE>
///   Status of focus position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Status of focus MoveStatus.
/// </BLOCKQUOTE></PRE>
/// Element "MoveStatus" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Error status of focus.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    char*                                Error                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration is a complexType.
///
struct tt__FocusConfiguration
{
/// Element "AutoFocusMode" of XSD type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of XSD type xs:float.
    float                                DefaultSpeed                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
/// Element "NearLimit" of XSD type xs:float.
    float                                NearLimit                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
///   If set to 0.0, infinity will be used.
/// </BLOCKQUOTE></PRE>
/// Element "FarLimit" of XSD type xs:float.
    float                                FarLimit                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings is a complexType.
///
struct tt__ImagingSettings
{
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensation.
    struct tt__BacklightCompensation*    BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Brightness" of XSD type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "ColorSaturation" of XSD type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Contrast" of XSD type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":Exposure.
    struct tt__Exposure*                 Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusConfiguration.
    struct tt__FocusConfiguration*       Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
/// Element "IrCutFilter" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Sharpness" of XSD type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRange.
    struct tt__WideDynamicRange*         WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalance.
    struct tt__WhiteBalance*             WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension.
    struct tt__ImagingSettingsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is a complexType.
///
struct tt__ImagingSettingsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure is a complexType.
///
struct tt__Exposure
{
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the NVT.</li>
///   <li>Manual Disabled exposure algorithm on the NVT.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
/// Element "Priority" of XSD type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority            Priority                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
/// Element "Window" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                Window                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinExposureTime" of XSD type xs:float.
    float                                MinExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxExposureTime" of XSD type xs:float.
    float                                MaxExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinGain" of XSD type xs:float.
    float                                MinGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxGain" of XSD type xs:float.
    float                                MaxGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinIris" of XSD type xs:float.
    float                                MinIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxIris" of XSD type xs:float.
    float                                MaxIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
/// Element "ExposureTime" of XSD type xs:float.
    float                                ExposureTime                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
/// Element "Gain" of XSD type xs:float.
    float                                Gain                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// </BLOCKQUOTE></PRE>
/// Element "Iris" of XSD type xs:float.
    float                                Iris                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange is a complexType.
///
struct tt__WideDynamicRange
{
/// <PRE><BLOCKQUOTE>
///   White dynamic range (on/off)
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unitless)
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float                                Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation is a complexType.
///
struct tt__BacklightCompensation
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float                                Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions is a complexType.
///
struct tt__ImagingOptions
{
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions.
    struct tt__BacklightCompensationOptions*  BacklightCompensation          1;	///< Required element.
/// Element "Brightness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Brightness                     1;	///< Required element.
/// Element "ColorSaturation" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ColorSaturation                1;	///< Required element.
/// Element "Contrast" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Contrast                       1;	///< Required element.
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":ExposureOptions.
    struct tt__ExposureOptions*          Exposure                       1;	///< Required element.
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusOptions.
    struct tt__FocusOptions*             Focus                          1;	///< Required element.
/// Size of array of enum tt__IrCutFilterMode* is 1..unbounded.
   $int                                  __sizeIrCutFilterModes         1;
/// Array enum tt__IrCutFilterMode* of size 1..unbounded.
    enum tt__IrCutFilterMode*            IrCutFilterModes               1;
/// Element "Sharpness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Sharpness                      1;	///< Required element.
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions.
    struct tt__WideDynamicRangeOptions*  WideDynamicRange               1;	///< Required element.
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions.
    struct tt__WhiteBalanceOptions*      WhiteBalance                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is a complexType.
///
struct tt__WideDynamicRangeOptions
{
/// Size of array of enum tt__WideDynamicMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WideDynamicMode* of size 1..unbounded.
    enum tt__WideDynamicMode*            Mode                           1;
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is a complexType.
///
struct tt__BacklightCompensationOptions
{
/// Size of array of enum tt__WideDynamicMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WideDynamicMode* of size 1..unbounded.
    enum tt__WideDynamicMode*            Mode                           1;
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions is a complexType.
///
struct tt__FocusOptions
{
/// Size of array of enum tt__AutoFocusMode* is 0..unbounded.
   $int                                  __sizeAutoFocusModes           0;
/// Array enum tt__AutoFocusMode* of size 0..unbounded.
    enum tt__AutoFocusMode*              AutoFocusModes                 0;
/// Element "DefaultSpeed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               DefaultSpeed                   1;	///< Required element.
/// Element "NearLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               NearLimit                      1;	///< Required element.
/// Element "FarLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               FarLimit                       1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureOptions is a complexType.
///
struct tt__ExposureOptions
{
/// Size of array of enum tt__ExposureMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__ExposureMode* of size 1..unbounded.
    enum tt__ExposureMode*               Mode                           1;
/// Size of array of enum tt__ExposurePriority* is 1..unbounded.
   $int                                  __sizePriority                 1;
/// Array enum tt__ExposurePriority* of size 1..unbounded.
    enum tt__ExposurePriority*           Priority                       1;
/// Element "MinExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinExposureTime                1;	///< Required element.
/// Element "MaxExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxExposureTime                1;	///< Required element.
/// Element "MinGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinGain                        1;	///< Required element.
/// Element "MaxGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxGain                        1;	///< Required element.
/// Element "MinIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinIris                        1;	///< Required element.
/// Element "MaxIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxIris                        1;	///< Required element.
/// Element "ExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ExposureTime                   1;	///< Required element.
/// Element "Gain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Gain                           1;	///< Required element.
/// Element "Iris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Iris                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is a complexType.
///
struct tt__WhiteBalanceOptions
{
/// Size of array of enum tt__WhiteBalanceMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WhiteBalanceMode* of size 1..unbounded.
    enum tt__WhiteBalanceMode*           Mode                           1;
/// Element "YrGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YrGain                         1;	///< Required element.
/// Element "YbGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YbGain                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusMove is a complexType.
///
struct tt__FocusMove
{
/// <PRE><BLOCKQUOTE>
///   Parameters for the absolute focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Absolute" of XSD type "http://www.onvif.org/ver10/schema":AbsoluteFocus.
    struct tt__AbsoluteFocus*            Absolute                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameters for the relative focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Relative" of XSD type "http://www.onvif.org/ver10/schema":RelativeFocus.
    struct tt__RelativeFocus*            Relative                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter for the continuous focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Continuous" of XSD type "http://www.onvif.org/ver10/schema":ContinuousFocus.
    struct tt__ContinuousFocus*          Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":AbsoluteFocus is a complexType.
///
struct tt__AbsoluteFocus
{
/// <PRE><BLOCKQUOTE>
///   Position parameter for the absolute focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the absolute focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocus is a complexType.
///
struct tt__RelativeFocus
{
/// <PRE><BLOCKQUOTE>
///   Distance parameter for the relative focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Distance" of XSD type xs:float.
    float                                Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the relative focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ContinuousFocus is a complexType.
///
struct tt__ContinuousFocus
{
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the Continuous focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:float.
    float                                Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":MoveOptions is a complexType.
///
struct tt__MoveOptions
{
/// Element "Absolute" of XSD type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    struct tt__AbsoluteFocusOptions*     Absolute                       0;	///< Optional element.
/// Element "Relative" of XSD type "http://www.onvif.org/ver10/schema":RelativeFocusOptions.
    struct tt__RelativeFocusOptions*     Relative                       0;	///< Optional element.
/// Element "Continuous" of XSD type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    struct tt__ContinuousFocusOptions*   Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is a complexType.
///
struct tt__AbsoluteFocusOptions
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocusOptions is a complexType.
///
struct tt__RelativeFocusOptions
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the distance.
/// </BLOCKQUOTE></PRE>
/// Element "Distance" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is a complexType.
///
struct tt__ContinuousFocusOptions
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance is a complexType.
///
struct tt__WhiteBalance
{
/// <PRE><BLOCKQUOTE>
///   Auto whitebalancing mode (auto/manual).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CrGain" of XSD type xs:float.
    float                                CrGain                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CbGain" of XSD type xs:float.
    float                                CbGain                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus20 is a complexType.
///
struct tt__ImagingStatus20
{
/// <PRE><BLOCKQUOTE>
///   Status of focus.
/// </BLOCKQUOTE></PRE>
/// Element "FocusStatus20" of XSD type "http://www.onvif.org/ver10/schema":FocusStatus20.
    struct tt__FocusStatus20*            FocusStatus20                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingStatus20Extension.
    struct tt__ImagingStatus20Extension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is a complexType.
///
struct tt__ImagingStatus20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus20 is a complexType.
///
struct tt__FocusStatus20
{
/// <PRE><BLOCKQUOTE>
///   Status of focus position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Status of focus MoveStatus.
/// </BLOCKQUOTE></PRE>
/// Element "MoveStatus" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Error status of focus.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    char*                                Error                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FocusStatus20Extension.
    struct tt__FocusStatus20Extension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus20Extension is a complexType.
///
struct tt__FocusStatus20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the ImagingSettings of a VideoSource. The supported options and ranges can be obtained via the GetOptions command.
/// </BLOCKQUOTE></PRE>
struct tt__ImagingSettings20
{
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensation20.
    struct tt__BacklightCompensation20*  BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Brightness" of XSD type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "ColorSaturation" of XSD type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Contrast" of XSD type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":Exposure20.
    struct tt__Exposure20*               Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusConfiguration20.
    struct tt__FocusConfiguration20*     Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
/// Element "IrCutFilter" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Sharpness" of XSD type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRange20.
    struct tt__WideDynamicRange20*       WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalance20.
    struct tt__WhiteBalance20*           WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20.
    struct tt__ImagingSettingsExtension20*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is a complexType.
///
struct tt__ImagingSettingsExtension20
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
/// Element "ImageStabilization" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilization.
    struct tt__ImageStabilization*       ImageStabilization             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202.
    struct tt__ImagingSettingsExtension202*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202 is a complexType.
///
struct tt__ImagingSettingsExtension202
{
/// <PRE><BLOCKQUOTE>
///   An optional parameter applied to only auto mode to adjust timing of toggling Ir cut filter.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__IrCutFilterAutoAdjustment* is 0..unbounded.
   $int                                  __sizeIrCutFilterAutoAdjustment 0;
/// Array struct tt__IrCutFilterAutoAdjustment* of size 0..unbounded.
    struct tt__IrCutFilterAutoAdjustment*  IrCutFilterAutoAdjustment      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203.
    struct tt__ImagingSettingsExtension203*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203 is a complexType.
///
struct tt__ImagingSettingsExtension203
{
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Contrast Compensation.
/// </BLOCKQUOTE></PRE>
/// Element "ToneCompensation" of XSD type "http://www.onvif.org/ver10/schema":ToneCompensation.
    struct tt__ToneCompensation*         ToneCompensation               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Defogging.
/// </BLOCKQUOTE></PRE>
/// Element "Defogging" of XSD type "http://www.onvif.org/ver10/schema":Defogging.
    struct tt__Defogging*                Defogging                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Noise Reduction.
/// </BLOCKQUOTE></PRE>
/// Element "NoiseReduction" of XSD type "http://www.onvif.org/ver10/schema":NoiseReduction.
    struct tt__NoiseReduction*           NoiseReduction                 0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204.
    struct tt__ImagingSettingsExtension204*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204 is a complexType.
///
struct tt__ImagingSettingsExtension204
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilization is a complexType.
///
struct tt__ImageStabilization
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationMode.
    enum tt__ImageStabilizationMode      Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified)
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationExtension.
    struct tt__ImageStabilizationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationExtension is a complexType.
///
struct tt__ImageStabilizationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustment is a complexType.
///
struct tt__IrCutFilterAutoAdjustment
{
/// <PRE><BLOCKQUOTE>
///   Specifies which boundaries to automatically toggle Ir cut filter following parameters are applied to. Its options shall be chosen from tt:IrCutFilterAutoBoundaryType.
/// </BLOCKQUOTE></PRE>
/// Element "BoundaryType" of XSD type xs:string.
    char*                                BoundaryType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Adjusts boundary exposure level for toggling Ir cut filter to on/off specified with unitless normalized value from +1.0 to -1.0. Zero is default and -1.0 is the darkest adjustment (Unitless).
/// </BLOCKQUOTE></PRE>
/// Element "BoundaryOffset" of XSD type xs:float.
    float*                               BoundaryOffset                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Delay time of toggling Ir cut filter to on/off after crossing of the boundary exposure levels.
/// </BLOCKQUOTE></PRE>
/// Element "ResponseTime" of XSD type xs:duration.
    xsd__duration*                       ResponseTime                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension.
    struct tt__IrCutFilterAutoAdjustmentExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension is a complexType.
///
struct tt__IrCutFilterAutoAdjustmentExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether WDR mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
struct tt__WideDynamicRange20
{
/// <PRE><BLOCKQUOTE>
///   Wide dynamic range mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether BLC mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
struct tt__BacklightCompensation20
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the exposure settings.
/// </BLOCKQUOTE></PRE>
struct tt__Exposure20
{
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the device.</li>
///   <li>Manual Disabled exposure algorithm on the device.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
/// Element "Priority" of XSD type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority*           Priority                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
/// Element "Window" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                Window                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinExposureTime" of XSD type xs:float.
    float*                               MinExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxExposureTime" of XSD type xs:float.
    float*                               MaxExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinGain" of XSD type xs:float.
    float*                               MinGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxGain" of XSD type xs:float.
    float*                               MaxGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinIris" of XSD type xs:float.
    float*                               MinIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxIris" of XSD type xs:float.
    float*                               MaxIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
/// Element "ExposureTime" of XSD type xs:float.
    float*                               ExposureTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
/// Element "Gain" of XSD type xs:float.
    float*                               Gain                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// </BLOCKQUOTE></PRE>
/// Element "Iris" of XSD type xs:float.
    float*                               Iris                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensation is a complexType.
///
struct tt__ToneCompensation
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable or automatic ToneCompensation feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type xs:string.
    char*                                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ToneCompensationExtension.
    struct tt__ToneCompensationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationExtension is a complexType.
///
struct tt__ToneCompensationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Defogging is a complexType.
///
struct tt__Defogging
{
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable or automatic Defogging feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type xs:string.
    char*                                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DefoggingExtension.
    struct tt__DefoggingExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingExtension is a complexType.
///
struct tt__DefoggingExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":NoiseReduction is a complexType.
///
struct tt__NoiseReduction
{
/// <PRE><BLOCKQUOTE>
///   Level parameter specified with unitless normalized value from 0.0 to +1.0. Level=0 means no noise reduction or minimal noise reduction.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float                                Level                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20 is a complexType.
///
struct tt__ImagingOptions20
{
/// <PRE><BLOCKQUOTE>
///   Valid range of Backlight Compensation.
/// </BLOCKQUOTE></PRE>
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20.
    struct tt__BacklightCompensationOptions20*  BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Brightness.
/// </BLOCKQUOTE></PRE>
/// Element "Brightness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Color Saturation.
/// </BLOCKQUOTE></PRE>
/// Element "ColorSaturation" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Contrast.
/// </BLOCKQUOTE></PRE>
/// Element "Contrast" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Exposure.
/// </BLOCKQUOTE></PRE>
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":ExposureOptions20.
    struct tt__ExposureOptions20*        Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Focus.
/// </BLOCKQUOTE></PRE>
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusOptions20.
    struct tt__FocusOptions20*           Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of IrCutFilterModes.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__IrCutFilterMode* is 0..unbounded.
   $int                                  __sizeIrCutFilterModes         0;
/// Array enum tt__IrCutFilterMode* of size 0..unbounded.
    enum tt__IrCutFilterMode*            IrCutFilterModes               0;
/// <PRE><BLOCKQUOTE>
///   Valid range of Sharpness.
/// </BLOCKQUOTE></PRE>
/// Element "Sharpness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of WideDynamicRange.
/// </BLOCKQUOTE></PRE>
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20.
    struct tt__WideDynamicRangeOptions20*  WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of WhiteBalance.
/// </BLOCKQUOTE></PRE>
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20.
    struct tt__WhiteBalanceOptions20*    WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension.
    struct tt__ImagingOptions20Extension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is a complexType.
///
struct tt__ImagingOptions20Extension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
/// Element "ImageStabilization" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationOptions.
    struct tt__ImageStabilizationOptions*  ImageStabilization             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2.
    struct tt__ImagingOptions20Extension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2 is a complexType.
///
struct tt__ImagingOptions20Extension2
{
/// <PRE><BLOCKQUOTE>
///   Options of parameters for adjustment of Ir cut filter auto mode.
/// </BLOCKQUOTE></PRE>
/// Element "IrCutFilterAutoAdjustment" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions.
    struct tt__IrCutFilterAutoAdjustmentOptions*  IrCutFilterAutoAdjustment      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3.
    struct tt__ImagingOptions20Extension3*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3 is a complexType.
///
struct tt__ImagingOptions20Extension3
{
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Tone Compensation feature.
/// </BLOCKQUOTE></PRE>
/// Element "ToneCompensationOptions" of XSD type "http://www.onvif.org/ver10/schema":ToneCompensationOptions.
    struct tt__ToneCompensationOptions*  ToneCompensationOptions        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Defogging feature.
/// </BLOCKQUOTE></PRE>
/// Element "DefoggingOptions" of XSD type "http://www.onvif.org/ver10/schema":DefoggingOptions.
    struct tt__DefoggingOptions*         DefoggingOptions               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Options of parameter for Noise Reduction feature.
/// </BLOCKQUOTE></PRE>
/// Element "NoiseReductionOptions" of XSD type "http://www.onvif.org/ver10/schema":NoiseReductionOptions.
    struct tt__NoiseReductionOptions*    NoiseReductionOptions          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4.
    struct tt__ImagingOptions20Extension4*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4 is a complexType.
///
struct tt__ImagingOptions20Extension4
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationOptions is a complexType.
///
struct tt__ImageStabilizationOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options of Image Stabilization mode parameter.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__ImageStabilizationMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__ImageStabilizationMode* of size 1..unbounded.
    enum tt__ImageStabilizationMode*     Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Valid range of the Image Stabilization.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension.
    struct tt__ImageStabilizationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension is a complexType.
///
struct tt__ImageStabilizationOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions is a complexType.
///
struct tt__IrCutFilterAutoAdjustmentOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options of boundary types for adjustment of Ir cut filter auto mode. The opptions shall be chosen from tt:IrCutFilterAutoBoundaryType.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeBoundaryType             1;
/// Array char** of size 1..unbounded.
    char**                               BoundaryType                   1;
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not boundary offset for toggling Ir cut filter is supported.
/// </BLOCKQUOTE></PRE>
/// Element "BoundaryOffset" of XSD type xs:boolean.
    enum xsd__boolean*                   BoundaryOffset                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of delay time for toggling Ir cut filter.
/// </BLOCKQUOTE></PRE>
/// Element "ResponseTimeRange" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    struct tt__DurationRange*            ResponseTimeRange              0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension.
    struct tt__IrCutFilterAutoAdjustmentOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension is a complexType.
///
struct tt__IrCutFilterAutoAdjustmentOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is a complexType.
///
struct tt__WideDynamicRangeOptions20
{
/// Size of array of enum tt__WideDynamicMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WideDynamicMode* of size 1..unbounded.
    enum tt__WideDynamicMode*            Mode                           1;
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is a complexType.
///
struct tt__BacklightCompensationOptions20
{
/// <PRE><BLOCKQUOTE>
///   'ON' or 'OFF'
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__BacklightCompensationMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__BacklightCompensationMode* of size 1..unbounded.
    enum tt__BacklightCompensationMode*  Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Level range of BacklightCompensation.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureOptions20 is a complexType.
///
struct tt__ExposureOptions20
{
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the device.</li>
///   <li>Manual Disabled exposure algorithm on the device.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__ExposureMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__ExposureMode* of size 1..unbounded.
    enum tt__ExposureMode*               Mode                           1;
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__ExposurePriority* is 0..unbounded.
   $int                                  __sizePriority                 0;
/// Array enum tt__ExposurePriority* of size 0..unbounded.
    enum tt__ExposurePriority*           Priority                       0;
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum ExposureTime.
/// </BLOCKQUOTE></PRE>
/// Element "MinExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum ExposureTime.
/// </BLOCKQUOTE></PRE>
/// Element "MaxExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum Gain.
/// </BLOCKQUOTE></PRE>
/// Element "MinGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum Gain.
/// </BLOCKQUOTE></PRE>
/// Element "MaxGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum Iris.
/// </BLOCKQUOTE></PRE>
/// Element "MinIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MinIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum Iris.
/// </BLOCKQUOTE></PRE>
/// Element "MaxIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               MaxIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the ExposureTime.
/// </BLOCKQUOTE></PRE>
/// Element "ExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               ExposureTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Gain.
/// </BLOCKQUOTE></PRE>
/// Element "Gain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Gain                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Iris.
/// </BLOCKQUOTE></PRE>
/// Element "Iris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Iris                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MoveOptions20 is a complexType.
///
struct tt__MoveOptions20
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the absolute control.
/// </BLOCKQUOTE></PRE>
/// Element "Absolute" of XSD type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    struct tt__AbsoluteFocusOptions*     Absolute                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the relative control.
/// </BLOCKQUOTE></PRE>
/// Element "Relative" of XSD type "http://www.onvif.org/ver10/schema":RelativeFocusOptions20.
    struct tt__RelativeFocusOptions20*   Relative                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the continuous control.
/// </BLOCKQUOTE></PRE>
/// Element "Continuous" of XSD type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    struct tt__ContinuousFocusOptions*   Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is a complexType.
///
struct tt__RelativeFocusOptions20
{
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the distance.
/// </BLOCKQUOTE></PRE>
/// Element "Distance" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20 is a complexType.
///
struct tt__WhiteBalance20
{
/// <PRE><BLOCKQUOTE>
///   'AUTO' or 'MANUAL'
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CrGain" of XSD type xs:float.
    float*                               CrGain                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CbGain" of XSD type xs:float.
    float*                               CbGain                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalance20Extension.
    struct tt__WhiteBalance20Extension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is a complexType.
///
struct tt__WhiteBalance20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20 is a complexType.
///
struct tt__FocusConfiguration20
{
/// <PRE><BLOCKQUOTE>
///   Mode of auto fucus.
///   <ul>
///   <li>AUTO</li>
///   <li>MANUAL</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "AutoFocusMode" of XSD type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of XSD type xs:float.
    float*                               DefaultSpeed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
/// Element "NearLimit" of XSD type xs:float.
    float*                               NearLimit                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
/// </BLOCKQUOTE></PRE>
/// Element "FarLimit" of XSD type xs:float.
    float*                               FarLimit                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension.
    struct tt__FocusConfiguration20Extension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is a complexType.
///
struct tt__FocusConfiguration20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is a complexType.
///
struct tt__WhiteBalanceOptions20
{
/// <PRE><BLOCKQUOTE>
///   Mode of WhiteBalance.
///   <ul>
///   <li>AUTO</li>
///   <li>MANUAL</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__WhiteBalanceMode* is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array enum tt__WhiteBalanceMode* of size 1..unbounded.
    enum tt__WhiteBalanceMode*           Mode                           1;
/// Element "YrGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YrGain                         0;	///< Optional element.
/// Element "YbGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YbGain                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension.
    struct tt__WhiteBalanceOptions20Extension*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is a complexType.
///
struct tt__WhiteBalanceOptions20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions20 is a complexType.
///
struct tt__FocusOptions20
{
/// <PRE><BLOCKQUOTE>
///   Mode of Auto Focus.
///   <ul>
///   <li>AUTO</li>
///   <li>MANUAL</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__AutoFocusMode* is 0..unbounded.
   $int                                  __sizeAutoFocusModes           0;
/// Array enum tt__AutoFocusMode* of size 0..unbounded.
    enum tt__AutoFocusMode*              AutoFocusModes                 0;
/// <PRE><BLOCKQUOTE>
///   Valid range of DefaultSpeed.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultSpeed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               DefaultSpeed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of NearLimit.
/// </BLOCKQUOTE></PRE>
/// Element "NearLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               NearLimit                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of FarLimit.
/// </BLOCKQUOTE></PRE>
/// Element "FarLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               FarLimit                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FocusOptions20Extension.
    struct tt__FocusOptions20Extension*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions20Extension is a complexType.
///
struct tt__FocusOptions20Extension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationOptions is a complexType.
///
struct tt__ToneCompensationOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for Tone Compensation mode. Its options shall be chosen from tt:ToneCompensationMode Type.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array char** of size 1..unbounded.
    char**                               Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for Tone Compensation.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:boolean.
    enum xsd__boolean                    Level                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingOptions is a complexType.
///
struct tt__DefoggingOptions
{
/// <PRE><BLOCKQUOTE>
///   Supported options for Defogging mode. Its options shall be chosen from tt:DefoggingMode Type.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeMode                     1;
/// Array char** of size 1..unbounded.
    char**                               Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for Defogging.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:boolean.
    enum xsd__boolean                    Level                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NoiseReductionOptions is a complexType.
///
struct tt__NoiseReductionOptions
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for NoiseReduction.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:boolean.
    enum xsd__boolean                    Level                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageExtension is a complexType.
///
struct tt__MessageExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of parameters according to the corresponding ItemListDescription.
///   Each item in the list shall have a unique name.
/// </BLOCKQUOTE></PRE>
struct tt__ItemList
{
/// <PRE><BLOCKQUOTE>
///   Value name pair as defined by the corresponding description.
/// </BLOCKQUOTE></PRE>
/// Size of SimpleItem array is 0..unbounded.
   $int                                  __sizeSimpleItem               0;
    struct _tt__ItemList_SimpleItem
    {
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Item value. The type is defined in the corresponding description.
/// </BLOCKQUOTE></PRE>
/// Attribute "Value" of XSD type xs:anySimpleType.
   @xsd__anySimpleType                   Value                          1;	///< Required attribute.
    }                                   *SimpleItem                     0;
/// <PRE><BLOCKQUOTE>
///   Complex value structure.
/// </BLOCKQUOTE></PRE>
/// Size of ElementItem array is 0..unbounded.
   $int                                  __sizeElementItem              0;
    struct _tt__ItemList_ElementItem
    {
/// @todo <any namespace="##any">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
    }                                   *ElementItem                    0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ItemListExtension.
    struct tt__ItemListExtension*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListExtension is a complexType.
///
struct tt__ItemListExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescription is a complexType.
///
struct tt__MessageDescription
{
/// <PRE><BLOCKQUOTE>
///   Set of tokens producing this message. The list may only contain SimpleItemDescription items.
///   The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
///   For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
///   and the name of the analytics module or rule.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Source                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// </BLOCKQUOTE></PRE>
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes the payload of the message.
/// </BLOCKQUOTE></PRE>
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Data                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    struct tt__MessageDescriptionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// </BLOCKQUOTE></PRE>
/// Attribute "IsProperty" of XSD type xs:boolean.
   @enum xsd__boolean*                   IsProperty                     0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is a complexType.
///
struct tt__MessageDescriptionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes a list of items. Each item in the list shall have a unique name.
///   The list is designed as linear structure without optional or unbounded elements.
///   Use ElementItems only when complex structures are inevitable.
/// </BLOCKQUOTE></PRE>
struct tt__ItemListDescription
{
/// <PRE><BLOCKQUOTE>
///   Description of a simple item. The type must be of cathegory simpleType (xs:string, xs:integer, xs:float, ...).
/// </BLOCKQUOTE></PRE>
/// Size of SimpleItemDescription array is 0..unbounded.
   $int                                  __sizeSimpleItemDescription    0;
    struct _tt__ItemListDescription_SimpleItemDescription
    {
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// Attribute "Type" of XSD type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
    }                                   *SimpleItemDescription          0;
/// <PRE><BLOCKQUOTE>
///   Description of a complex type. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
/// Size of ElementItemDescription array is 0..unbounded.
   $int                                  __sizeElementItemDescription   0;
    struct _tt__ItemListDescription_ElementItemDescription
    {
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The type of the item. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
/// Attribute "Type" of XSD type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
    }                                   *ElementItemDescription         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension.
    struct tt__ItemListDescriptionExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is a complexType.
///
struct tt__ItemListDescriptionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector is a complexType.
///
struct tt__Vector
{
/// Attribute "x" of XSD type xs:float.
   @float*                               x                              0;	///< Optional attribute.
/// Attribute "y" of XSD type xs:float.
   @float*                               y                              0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Rectangle is a complexType.
///
struct tt__Rectangle
{
/// Attribute "bottom" of XSD type xs:float.
   @float*                               bottom                         0;	///< Optional attribute.
/// Attribute "top" of XSD type xs:float.
   @float*                               top                            0;	///< Optional attribute.
/// Attribute "right" of XSD type xs:float.
   @float*                               right                          0;	///< Optional attribute.
/// Attribute "left" of XSD type xs:float.
   @float*                               left                           0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Polygon is a complexType.
///
struct tt__Polygon
{
/// Size of array of struct tt__Vector* is 3..unbounded.
   $int                                  __sizePoint                    3;
/// Array struct tt__Vector* of size 3..unbounded.
    struct tt__Vector*                   Point                          3;
};

/// @brief "http://www.onvif.org/ver10/schema":Polyline is a complexType.
///
struct tt__Polyline
{
/// Size of array of struct tt__Vector* is 2..unbounded.
   $int                                  __sizePoint                    2;
/// Array struct tt__Vector* of size 2..unbounded.
    struct tt__Vector*                   Point                          2;
};

/// @brief "http://www.onvif.org/ver10/schema":Color is a complexType.
///
struct tt__Color
{
/// Attribute "X" of XSD type xs:float.
   @float                                X                              1;	///< Required attribute.
/// Attribute "Y" of XSD type xs:float.
   @float                                Y                              1;	///< Required attribute.
/// Attribute "Z" of XSD type xs:float.
   @float                                Z                              1;	///< Required attribute.
/// Attribute "Colorspace" of XSD type xs:anyURI.
   @xsd__anyURI                          Colorspace                     0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorCovariance is a complexType.
///
struct tt__ColorCovariance
{
/// Attribute "XX" of XSD type xs:float.
   @float                                XX                             1;	///< Required attribute.
/// Attribute "YY" of XSD type xs:float.
   @float                                YY                             1;	///< Required attribute.
/// Attribute "ZZ" of XSD type xs:float.
   @float                                ZZ                             1;	///< Required attribute.
/// Attribute "XY" of XSD type xs:float.
   @float*                               XY                             0;	///< Optional attribute.
/// Attribute "XZ" of XSD type xs:float.
   @float*                               XZ                             0;	///< Optional attribute.
/// Attribute "YZ" of XSD type xs:float.
   @float*                               YZ                             0;	///< Optional attribute.
/// Attribute "Colorspace" of XSD type xs:anyURI.
   @xsd__anyURI                          Colorspace                     0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Appearance is a complexType.
///
struct tt__Appearance
{
/// Element "Transformation" of XSD type "http://www.onvif.org/ver10/schema":Transformation.
    struct tt__Transformation*           Transformation                 0;	///< Optional element.
/// Element "Shape" of XSD type "http://www.onvif.org/ver10/schema":ShapeDescriptor.
    struct tt__ShapeDescriptor*          Shape                          0;	///< Optional element.
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":ColorDescriptor.
    struct tt__ColorDescriptor*          Color                          0;	///< Optional element.
/// Element "Class" of XSD type "http://www.onvif.org/ver10/schema":ClassDescriptor.
    struct tt__ClassDescriptor*          Class                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AppearanceExtension.
    struct tt__AppearanceExtension*      Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AppearanceExtension is a complexType.
///
struct tt__AppearanceExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ShapeDescriptor is a complexType.
///
struct tt__ShapeDescriptor
{
/// Element "BoundingBox" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                BoundingBox                    1;	///< Required element.
/// Element "CenterOfGravity" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   CenterOfGravity                1;	///< Required element.
/// Size of array of struct tt__Polygon* is 0..unbounded.
   $int                                  __sizePolygon                  0;
/// Array struct tt__Polygon* of size 0..unbounded.
    struct tt__Polygon*                  Polygon                        0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension.
    struct tt__ShapeDescriptorExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension is a complexType.
///
struct tt__ShapeDescriptorExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorDescriptor is a complexType.
///
struct tt__ColorDescriptor
{
/// Size of ColorCluster array is 0..unbounded.
   $int                                  __sizeColorCluster             0;
    struct _tt__ColorDescriptor_ColorCluster
    {
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":Color.
    struct tt__Color*                    Color                          1;	///< Required element.
/// Element "Weight" of XSD type xs:float.
    float*                               Weight                         0;	///< Optional element.
/// Element "Covariance" of XSD type "http://www.onvif.org/ver10/schema":ColorCovariance.
    struct tt__ColorCovariance*          Covariance                     0;	///< Optional element.
    }                                   *ColorCluster                   0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ColorDescriptorExtension.
    struct tt__ColorDescriptorExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorDescriptorExtension is a complexType.
///
struct tt__ColorDescriptorExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ClassDescriptor is a complexType.
///
struct tt__ClassDescriptor
{
/// Size of ClassCandidate array is 0..unbounded.
   $int                                  __sizeClassCandidate           0;
    struct _tt__ClassDescriptor_ClassCandidate
    {
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":ClassType.
    enum tt__ClassType                   Type                           1;	///< Required element.
/// Element "Likelihood" of XSD type xs:float.
    float                                Likelihood                     1;	///< Required element.
    }                                   *ClassCandidate                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension.
    struct tt__ClassDescriptorExtension*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ClassDescriptorExtension is a complexType.
///
struct tt__ClassDescriptorExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Size of array of struct tt__OtherType* is 1..unbounded.
   $int                                  __sizeOtherTypes               1;
/// Array struct tt__OtherType* of size 1..unbounded.
    struct tt__OtherType*                OtherTypes                     1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension2.
    struct tt__ClassDescriptorExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ClassDescriptorExtension2 is a complexType.
///
struct tt__ClassDescriptorExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OtherType is a complexType.
///
struct tt__OtherType
{
/// <PRE><BLOCKQUOTE>
///   Object Class Type
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type xs:string.
    char*                                Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A likelihood/probability that the corresponding object belongs to this class. The sum of the likelihoods shall NOT exceed 1
/// </BLOCKQUOTE></PRE>
/// Element "Likelihood" of XSD type xs:float.
    float                                Likelihood                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="1" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 1..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectExtension is a complexType.
///
struct tt__ObjectExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Transformation is a complexType.
///
struct tt__Transformation
{
/// Element "Translate" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   Translate                      0;	///< Optional element.
/// Element "Scale" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   Scale                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":TransformationExtension.
    struct tt__TransformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TransformationExtension is a complexType.
///
struct tt__TransformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Frame is a complexType.
///
struct tt__Frame
{
/// Element "PTZStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZStatus.
    struct tt__PTZStatus*                PTZStatus                      0;	///< Optional element.
/// Element "Transformation" of XSD type "http://www.onvif.org/ver10/schema":Transformation.
    struct tt__Transformation*           Transformation                 0;	///< Optional element.
/// Size of array of struct tt__Object* is 0..unbounded.
   $int                                  __sizeObject                   0;
/// Array struct tt__Object* of size 0..unbounded.
    struct tt__Object*                   Object                         0;
/// Element "ObjectTree" of XSD type "http://www.onvif.org/ver10/schema":ObjectTree.
    struct tt__ObjectTree*               ObjectTree                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FrameExtension.
    struct tt__FrameExtension*           Extension                      0;	///< Optional element.
/// Attribute "UtcTime" of XSD type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FrameExtension is a complexType.
///
struct tt__FrameExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "MotionInCells" of XSD type "http://www.onvif.org/ver10/schema":MotionInCells.
    struct tt__MotionInCells*            MotionInCells                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FrameExtension2.
    struct tt__FrameExtension2*          Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":FrameExtension2 is a complexType.
///
struct tt__FrameExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Merge is a complexType.
///
struct tt__Merge
{
/// Size of array of struct tt__ObjectId* is 2..unbounded.
   $int                                  __sizefrom                     2;
/// Array struct tt__ObjectId* of size 2..unbounded.
    struct tt__ObjectId*                 from                           2;
/// Element "to" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    struct tt__ObjectId*                 to                             1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Split is a complexType.
///
struct tt__Split
{
/// Element "from" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    struct tt__ObjectId*                 from                           1;	///< Required element.
/// Size of array of struct tt__ObjectId* is 2..unbounded.
   $int                                  __sizeto                       2;
/// Array struct tt__ObjectId* of size 2..unbounded.
    struct tt__ObjectId*                 to                             2;
};

/// @brief "http://www.onvif.org/ver10/schema":Rename is a complexType.
///
struct tt__Rename
{
/// Element "from" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    struct tt__ObjectId*                 from                           1;	///< Required element.
/// Element "to" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    struct tt__ObjectId*                 to                             1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectId is a complexType.
///
struct tt__ObjectId
{
/// Attribute "ObjectId" of XSD type xs:integer.
   @xsd__integer                         ObjectId                       0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Behaviour is a complexType.
///
struct tt__Behaviour
{
    struct _tt__Behaviour_Removed
    {
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Removed                        0;	///< Optional element.
    struct _tt__Behaviour_Idle
    {
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Idle                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":BehaviourExtension.
    struct tt__BehaviourExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":BehaviourExtension is a complexType.
///
struct tt__BehaviourExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectTree is a complexType.
///
struct tt__ObjectTree
{
/// Size of array of struct tt__Rename* is 0..unbounded.
   $int                                  __sizeRename                   0;
/// Array struct tt__Rename* of size 0..unbounded.
    struct tt__Rename*                   Rename                         0;
/// Size of array of struct tt__Split* is 0..unbounded.
   $int                                  __sizeSplit                    0;
/// Array struct tt__Split* of size 0..unbounded.
    struct tt__Split*                    Split                          0;
/// Size of array of struct tt__Merge* is 0..unbounded.
   $int                                  __sizeMerge                    0;
/// Array struct tt__Merge* of size 0..unbounded.
    struct tt__Merge*                    Merge                          0;
/// Size of array of struct tt__ObjectId* is 0..unbounded.
   $int                                  __sizeDelete                   0;
/// Array struct tt__ObjectId* of size 0..unbounded.
    struct tt__ObjectId*                 Delete                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ObjectTreeExtension.
    struct tt__ObjectTreeExtension*      Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectTreeExtension is a complexType.
///
struct tt__ObjectTreeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MotionInCells is a complexType.
///
struct tt__MotionInCells
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Number of columns of the cell grid (x dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Columns" of XSD type xs:integer.
   @xsd__integer                         Columns                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Number of rows of the cell grid (y dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Rows" of XSD type xs:integer.
   @xsd__integer                         Rows                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A 1 denotes a cell where motion is detected and a 0 an empty cell. The first cell is in the upper left corner. Then the cell order goes first from left to right and then from up to down. If the number of cells is not a multiple of 8 the last byte is filled with zeros. The information is run length encoded according to Packbit coding in ISO 12369 (TIFF, Revision 6.0).
/// </BLOCKQUOTE></PRE>
/// Attribute "Cells" of XSD type xs:base64Binary.
   @struct xsd__base64Binary             Cells                          1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is a complexType.
///
struct tt__AnalyticsEngineConfiguration
{
/// Size of array of struct tt__Config* is 0..unbounded.
   $int                                  __sizeAnalyticsModule          0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   AnalyticsModule                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension.
    struct tt__AnalyticsEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is a complexType.
///
struct tt__AnalyticsEngineConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is a complexType.
///
struct tt__RuleEngineConfiguration
{
/// Size of array of struct tt__Config* is 0..unbounded.
   $int                                  __sizeRule                     0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   Rule                           0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension.
    struct tt__RuleEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is a complexType.
///
struct tt__RuleEngineConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Config is a complexType.
///
struct tt__Config
{
/// <PRE><BLOCKQUOTE>
///   List of configuration parameters as defined in the correspding description.
/// </BLOCKQUOTE></PRE>
/// Element "Parameters" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Name of the configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Type of the configuration represented by a unique QName. The Type characterizes a ConfigDescription defining the Parameters.
/// </BLOCKQUOTE></PRE>
/// Attribute "Type" of XSD type xs:QName.
   @_QName                               Type                           1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigDescription is a complexType.
///
struct tt__ConfigDescription
{
/// <PRE><BLOCKQUOTE>
///   List describing the configuration parameters. The names of the parameters must be unique. If possible SimpleItems
///   should be used to transport the information to ease parsing of dynamically defined messages by a client
///   application.
/// </BLOCKQUOTE></PRE>
/// Element "Parameters" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The analytics modules and rule engine produce Events, which must be listed within the Analytics Module Description. In order to do so
///   the structure of the Message is defined and consists of three groups: Source, Key, and Data. It is recommended to use SimpleItemDescriptions wherever applicable.
///   The name of all Items must be unique within all Items contained in any group of this Message.
///   Depending on the component multiple parameters or none may be needed to identify the component uniquely.
/// </BLOCKQUOTE></PRE>
/// Size of Messages array is 0..unbounded.
   $int                                  __sizeMessages                 0;
    struct _tt__ConfigDescription_Messages
    {
/// INHERITED FROM tt__MessageDescription:
/// <PRE><BLOCKQUOTE>
///   Set of tokens producing this message. The list may only contain SimpleItemDescription items.
///   The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
///   For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
///   and the name of the analytics module or rule.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Source                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// </BLOCKQUOTE></PRE>
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes the payload of the message.
/// </BLOCKQUOTE></PRE>
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Data                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    struct tt__MessageDescriptionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// </BLOCKQUOTE></PRE>
/// Attribute "IsProperty" of XSD type xs:boolean.
   @enum xsd__boolean*                   IsProperty                     0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM tt__MessageDescription
/// <PRE><BLOCKQUOTE>
///   The ParentTopic labels the message (e.g. "nn:RuleEngine/LineCrossing"). The real message can extend the ParentTopic
///   by for example the name of the instaniated rule (e.g. "nn:RuleEngine/LineCrossing/corssMyFirstLine").
///   Even without knowing the complete topic name, the subscriber will be able to distiguish the
///   messages produced by different rule instances of the same type via the Source fields of the message.
///   There the name of the rule instance, which produced the message, must be listed.
/// </BLOCKQUOTE></PRE>
/// Element "ParentTopic" of XSD type xs:string.
    char*                                ParentTopic                    1;	///< Required element.
    }                                   *Messages                       0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension.
    struct tt__ConfigDescriptionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   XML Type of the Configuration (e.g. "tt::LineDetector").
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:QName.
   @_QName                               Name                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is a complexType.
///
struct tt__ConfigDescriptionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedRules is a complexType.
///
struct tt__SupportedRules
{
/// <PRE><BLOCKQUOTE>
///   Lists the location of all schemas that are referenced in the rules.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeRuleContentSchemaLocation 0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         RuleContentSchemaLocation      0;
/// <PRE><BLOCKQUOTE>
///   List of rules supported by the Video Analytics configuration..
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__ConfigDescription* is 0..unbounded.
   $int                                  __sizeRuleDescription          0;
/// Array struct tt__ConfigDescription* of size 0..unbounded.
    struct tt__ConfigDescription*        RuleDescription                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SupportedRulesExtension.
    struct tt__SupportedRulesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedRulesExtension is a complexType.
///
struct tt__SupportedRulesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is a complexType.
///
struct tt__SupportedAnalyticsModules
{
/// <PRE><BLOCKQUOTE>
///   It optionally contains a list of URLs that provide the location of schema files.
///   These schema files describe the types and elements used in the analytics module descriptions.
///   If the analytics module descriptions reference types or elements of the ONVIF schema file,
///   the ONVIF schema file MUST be explicitly listed.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeAnalyticsModuleContentSchemaLocation 0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         AnalyticsModuleContentSchemaLocation 0;
/// Size of array of struct tt__ConfigDescription* is 0..unbounded.
   $int                                  __sizeAnalyticsModuleDescription 0;
/// Array struct tt__ConfigDescription* of size 0..unbounded.
    struct tt__ConfigDescription*        AnalyticsModuleDescription     0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension.
    struct tt__SupportedAnalyticsModulesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is a complexType.
///
struct tt__SupportedAnalyticsModulesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PolygonConfiguration is a complexType.
///
struct tt__PolygonConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains Polygon configuration for rule parameters
/// </BLOCKQUOTE></PRE>
/// Element "Polygon" of XSD type "http://www.onvif.org/ver10/schema":Polygon.
    struct tt__Polygon*                  Polygon                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArray is a complexType.
///
struct tt__PolylineArray
{
/// <PRE><BLOCKQUOTE>
///   Contains array of Polyline
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Polyline* is 1..unbounded.
   $int                                  __sizeSegment                  1;
/// Array struct tt__Polyline* of size 1..unbounded.
    struct tt__Polyline*                 Segment                        1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PolylineArrayExtension.
    struct tt__PolylineArrayExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArrayExtension is a complexType.
///
struct tt__PolylineArrayExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArrayConfiguration is a complexType.
///
struct tt__PolylineArrayConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains PolylineArray configuration data
/// </BLOCKQUOTE></PRE>
/// Element "PolylineArray" of XSD type "http://www.onvif.org/ver10/schema":PolylineArray.
    struct tt__PolylineArray*            PolylineArray                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MotionExpression is a complexType.
///
struct tt__MotionExpression
{
/// <PRE><BLOCKQUOTE>
///   Motion Expression data structure contains motion expression which is based on Scene Descriptor schema with XPATH syntax. The Type argument could allow introduction of different dialects
/// </BLOCKQUOTE></PRE>
/// Element "Expression" of XSD type xs:string.
    char*                                Expression                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Type" of XSD type xs:string.
   @char*                                Type                           0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MotionExpressionConfiguration is a complexType.
///
struct tt__MotionExpressionConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Contains Rule MotionExpression configuration
/// </BLOCKQUOTE></PRE>
/// Element "MotionExpression" of XSD type "http://www.onvif.org/ver10/schema":MotionExpression.
    struct tt__MotionExpression*         MotionExpression               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CellLayout is a complexType.
///
struct tt__CellLayout
{
/// <PRE><BLOCKQUOTE>
///   Mapping of the cell grid to the Video frame. The cell grid is starting from the upper left corner and x dimension is going from left to right and the y dimension from up to down.
/// </BLOCKQUOTE></PRE>
/// Element "Transformation" of XSD type "http://www.onvif.org/ver10/schema":Transformation.
    struct tt__Transformation*           Transformation                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Number of columns of the cell grid (x dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Columns" of XSD type xs:integer.
   @xsd__integer                         Columns                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Number of rows of the cell grid (y dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Rows" of XSD type xs:integer.
   @xsd__integer                         Rows                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataStream is a complexType.
///
struct tt__MetadataStream
{
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_MetadataStream          0;
    struct __tt__union_MetadataStream
    {
   $int                                  __union_MetadataStream         0;	///< Union _tt__union_MetadataStream selector: set to SOAP_UNION__tt__union_MetadataStream_<fieldname> or 0
    union _tt__union_MetadataStream
    {
/// Element "VideoAnalytics" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsStream.
    struct tt__VideoAnalyticsStream*     VideoAnalytics                 1;	///< Required element.
/// Element "PTZ" of XSD type "http://www.onvif.org/ver10/schema":PTZStream.
    struct tt__PTZStream*                PTZ                            1;	///< Required element.
/// Element "Event" of XSD type "http://www.onvif.org/ver10/schema":EventStream.
    struct tt__EventStream*              Event                          1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataStreamExtension.
    struct tt__MetadataStreamExtension*  Extension                      1;	///< Required element.
    }                                    union_MetadataStream          ;
    }                                   *__union_MetadataStream        ;
//  END OF CHOICE
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataStreamExtension is a complexType.
///
struct tt__MetadataStreamExtension
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "AudioAnalyticsStream" of XSD type "http://www.onvif.org/ver10/schema":AudioAnalyticsStream.
    struct tt__AudioAnalyticsStream*     AudioAnalyticsStream           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataStreamExtension2.
    struct tt__MetadataStreamExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataStreamExtension2 is a complexType.
///
struct tt__MetadataStreamExtension2
{
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioAnalyticsStream is a complexType.
///
struct tt__AudioAnalyticsStream
{
/// Size of array of struct tt__AudioDescriptor* is 0..unbounded.
   $int                                  __sizeAudioDescriptor          0;
/// Array struct tt__AudioDescriptor* of size 0..unbounded.
    struct tt__AudioDescriptor*          AudioDescriptor                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioAnalyticsStreamExtension.
    struct tt__AudioAnalyticsStreamExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDescriptor is a complexType.
///
struct tt__AudioDescriptor
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "UtcTime" of XSD type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioAnalyticsStreamExtension is a complexType.
///
struct tt__AudioAnalyticsStreamExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsStream is a complexType.
///
struct tt__VideoAnalyticsStream
{
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_VideoAnalyticsStream    0;
    struct __tt__union_VideoAnalyticsStream
    {
   $int                                  __union_VideoAnalyticsStream   0;	///< Union _tt__union_VideoAnalyticsStream selector: set to SOAP_UNION__tt__union_VideoAnalyticsStream_<fieldname> or 0
/// Union for choice in tt__VideoAnalyticsStream.
    union _tt__union_VideoAnalyticsStream
    {
/// Element "Frame" of XSD type "http://www.onvif.org/ver10/schema":Frame.
    struct tt__Frame*                    Frame                          1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension.
    struct tt__VideoAnalyticsStreamExtension*  Extension                      1;	///< Required element.
    }                                    union_VideoAnalyticsStream    ;
    }                                   *__union_VideoAnalyticsStream  ;
//  END OF CHOICE
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension is a complexType.
///
struct tt__VideoAnalyticsStreamExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStream is a complexType.
///
struct tt__PTZStream
{
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_PTZStream               0;
    struct __tt__union_PTZStream
    {
   $int                                  __union_PTZStream              0;	///< Union _tt__union_PTZStream selector: set to SOAP_UNION__tt__union_PTZStream_<fieldname> or 0
/// Union for choice in tt__PTZStream.
    union _tt__union_PTZStream
    {
/// Element "PTZStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZStatus.
    struct tt__PTZStatus*                PTZStatus                      1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZStreamExtension.
    struct tt__PTZStreamExtension*       Extension                      1;	///< Required element.
    }                                    union_PTZStream               ;
    }                                   *__union_PTZStream             ;
//  END OF CHOICE
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStreamExtension is a complexType.
///
struct tt__PTZStreamExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EventStream is a complexType.
///
struct tt__EventStream
{
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_EventStream             0;
    struct __tt__union_EventStream
    {
   $int                                  __union_EventStream            0;	///< Union _tt__union_EventStream selector: set to SOAP_UNION__tt__union_EventStream_<fieldname> or 0
/// Union for choice in tt__EventStream.
    union _tt__union_EventStream
    {
/// Element reference "http://www.onvif.org/ver10/schema:""http://docs.oasis-open.org/wsn/b-2":NotificationMessage.
    struct wsnt__NotificationMessageHolderType*  wsnt__NotificationMessage      1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":EventStreamExtension.
    struct tt__EventStreamExtension*     Extension                      1;	///< Required element.
    }                                    union_EventStream             ;
    }                                   *__union_EventStream           ;
//  END OF CHOICE
};

/// @brief "http://www.onvif.org/ver10/schema":EventStreamExtension is a complexType.
///
struct tt__EventStreamExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Configuration of the streaming and coding settings of a Video window.
/// </BLOCKQUOTE></PRE>
struct tt__PaneConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Optional name of the pane configuration.
/// </BLOCKQUOTE></PRE>
/// Element "PaneName" of XSD type xs:string.
    char*                                PaneName                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device has audio outputs, this element contains a pointer to the audio output that is associated with the pane. A client
///   can retrieve the available audio outputs of a device using the GetAudioOutputs command of the DeviceIO service.
/// </BLOCKQUOTE></PRE>
/// Element "AudioOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioOutputToken               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device has audio sources, this element contains a pointer to the audio source that is associated with this pane.
///   The audio connection from a decoder device to the NVT is established using the backchannel mechanism. A client can retrieve the available audio sources of a device using the GetAudioSources command of the
///   DeviceIO service.
/// </BLOCKQUOTE></PRE>
/// Element "AudioSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioSourceToken               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The configuration of the audio encoder including codec, bitrate
///   and sample rate.
/// </BLOCKQUOTE></PRE>
/// Element "AudioEncoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    struct tt__AudioEncoderConfiguration*  AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A pointer to a Receiver that has the necessary information to receive
///   data from a Transmitter. This Receiver can be connected and the network video decoder displays the received data on the specified outputs. A client can retrieve the available Receivers using the
///   GetReceivers command of the Receiver Service.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A unique identifier in the display device.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneLayout is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A pane layout describes one Video window of a display. It links a pane configuration to a region of the screen.
/// </BLOCKQUOTE></PRE>
struct tt__PaneLayout
{
/// <PRE><BLOCKQUOTE>
///   Reference to the configuration of the streaming and coding parameters.
/// </BLOCKQUOTE></PRE>
/// Element "Pane" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Pane                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Describes the location and size of the area on the monitor. The area coordinate values are espressed in normalized units [-1.0, 1.0].
/// </BLOCKQUOTE></PRE>
/// Element "Area" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    struct tt__Rectangle*                Area                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Layout is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A layout describes a set of Video windows that are displayed simultaniously on a display.
/// </BLOCKQUOTE></PRE>
struct tt__Layout
{
/// <PRE><BLOCKQUOTE>
///   List of panes assembling the display layout.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PaneLayout* is 1..unbounded.
   $int                                  __sizePaneLayout               1;
/// Array struct tt__PaneLayout* of size 1..unbounded.
    struct tt__PaneLayout*               PaneLayout                     1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":LayoutExtension.
    struct tt__LayoutExtension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutExtension is a complexType.
///
struct tt__LayoutExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":CodingCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   This type contains the Audio and Video coding capabilities of a display service.
/// </BLOCKQUOTE></PRE>
struct tt__CodingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   If the device supports audio encoding this section describes the supported codecs and their configuration.
/// </BLOCKQUOTE></PRE>
/// Element "AudioEncodingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    struct tt__AudioEncoderConfigurationOptions*  AudioEncodingCapabilities      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device supports audio decoding this section describes the supported codecs and their settings.
/// </BLOCKQUOTE></PRE>
/// Element "AudioDecodingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    struct tt__AudioDecoderConfigurationOptions*  AudioDecodingCapabilities      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This section describes the supported video codesc and their configuration.
/// </BLOCKQUOTE></PRE>
/// Element "VideoDecodingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions.
    struct tt__VideoDecoderConfigurationOptions*  VideoDecodingCapabilities      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The options supported for a display layout.
/// </BLOCKQUOTE></PRE>
struct tt__LayoutOptions
{
/// <PRE><BLOCKQUOTE>
///   Lists the possible Pane Layouts of the Video Output
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__PaneLayoutOptions* is 1..unbounded.
   $int                                  __sizePaneLayoutOptions        1;
/// Array struct tt__PaneLayoutOptions* of size 1..unbounded.
    struct tt__PaneLayoutOptions*        PaneLayoutOptions              1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":LayoutOptionsExtension.
    struct tt__LayoutOptionsExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is a complexType.
///
struct tt__LayoutOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneLayoutOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Description of a pane layout describing a complete display layout.
/// </BLOCKQUOTE></PRE>
struct tt__PaneLayoutOptions
{
/// <PRE><BLOCKQUOTE>
///   List of areas assembling a layout. Coordinate values are in the range [-1.0, 1.0].
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Rectangle* is 1..unbounded.
   $int                                  __sizeArea                     1;
/// Array struct tt__Rectangle* of size 1..unbounded.
    struct tt__Rectangle*                Area                           1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PaneOptionExtension.
    struct tt__PaneOptionExtension*      Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneOptionExtension is a complexType.
///
struct tt__PaneOptionExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":Receiver is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Description of a receiver, including its token and configuration.
/// </BLOCKQUOTE></PRE>
struct tt__Receiver
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Describes the configuration of the receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    struct tt__ReceiverConfiguration*    Configuration                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes the configuration of a receiver.
/// </BLOCKQUOTE></PRE>
struct tt__ReceiverConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The following connection modes are defined:
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum tt__ReceiverMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Details of the URI to which the receiver should connect.
/// </BLOCKQUOTE></PRE>
/// Element "MediaUri" of XSD type xs:anyURI.
    xsd__anyURI                          MediaUri                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Stream connection parameters.
/// </BLOCKQUOTE></PRE>
/// Element "StreamSetup" of XSD type "http://www.onvif.org/ver10/schema":StreamSetup.
    struct tt__StreamSetup*              StreamSetup                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverStateInformation is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Contains information about a receiver's current state.
/// </BLOCKQUOTE></PRE>
struct tt__ReceiverStateInformation
{
/// <PRE><BLOCKQUOTE>
///   The connection state of the receiver may have one of the following states:
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":ReceiverState.
    enum tt__ReceiverState               State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the receiver was created automatically.
/// </BLOCKQUOTE></PRE>
/// Element "AutoCreated" of XSD type xs:boolean.
    enum xsd__boolean                    AutoCreated                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SourceReference is a complexType.
///
struct tt__SourceReference
{
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Type" of XSD type xs:anyURI.
   @xsd__anyURI                          Type                           0;	///< Default attribute value="http://www.onvif.org/ver10/schema/Receiver".
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DateTimeRange is a complexType.
///
struct tt__DateTimeRange
{
/// Element "From" of XSD type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// Element "Until" of XSD type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingSummary is a complexType.
///
struct tt__RecordingSummary
{
/// <PRE><BLOCKQUOTE>
///   The earliest point in time where there is recorded data on the device.
/// </BLOCKQUOTE></PRE>
/// Element "DataFrom" of XSD type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The most recent point in time where there is recorded data on the device.
/// </BLOCKQUOTE></PRE>
/// Element "DataUntil" of XSD type xs:dateTime.
    time_t                               DataUntil                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device contains this many recordings.
/// </BLOCKQUOTE></PRE>
/// Element "NumberRecordings" of XSD type xs:int.
    int                                  NumberRecordings               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SearchScope is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A structure for defining a limited scope when searching in recorded data.
/// </BLOCKQUOTE></PRE>
struct tt__SearchScope
{
/// <PRE><BLOCKQUOTE>
///   A list of sources that are included in the scope. If this list is included, only data from one of these sources shall be searched.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__SourceReference* is 0..unbounded.
   $int                                  __sizeIncludedSources          0;
/// Array struct tt__SourceReference* of size 0..unbounded.
    struct tt__SourceReference*          IncludedSources                0;
/// <PRE><BLOCKQUOTE>
///   A list of recordings that are included in the scope. If this list is included, only data from one of these recordings shall be searched.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__RecordingReference* is 0..unbounded.
   $int                                  __sizeIncludedRecordings       0;
/// Array tt__RecordingReference* of size 0..unbounded.
    tt__RecordingReference*              IncludedRecordings             0;
/// <PRE><BLOCKQUOTE>
///   An xpath expression used to specify what recordings to search. Only those recordings with an RecordingInformation structure that matches the filter shall be searched.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingInformationFilter" of XSD type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression                  RecordingInformationFilter     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extension point
/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SearchScopeExtension.
    struct tt__SearchScopeExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SearchScopeExtension is a complexType.
///
struct tt__SearchScopeExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPositionFilter is a complexType.
///
struct tt__PTZPositionFilter
{
/// <PRE><BLOCKQUOTE>
///   The lower boundary of the PTZ volume to look for.
/// </BLOCKQUOTE></PRE>
/// Element "MinPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                MinPosition                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The upper boundary of the PTZ volume to look for.
/// </BLOCKQUOTE></PRE>
/// Element "MaxPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                MaxPosition                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If true, search for when entering the specified PTZ volume.
/// </BLOCKQUOTE></PRE>
/// Element "EnterOrExit" of XSD type xs:boolean.
    enum xsd__boolean                    EnterOrExit                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataFilter is a complexType.
///
struct tt__MetadataFilter
{
/// Element "MetadataStreamFilter" of XSD type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression                  MetadataStreamFilter           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FindRecordingResultList is a complexType.
///
struct tt__FindRecordingResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A RecordingInformation structure for each found recording matching the search.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__RecordingInformation* is 0..unbounded.
   $int                                  __sizeRecordingInformation     0;
/// Array struct tt__RecordingInformation* of size 0..unbounded.
    struct tt__RecordingInformation*     RecordingInformation           0;
};

/// @brief "http://www.onvif.org/ver10/schema":FindEventResultList is a complexType.
///
struct tt__FindEventResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindEventResult structure for each found event matching the search.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__FindEventResult* is 0..unbounded.
   $int                                  __sizeResult                   0;
/// Array struct tt__FindEventResult* of size 0..unbounded.
    struct tt__FindEventResult*          Result                         0;
};

/// @brief "http://www.onvif.org/ver10/schema":FindEventResult is a complexType.
///
struct tt__FindEventResult
{
/// <PRE><BLOCKQUOTE>
///   The recording where this event was found. Empty string if no recording is associated with this event.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the track where this event was found. Empty string if no track is associated with this event.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time when the event occured.
/// </BLOCKQUOTE></PRE>
/// Element "Time" of XSD type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The description of the event.
/// </BLOCKQUOTE></PRE>
/// Element "Event" of XSD type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
    struct wsnt__NotificationMessageHolderType*  Event                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If true, indicates that the event is a virtual event generated for this particular search session to give the state of a property at the start time of the search.
/// </BLOCKQUOTE></PRE>
/// Element "StartStateEvent" of XSD type xs:boolean.
    enum xsd__boolean                    StartStateEvent                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is a complexType.
///
struct tt__FindPTZPositionResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindPTZPositionResult structure for each found PTZ position matching the search.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__FindPTZPositionResult* is 0..unbounded.
   $int                                  __sizeResult                   0;
/// Array struct tt__FindPTZPositionResult* of size 0..unbounded.
    struct tt__FindPTZPositionResult*    Result                         0;
};

/// @brief "http://www.onvif.org/ver10/schema":FindPTZPositionResult is a complexType.
///
struct tt__FindPTZPositionResult
{
/// <PRE><BLOCKQUOTE>
///   A reference to the recording containing the PTZ position.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the metadata track containing the PTZ position.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time when the PTZ position was valid.
/// </BLOCKQUOTE></PRE>
/// Element "Time" of XSD type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The PTZ position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                Position                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FindMetadataResultList is a complexType.
///
struct tt__FindMetadataResultList
{
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindMetadataResult structure for each found set of Metadata matching the search.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__FindMetadataResult* is 0..unbounded.
   $int                                  __sizeResult                   0;
/// Array struct tt__FindMetadataResult* of size 0..unbounded.
    struct tt__FindMetadataResult*       Result                         0;
};

/// @brief "http://www.onvif.org/ver10/schema":FindMetadataResult is a complexType.
///
struct tt__FindMetadataResult
{
/// <PRE><BLOCKQUOTE>
///   A reference to the recording containing the metadata.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the metadata track containing the matching metadata.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The point in time when the matching metadata occurs in the metadata track.
/// </BLOCKQUOTE></PRE>
/// Element "Time" of XSD type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingInformation is a complexType.
///
struct tt__RecordingInformation
{
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Information about the source of the recording. This gives a description of where the data in the recording comes from. Since a single
///   recording is intended to record related material, there is just one source. It is indicates the physical location or the
///   major data source for the recording. Currently the recordingconfiguration cannot describe each individual data source.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    struct tt__RecordingSourceInformation*  Source                         1;	///< Required element.
/// Element "EarliestRecording" of XSD type xs:dateTime.
    time_t*                              EarliestRecording              0;	///< Optional element.
/// Element "LatestRecording" of XSD type xs:dateTime.
    time_t*                              LatestRecording                0;	///< Optional element.
/// Element "Content" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__TrackInformation* is 0..unbounded.
   $int                                  __sizeTrack                    0;
/// Array struct tt__TrackInformation* of size 0..unbounded.
    struct tt__TrackInformation*         Track                          0;
/// Element "RecordingStatus" of XSD type "http://www.onvif.org/ver10/schema":RecordingStatus.
    enum tt__RecordingStatus             RecordingStatus                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingSourceInformation is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of informative desciptions of a data source. The Search searvice allows a client to filter on recordings based on information in this structure.
/// </BLOCKQUOTE></PRE>
struct tt__RecordingSourceInformation
{
/// <PRE><BLOCKQUOTE>
///   Identifier for the source chosen by the client that creates the structure.
///   This identifier is opaque to the device. Clients may use any type of URI for this field. A device shall support at least 128 characters.
/// </BLOCKQUOTE></PRE>
/// Element "SourceId" of XSD type xs:anyURI.
    xsd__anyURI                          SourceId                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative user readable name of the source, e.g. "Camera23". A device shall support at least 20 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the physical location of the source, e.g. the coordinates on a map.
/// </BLOCKQUOTE></PRE>
/// Element "Location" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Location                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the source.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   URI provided by the service supplying data to be recorded. A device shall support at least 128 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type xs:anyURI.
    xsd__anyURI                          Address                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackInformation is a complexType.
///
struct tt__TrackInformation
{
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Type of the track: "Video", "Audio" or "Metadata".
///   The track shall only be able to hold data of that type.
/// </BLOCKQUOTE></PRE>
/// Element "TrackType" of XSD type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the contents of the track.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The start date and time of the oldest recorded data in the track.
/// </BLOCKQUOTE></PRE>
/// Element "DataFrom" of XSD type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The stop date and time of the newest recorded data in the track.
/// </BLOCKQUOTE></PRE>
/// Element "DataTo" of XSD type xs:dateTime.
    time_t                               DataTo                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaAttributes is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of media attributes valid for a recording at a point in time or for a time interval.
/// </BLOCKQUOTE></PRE>
struct tt__MediaAttributes
{
/// <PRE><BLOCKQUOTE>
///   A reference to the recording that has these attributes.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A set of attributes for each track.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__TrackAttributes* is 0..unbounded.
   $int                                  __sizeTrackAttributes          0;
/// Array struct tt__TrackAttributes* of size 0..unbounded.
    struct tt__TrackAttributes*          TrackAttributes                0;
/// <PRE><BLOCKQUOTE>
///   The attributes are valid from this point in time in the recording.
/// </BLOCKQUOTE></PRE>
/// Element "From" of XSD type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The attributes are valid until this point in time in the recording. Can be equal to 'From' to indicate that the attributes are only known to be valid for this particular point in time.
/// </BLOCKQUOTE></PRE>
/// Element "Until" of XSD type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackAttributes is a complexType.
///
struct tt__TrackAttributes
{
/// <PRE><BLOCKQUOTE>
///   The basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// </BLOCKQUOTE></PRE>
/// Element "TrackInformation" of XSD type "http://www.onvif.org/ver10/schema":TrackInformation.
    struct tt__TrackInformation*         TrackInformation               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the track is a video track, exactly one of this structure shall be present and contain the video attributes.
/// </BLOCKQUOTE></PRE>
/// Element "VideoAttributes" of XSD type "http://www.onvif.org/ver10/schema":VideoAttributes.
    struct tt__VideoAttributes*          VideoAttributes                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the track is an audio track, exactly one of this structure shall be present and contain the audio attributes.
/// </BLOCKQUOTE></PRE>
/// Element "AudioAttributes" of XSD type "http://www.onvif.org/ver10/schema":AudioAttributes.
    struct tt__AudioAttributes*          AudioAttributes                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the track is an metadata track, exactly one of this structure shall be present and contain the metadata attributes.
/// </BLOCKQUOTE></PRE>
/// Element "MetadataAttributes" of XSD type "http://www.onvif.org/ver10/schema":MetadataAttributes.
    struct tt__MetadataAttributes*       MetadataAttributes             0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":TrackAttributesExtension.
    struct tt__TrackAttributesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackAttributesExtension is a complexType.
///
struct tt__TrackAttributesExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAttributes is a complexType.
///
struct tt__VideoAttributes
{
/// <PRE><BLOCKQUOTE>
///   Average bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The width of the video in pixels.
/// </BLOCKQUOTE></PRE>
/// Element "Width" of XSD type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The height of the video in pixels.
/// </BLOCKQUOTE></PRE>
/// Element "Height" of XSD type xs:int.
    int                                  Height                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Used video codec, either Jpeg, H.264 or Mpeg4
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Average framerate in frames per second.
/// </BLOCKQUOTE></PRE>
/// Element "Framerate" of XSD type xs:float.
    float                                Framerate                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioAttributes is a complexType.
///
struct tt__AudioAttributes
{
/// <PRE><BLOCKQUOTE>
///   The bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Audio codec used for encoding the audio (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The sample rate in kHz.
/// </BLOCKQUOTE></PRE>
/// Element "Samplerate" of XSD type xs:int.
    int                                  Samplerate                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataAttributes is a complexType.
///
struct tt__MetadataAttributes
{
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be PTZ data in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
/// Element "CanContainPTZ" of XSD type xs:boolean.
    enum xsd__boolean                    CanContainPTZ                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be analytics data in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
/// Element "CanContainAnalytics" of XSD type xs:boolean.
    enum xsd__boolean                    CanContainAnalytics            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be notifications in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
/// Element "CanContainNotifications" of XSD type xs:boolean.
    enum xsd__boolean                    CanContainNotifications        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   List of all PTZ spaces active for recording. Note that events are only recorded on position changes and the actual point of recording may not necessarily contain an event of the specified type.
/// </BLOCKQUOTE></PRE>
/// Attribute "PtzSpaces" of XSD type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList                   PtzSpaces                      0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingConfiguration is a complexType.
///
struct tt__RecordingConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Information about the source of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    struct tt__RecordingSourceInformation*  Source                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the source.
/// </BLOCKQUOTE></PRE>
/// Element "Content" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Sspecifies the maximum time that data in any track within the
///   recording shall be stored. The device shall delete any data older than the maximum retention
///   time. Such data shall not be accessible anymore. If the MaximumRetentionPeriod is set to 0,
///   the device shall not limit the retention time of stored data, except by resource constraints.
///   Whatever the value of MaximumRetentionTime, the device may automatically delete
///   recordings to free up storage space for new recordings.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumRetentionTime" of XSD type xs:duration.
    xsd__duration                        MaximumRetentionTime           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackConfiguration is a complexType.
///
struct tt__TrackConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Type of the track. It shall be equal to the strings Video,
///   Audio or Metadata. The track shall only be able to hold data of that type.
/// </BLOCKQUOTE></PRE>
/// Element "TrackType" of XSD type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the track.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is a complexType.
///
struct tt__GetRecordingsResponseItem
{
/// <PRE><BLOCKQUOTE>
///   Token of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    struct tt__RecordingConfiguration*   Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of tracks.
/// </BLOCKQUOTE></PRE>
/// Element "Tracks" of XSD type "http://www.onvif.org/ver10/schema":GetTracksResponseList.
    struct tt__GetTracksResponseList*    Tracks                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GetTracksResponseList is a complexType.
///
struct tt__GetTracksResponseList
{
/// <PRE><BLOCKQUOTE>
///   Configuration of a track.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__GetTracksResponseItem* is 0..unbounded.
   $int                                  __sizeTrack                    0;
/// Array struct tt__GetTracksResponseItem* of size 0..unbounded.
    struct tt__GetTracksResponseItem*    Track                          0;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GetTracksResponseItem is a complexType.
///
struct tt__GetTracksResponseItem
{
/// <PRE><BLOCKQUOTE>
///   Token of the track.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the track.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    struct tt__TrackConfiguration*       Configuration                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is a complexType.
///
struct tt__RecordingJobConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Identifies the recording to which this job shall store the received data.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The mode of the job. If it is idle, nothing shall happen. If it is active, the device shall try
///   to obtain data from the receivers. A client shall use GetRecordingJobState to determine if data transfer is really taking place.<br/>
///   The only valid values for Mode shall be Idle and Active.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobMode.
    tt__RecordingJobMode                 Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   This shall be a non-negative number. If there are multiple recording jobs that store data to
///   the same track, the device will only store the data for the recording job with the highest
///   priority. The priority is specified per recording job, but the device shall determine the priority
///   of each track individually. If there are two recording jobs with the same priority, the device
///   shall record the data corresponding to the recording job that was activated the latest.
/// </BLOCKQUOTE></PRE>
/// Element "Priority" of XSD type xs:int.
    int                                  Priority                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Source of the recording.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__RecordingJobSource* is 0..unbounded.
   $int                                  __sizeSource                   0;
/// Array struct tt__RecordingJobSource* of size 0..unbounded.
    struct tt__RecordingJobSource*       Source                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension.
    struct tt__RecordingJobConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is a complexType.
///
struct tt__RecordingJobConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobSource is a complexType.
///
struct tt__RecordingJobSource
{
/// <PRE><BLOCKQUOTE>
///   This field shall be a reference to the source of the data. The type of the source
///   is determined by the attribute Type in the SourceToken structure. If Type is
///   http://www.onvif.org/ver10/schema/Receiver, the token is a ReceiverReference. In this case
///   the device shall receive the data over the network. If Type is
///   http://www.onvif.org/ver10/schema/Profile, the token identifies a media profile, instructing the
///   device to obtain data from a profile that exists on the local device.
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":SourceReference.
    struct tt__SourceReference*          SourceToken                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If this field is TRUE, and if the SourceToken is omitted, the device
///   shall create a receiver object (through the receiver service) and assign the
///   ReceiverReference to the SourceToken field. When retrieving the RecordingJobConfiguration
///   from the device, the AutoCreateReceiver field shall never be present.
/// </BLOCKQUOTE></PRE>
/// Element "AutoCreateReceiver" of XSD type xs:boolean.
    enum xsd__boolean*                   AutoCreateReceiver             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of tracks associated with the recording.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__RecordingJobTrack* is 0..unbounded.
   $int                                  __sizeTracks                   0;
/// Array struct tt__RecordingJobTrack* of size 0..unbounded.
    struct tt__RecordingJobTrack*        Tracks                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension.
    struct tt__RecordingJobSourceExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is a complexType.
///
struct tt__RecordingJobSourceExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobTrack is a complexType.
///
struct tt__RecordingJobTrack
{
/// <PRE><BLOCKQUOTE>
///   If the received RTSP stream contains multiple tracks of the same type, the
///   SourceTag differentiates between those Tracks. This field can be ignored in case of recording a local source.
/// </BLOCKQUOTE></PRE>
/// Element "SourceTag" of XSD type xs:string.
    char*                                SourceTag                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The destination is the tracktoken of the track to which the device shall store the
///   received data.
/// </BLOCKQUOTE></PRE>
/// Element "Destination" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is a complexType.
///
struct tt__RecordingJobStateInformation
{
/// <PRE><BLOCKQUOTE>
///   Identification of the recording that the recording job records to.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Holds the aggregated state over the whole RecordingJobInformation structure.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Identifies the data source of the recording job.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__RecordingJobStateSource* is 0..unbounded.
   $int                                  __sizeSources                  0;
/// Array struct tt__RecordingJobStateSource* of size 0..unbounded.
    struct tt__RecordingJobStateSource*  Sources                        0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension.
    struct tt__RecordingJobStateInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is a complexType.
///
struct tt__RecordingJobStateInformationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateSource is a complexType.
///
struct tt__RecordingJobStateSource
{
/// <PRE><BLOCKQUOTE>
///   Identifies the data source of the recording job.
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":SourceReference.
    struct tt__SourceReference*          SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Holds the aggregated state over all substructures of RecordingJobStateSource.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of track items.
/// </BLOCKQUOTE></PRE>
/// Element "Tracks" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobStateTracks.
    struct tt__RecordingJobStateTracks*  Tracks                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is a complexType.
///
struct tt__RecordingJobStateTracks
{
/// Size of array of struct tt__RecordingJobStateTrack* is 0..unbounded.
   $int                                  __sizeTrack                    0;
/// Array struct tt__RecordingJobStateTrack* of size 0..unbounded.
    struct tt__RecordingJobStateTrack*   Track                          0;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is a complexType.
///
struct tt__RecordingJobStateTrack
{
/// <PRE><BLOCKQUOTE>
///   Identifies the track of the data source that provides the data.
/// </BLOCKQUOTE></PRE>
/// Element "SourceTag" of XSD type xs:string.
    char*                                SourceTag                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the destination track.
/// </BLOCKQUOTE></PRE>
/// Element "Destination" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optionally holds an implementation defined string value that describes the error.
///   The string should be in the English language.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    char*                                Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Provides the job state of the track. The valid
///   values of state shall be Idle, Active and Error. If state equals Error, the Error field may be filled in with an implementation defined value.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is a complexType.
///
struct tt__GetRecordingJobsResponseItem
{
/// Element "JobToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// Element "JobConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    struct tt__RecordingJobConfiguration*  JobConfiguration               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Configuration parameters for the replay service.
/// </BLOCKQUOTE></PRE>
struct tt__ReplayConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The RTSP session timeout.
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is a complexType.
///
struct tt__AnalyticsDeviceEngineConfiguration
{
/// Size of array of struct tt__EngineConfiguration* is 1..unbounded.
   $int                                  __sizeEngineConfiguration      1;
/// Array struct tt__EngineConfiguration* of size 1..unbounded.
    struct tt__EngineConfiguration*      EngineConfiguration            1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension.
    struct tt__AnalyticsDeviceEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is a complexType.
///
struct tt__AnalyticsDeviceEngineConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":EngineConfiguration is a complexType.
///
struct tt__EngineConfiguration
{
/// Element "VideoAnalyticsConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    struct tt__VideoAnalyticsConfiguration*  VideoAnalyticsConfiguration    1;	///< Required element.
/// Element "AnalyticsEngineInputInfo" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo.
    struct tt__AnalyticsEngineInputInfo*  AnalyticsEngineInputInfo       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is a complexType.
///
struct tt__AnalyticsEngineInputInfo
{
/// Element "InputInfo" of XSD type "http://www.onvif.org/ver10/schema":Config.
    struct tt__Config*                   InputInfo                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension.
    struct tt__AnalyticsEngineInputInfoExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is a complexType.
///
struct tt__AnalyticsEngineInputInfoExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":SourceIdentification is a complexType.
///
struct tt__SourceIdentification
{
/// Element "Name" of XSD type xs:string.
    char*                                Name                           1;	///< Required element.
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeToken                    1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  Token                          1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SourceIdentificationExtension.
    struct tt__SourceIdentificationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is a complexType.
///
struct tt__SourceIdentificationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataInput is a complexType.
///
struct tt__MetadataInput
{
/// Size of array of struct tt__Config* is 0..unbounded.
   $int                                  __sizeMetadataConfig           0;
/// Array struct tt__Config* of size 0..unbounded.
    struct tt__Config*                   MetadataConfig                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataInputExtension.
    struct tt__MetadataInputExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataInputExtension is a complexType.
///
struct tt__MetadataInputExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is a complexType.
///
struct tt__AnalyticsStateInformation
{
/// <PRE><BLOCKQUOTE>
///   Token of the control object whose status is requested.
/// </BLOCKQUOTE></PRE>
/// Element "AnalyticsEngineControlToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AnalyticsEngineControlToken    1;	///< Required element.
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsState.
    struct tt__AnalyticsState*           State                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsState is a complexType.
///
struct tt__AnalyticsState
{
/// Element "Error" of XSD type xs:string.
    char*                                Error                          0;	///< Optional element.
/// Element "State" of XSD type xs:string.
    char*                                State                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ActionEngineEventPayload is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Action Engine Event Payload data structure contains the information about the ONVIF command invocations. Since this event could be generated by other or proprietary actions, the command invocation specific fields are defined as optional and additional extension mechanism is provided for future or additional action definitions.
/// </BLOCKQUOTE></PRE>
struct tt__ActionEngineEventPayload
{
/// <PRE><BLOCKQUOTE>
///   Request Message
/// </BLOCKQUOTE></PRE>
/// Element "RequestInfo" of XSD type SOAP-ENV:Envelope.
    struct SOAP_ENV__Envelope*           RequestInfo                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Response Message
/// </BLOCKQUOTE></PRE>
/// Element "ResponseInfo" of XSD type SOAP-ENV:Envelope.
    struct SOAP_ENV__Envelope*           ResponseInfo                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Fault Message
/// </BLOCKQUOTE></PRE>
/// Element "Fault" of XSD type SOAP-ENV:Fault.
    struct SOAP_ENV__Fault*              Fault                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension.
    struct tt__ActionEngineEventPayloadExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension is a complexType.
///
struct tt__ActionEngineEventPayloadExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassCandidate is a complexType.
///
struct tt__AudioClassCandidate
{
/// <PRE><BLOCKQUOTE>
///   Indicates audio class label
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":AudioClassType.
    tt__AudioClassType                   Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A likelihood/probability that the corresponding audio event belongs to this class. The sum of the likelihoods shall NOT exceed 1
/// </BLOCKQUOTE></PRE>
/// Element "Likelihood" of XSD type xs:float.
    float                                Likelihood                     1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassDescriptor is a complexType.
///
struct tt__AudioClassDescriptor
{
/// <PRE><BLOCKQUOTE>
///   Array of audio class label and class probability
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__AudioClassCandidate* is 0..unbounded.
   $int                                  __sizeClassCandidate           0;
/// Array struct tt__AudioClassCandidate* of size 0..unbounded.
    struct tt__AudioClassCandidate*      ClassCandidate                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension.
    struct tt__AudioClassDescriptorExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension is a complexType.
///
struct tt__AudioClassDescriptorExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDPosConfiguration is a complexType.
///
struct tt__OSDPosConfiguration
{
/// <PRE><BLOCKQUOTE>
///   For OSD position type, following are the pre-defined: <ul><li>UpperLeft</li>
///   <li>UpperRight</li>
///   <li>LowerLeft</li>
///   <li>LowerRight</li>
///   <li>Custom</li></ul>
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type xs:string.
    char*                                Type                           1;	///< Required element.
/// Element "Pos" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    struct tt__Vector*                   Pos                            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension.
    struct tt__OSDPosConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension is a complexType.
///
struct tt__OSDPosConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColor is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The value range of "Transparent" could be defined by vendors only should follow this rule: the minimum value means non-transparent and the maximum value maens fully transparent.
/// </BLOCKQUOTE></PRE>
struct tt__OSDColor
{
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":Color.
    struct tt__Color*                    Color                          1;	///< Required element.
/// Attribute "Transparent" of XSD type xs:int.
   @int*                                 Transparent                    0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextConfiguration is a complexType.
///
struct tt__OSDTextConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The following OSD Text Type are defined:<ul>
///   <li>Plain - The Plain type means the OSD is shown as a text string which defined in the "PlainText" item.</li>
///   <li>Date - The Date type means the OSD is shown as a date, format of which should be present in the "DateFormat" item.</li>
///   <li>Time - The Time type means the OSD is shown as a time, format of which should be present in the "TimeFormat" item.</li>
///   <li>DateAndTime - The DateAndTime type means the OSD is shown as date and time, format of which should be present in the "DateFormat" and the "TimeFormat" item.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type xs:string.
    char*                                Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported OSD date formats. This element shall be present when the value of Type field has Date or DateAndTime. The following DateFormat are defined:<ul>
///   <li>M/d/yyyy - e.g. 3/6/2013</li>
///   <li>MM/dd/yyyy - e.g. 03/06/2013</li>
///   <li>dd/MM/yyyy - e.g. 06/03/2013</li>
///   <li>yyyy/MM/dd - e.g. 2013/03/06</li>
///   <li>yyyy-MM-dd - e.g. 2013-06-03</li>
///   <li>dddd, MMMM dd, yyyy - e.g. Wednesday, March 06, 2013</li>
///   <li>MMMM dd, yyyy - e.g. March 06, 2013</li>
///   <li>dd MMMM, yyyy - e.g. 06 March, 2013</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "DateFormat" of XSD type xs:string.
    char*                                DateFormat                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported OSD time formats. This element shall be present when the value of Type field has Time or DateAndTime. The following TimeFormat are defined:<ul>
///   <li>h:mm:ss tt - e.g. 2:14:21 PM</li>
///   <li>hh:mm:ss tt - e.g. 02:14:21 PM</li>
///   <li>H:mm:ss - e.g. 14:14:21</li>
///   <li>HH:mm:ss - e.g. 14:14:21</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "TimeFormat" of XSD type xs:string.
    char*                                TimeFormat                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Font size of the text in pt.
/// </BLOCKQUOTE></PRE>
/// Element "FontSize" of XSD type xs:int.
    int*                                 FontSize                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Font color of the text.
/// </BLOCKQUOTE></PRE>
/// Element "FontColor" of XSD type "http://www.onvif.org/ver10/schema":OSDColor.
    struct tt__OSDColor*                 FontColor                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Background color of the text.
/// </BLOCKQUOTE></PRE>
/// Element "BackgroundColor" of XSD type "http://www.onvif.org/ver10/schema":OSDColor.
    struct tt__OSDColor*                 BackgroundColor                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The content of text to be displayed.
/// </BLOCKQUOTE></PRE>
/// Element "PlainText" of XSD type xs:string.
    char*                                PlainText                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension.
    struct tt__OSDTextConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension is a complexType.
///
struct tt__OSDTextConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgConfiguration is a complexType.
///
struct tt__OSDImgConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The URI of the image which to be displayed.
/// </BLOCKQUOTE></PRE>
/// Element "ImgPath" of XSD type xs:anyURI.
    xsd__anyURI                          ImgPath                        1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension.
    struct tt__OSDImgConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension is a complexType.
///
struct tt__OSDImgConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorspaceRange is a complexType.
///
struct tt__ColorspaceRange
{
/// Element "X" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               X                              1;	///< Required element.
/// Element "Y" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Y                              1;	///< Required element.
/// Element "Z" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               Z                              1;	///< Required element.
/// Element "Colorspace" of XSD type xs:anyURI.
    xsd__anyURI                          Colorspace                     1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describe the option of the color supported. Either list each color or define the range of color value. The following values are acceptable for Colourspace attribute.<ul><li>http://www.onvif.org/ver10/colorspace/YCbCr - YCbCr colourspace</li>
///   <li>http://www.onvif.org/ver10/colorspace/CIELUV - CIE LUV</li>
///   <li>http://www.onvif.org/ver10/colorspace/CIELAB - CIE 1976 (L*a*b*)</li>
///   <li>http://www.onvif.org/ver10/colorspace/HSV - HSV colourspace</li></ul>
/// </BLOCKQUOTE></PRE>
struct tt__ColorOptions
{
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with one ore more elements with maxOccurs>1 (ColorList) prevents the use of a union. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// <PRE><BLOCKQUOTE>
///   List the supported color.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Color* is 1..unbounded.
   $int                                  __sizeColorList                0;
/// Array struct tt__Color* of size 1..unbounded.
    struct tt__Color*                    ColorList                     ;
/// <PRE><BLOCKQUOTE>
///   Define the rang of color supported.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__ColorspaceRange* is 1..unbounded.
   $int                                  __sizeColorspaceRange          0;
/// Array struct tt__ColorspaceRange* of size 1..unbounded.
    struct tt__ColorspaceRange*          ColorspaceRange               ;
;
//  END OF CHOICE
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColorOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describe the option of the color and its transparency.
/// </BLOCKQUOTE></PRE>
struct tt__OSDColorOptions
{
/// <PRE><BLOCKQUOTE>
///   Optional list of supported colors.
/// </BLOCKQUOTE></PRE>
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":ColorOptions.
    struct tt__ColorOptions*             Color                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Range of the transparent level. Larger means more tranparent.
/// </BLOCKQUOTE></PRE>
/// Element "Transparent" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 Transparent                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension.
    struct tt__OSDColorOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension is a complexType.
///
struct tt__OSDColorOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextOptions is a complexType.
///
struct tt__OSDTextOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported OSD text type. When a device indicates the supported number relating to Text type in MaximumNumberOfOSDs, the type shall be presented.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeType                     1;
/// Array char** of size 1..unbounded.
    char**                               Type                           1;
/// <PRE><BLOCKQUOTE>
///   Range of the font size value.
/// </BLOCKQUOTE></PRE>
/// Element "FontSizeRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FontSizeRange                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported date format.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 0..unbounded.
   $int                                  __sizeDateFormat               0;
/// Array char** of size 0..unbounded.
    char**                               DateFormat                     0;
/// <PRE><BLOCKQUOTE>
///   List of supported time format.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 0..unbounded.
   $int                                  __sizeTimeFormat               0;
/// Array char** of size 0..unbounded.
    char**                               TimeFormat                     0;
/// <PRE><BLOCKQUOTE>
///   List of supported font color.
/// </BLOCKQUOTE></PRE>
/// Element "FontColor" of XSD type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    struct tt__OSDColorOptions*          FontColor                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported background color.
/// </BLOCKQUOTE></PRE>
/// Element "BackgroundColor" of XSD type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    struct tt__OSDColorOptions*          BackgroundColor                0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension.
    struct tt__OSDTextOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension is a complexType.
///
struct tt__OSDTextOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgOptions is a complexType.
///
struct tt__OSDImgOptions
{
/// <PRE><BLOCKQUOTE>
///   List of avaiable uris of image.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 1..unbounded.
   $int                                  __sizeImagePath                1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         ImagePath                      1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension.
    struct tt__OSDImgOptionsExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension is a complexType.
///
struct tt__OSDImgOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationExtension is a complexType.
///
struct tt__OSDConfigurationExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs is a complexType.
///
struct tt__MaximumNumberOfOSDs
{
/// Attribute "Total" of XSD type xs:int.
   @int                                  Total                          1;	///< Required attribute.
/// Attribute "Image" of XSD type xs:int.
   @int*                                 Image                          0;	///< Optional attribute.
/// Attribute "PlainText" of XSD type xs:int.
   @int*                                 PlainText                      0;	///< Optional attribute.
/// Attribute "Date" of XSD type xs:int.
   @int*                                 Date                           0;	///< Optional attribute.
/// Attribute "Time" of XSD type xs:int.
   @int*                                 Time                           0;	///< Optional attribute.
/// Attribute "DateAndTime" of XSD type xs:int.
   @int*                                 DateAndTime                    0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationOptions is a complexType.
///
struct tt__OSDConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   The maximum number of OSD configurations supported for the specificate video source configuration. If a device limits the number of instances by OSDType, it should indicate the supported number via the related attribute.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfOSDs" of XSD type "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs.
    struct tt__MaximumNumberOfOSDs*      MaximumNumberOfOSDs            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List supported type of OSD configuration. When a device indicates the supported number for each types in MaximumNumberOfOSDs, related type shall be presented. A device shall return Option element relating to listed type.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__OSDType* is 1..unbounded.
   $int                                  __sizeType                     1;
/// Array enum tt__OSDType* of size 1..unbounded.
    enum tt__OSDType*                    Type                           1;
/// <PRE><BLOCKQUOTE>
///   List available OSD position type. Following are the pre-defined:<ul><li>UpperLeft</li>
///   <li>UpperRight</li>
///   <li>LowerLeft</li>
///   <li>LowerRight</li>
///   <li>Custom</li></ul>
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizePositionOption           1;
/// Array char** of size 1..unbounded.
    char**                               PositionOption                 1;
/// <PRE><BLOCKQUOTE>
///   Option of the OSD text configuration. This element shall be returned if the device is signaling the support for Text.
/// </BLOCKQUOTE></PRE>
/// Element "TextOption" of XSD type "http://www.onvif.org/ver10/schema":OSDTextOptions.
    struct tt__OSDTextOptions*           TextOption                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Option of the OSD image configuration. This element shall be returned if the device is signaling the support for Image.
/// </BLOCKQUOTE></PRE>
/// Element "ImageOption" of XSD type "http://www.onvif.org/ver10/schema":OSDImgOptions.
    struct tt__OSDImgOptions*            ImageOption                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension.
    struct tt__OSDConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension is a complexType.
///
struct tt__OSDConfigurationOptionsExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":FileProgress is a complexType.
///
struct tt__FileProgress
{
/// <PRE><BLOCKQUOTE>
///   Exported file name
/// </BLOCKQUOTE></PRE>
/// Element "FileName" of XSD type xs:string.
    char*                                FileName                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Normalized percentage completion for uploading the exported file
/// </BLOCKQUOTE></PRE>
/// Element "Progress" of XSD type xs:float.
    float                                Progress                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ArrayOfFileProgress is a complexType.
///
struct tt__ArrayOfFileProgress
{
/// <PRE><BLOCKQUOTE>
///   Exported file name and export progress information
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__FileProgress* is 0..unbounded.
   $int                                  __sizeFileProgress             0;
/// Array struct tt__FileProgress* of size 0..unbounded.
    struct tt__FileProgress*             FileProgress                   0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension.
    struct tt__ArrayOfFileProgressExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension is a complexType.
///
struct tt__ArrayOfFileProgressExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":StorageReferencePath is a complexType.
///
struct tt__StorageReferencePath
{
/// <PRE><BLOCKQUOTE>
///   identifier of an existing Storage Configuration.
/// </BLOCKQUOTE></PRE>
/// Element "StorageToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   StorageToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   gives the relative directory path on the storage
/// </BLOCKQUOTE></PRE>
/// Element "RelativePath" of XSD type xs:string.
    char*                                RelativePath                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":StorageReferencePathExtension.
    struct tt__StorageReferencePathExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":StorageReferencePathExtension is a complexType.
///
struct tt__StorageReferencePathExtension
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Message
/// @brief "http://www.onvif.org/ver10/schema":Message is a complexType.
///
struct _tt__Message
{
/// <PRE><BLOCKQUOTE>
///   Token value pairs that triggered this message. Typically only one item is present.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Source                         0;	///< Optional element.
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Key                            0;	///< Optional element.
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Data                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MessageExtension.
    struct tt__MessageExtension*         Extension                      0;	///< Optional element.
/// Attribute "UtcTime" of XSD type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// Attribute "PropertyOperation" of XSD type "http://www.onvif.org/ver10/schema":PropertyOperation.
   @enum tt__PropertyOperation*          PropertyOperation              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
///
struct wsnt__QueryExpressionType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// @todo This mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
///
struct wsnt__TopicExpressionType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// @todo This mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
///
struct wsnt__FilterType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
///
struct wsnt__SubscriptionPolicyType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
///
struct wsnt__NotificationMessageHolderType
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":Topic.
    struct wsnt__TopicExpressionType*    Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
    struct _wsnt__NotificationMessageHolderType_Message
    {
/// @todo <any namespace="##any" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                    Message                        1;	///< Required element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
///
struct _wsnt__NotificationProducerRP
{
/// Size of the dynamic array of struct wsnt__TopicExpressionType* is 0..unbounded.
   $int                                  __sizeTopicExpression          0;
/// Array struct wsnt__TopicExpressionType* of size 0..unbounded.
    struct wsnt__TopicExpressionType*    TopicExpression                0;
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    enum xsd__boolean*                   FixedTopicSet                  0;	///< Optional element.
/// Size of the dynamic array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeTopicExpressionDialect   0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         TopicExpressionDialect         0;
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/t-1":TopicSet.
    struct wstop__TopicSetType*          wstop__TopicSet                0;	///< Optional element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
///
struct _wsnt__SubscriptionManagerRP
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":ConsumerReference.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":Filter.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy.
    struct wsnt__SubscriptionPolicyType*  SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CreationTime.
    time_t*                              CreationTime                   0;	///< Optional element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify
/// @brief "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
///
struct _wsnt__Notify
{
/// Size of the dynamic array of struct wsnt__NotificationMessageHolderType* is 1..unbounded.
   $int                                  __sizeNotificationMessage      1;
/// Array struct wsnt__NotificationMessageHolderType* of size 1..unbounded.
    struct wsnt__NotificationMessageHolderType*  NotificationMessage            1;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw
/// @brief "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
///
struct _wsnt__UseRaw
{
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
///
struct _wsnt__Subscribe
{
/// Element "ConsumerReference" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element "Filter" of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// Element "InitialTerminationTime" of XSD type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     InitialTerminationTime         0;	///< Nillable pointer.
    struct _wsnt__Subscribe_SubscriptionPolicy
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
///
struct _wsnt__SubscribeResponse
{
/// Element "SubscriptionReference" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t*                              TerminationTime                0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
///
struct _wsnt__GetCurrentMessage
{
/// Element "Topic" of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    struct wsnt__TopicExpressionType*    Topic                          1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
///
struct _wsnt__GetCurrentMessageResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
///
struct _wsnt__GetMessages
{
/// Element "MaximumNumber" of XSD type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              MaximumNumber                  0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
///
struct _wsnt__GetMessagesResponse
{
/// Size of the dynamic array of struct wsnt__NotificationMessageHolderType* is 0..unbounded.
   $int                                  __sizeNotificationMessage      0;
/// Array struct wsnt__NotificationMessageHolderType* of size 0..unbounded.
    struct wsnt__NotificationMessageHolderType*  NotificationMessage            0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
///
struct _wsnt__DestroyPullPoint
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
///
struct _wsnt__DestroyPullPointResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
///
struct _wsnt__CreatePullPoint
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
///
struct _wsnt__CreatePullPointResponse
{
/// Element "PullPoint" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew
/// @brief "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
///
struct _wsnt__Renew
{
/// Element "TerminationTime" of XSD type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     TerminationTime                1;	///< Nillable pointer.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
///
struct _wsnt__RenewResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
///
struct _wsnt__Unsubscribe
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
///
struct _wsnt__UnsubscribeResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
///
struct _wsnt__PauseSubscription
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
///
struct _wsnt__PauseSubscriptionResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
///
struct _wsnt__ResumeSubscription
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
///
struct _wsnt__ResumeSubscriptionResponse
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
///
struct wsrfbf__BaseFaultType
{
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    struct _wsrfbf__BaseFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsrfbf__BaseFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    struct _wsrfbf__BaseFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
///
struct wstop__Documentation
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo This mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
///
struct wstop__ExtensibleDocumented
{
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
///
struct wstop__QueryExpressionType
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "Dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// @todo This mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/receiver/wsdl":Capabilities is a complexType.
///
struct trv__Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates that the device can receive RTP multicast streams.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_Multicast" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTP_USCOREMulticast            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the device can receive RTP/TCP streams
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_TCP" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTP_USCORETCP                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the device can receive RTP/RTSP/TCP streams.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_RTSP_TCP" of XSD type xs:boolean.
   @enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum number of receivers supported by the device.
/// </BLOCKQUOTE></PRE>
/// Attribute "SupportedReceivers" of XSD type xs:int.
   @int                                  SupportedReceivers             1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum allowed length for RTSP URIs (Minimum and default value is 128 octet).
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumRTSPURILength" of XSD type xs:int.
   @int*                                 MaximumRTSPURILength           0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilities is a complexType.
///
struct _trv__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _trv__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the receiver service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/receiver/wsdl":Capabilities.
    struct trv__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceivers
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceivers is a complexType.
///
struct _trv__GetReceivers
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiversResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiversResponse is a complexType.
///
struct _trv__GetReceiversResponse
{
/// <PRE><BLOCKQUOTE>
///   A list of all receivers that currently exist on the device.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Receiver* is 0..unbounded.
   $int                                  __sizeReceivers                0;
/// Array struct tt__Receiver* of size 0..unbounded.
    struct tt__Receiver*                 Receivers                      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiver
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiver is a complexType.
///
struct _trv__GetReceiver
{
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be retrieved.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverResponse is a complexType.
///
struct _trv__GetReceiverResponse
{
/// <PRE><BLOCKQUOTE>
///   The details of the receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Receiver" of XSD type "http://www.onvif.org/ver10/schema":Receiver.
    struct tt__Receiver*                 Receiver                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiver
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiver is a complexType.
///
struct _trv__CreateReceiver
{
/// <PRE><BLOCKQUOTE>
///   The initial configuration for the new receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    struct tt__ReceiverConfiguration*    Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiverResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiverResponse is a complexType.
///
struct _trv__CreateReceiverResponse
{
/// <PRE><BLOCKQUOTE>
///   The details of the receiver that was created.
/// </BLOCKQUOTE></PRE>
/// Element "Receiver" of XSD type "http://www.onvif.org/ver10/schema":Receiver.
    struct tt__Receiver*                 Receiver                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiver
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiver is a complexType.
///
struct _trv__DeleteReceiver
{
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiverResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiverResponse is a complexType.
///
struct _trv__DeleteReceiverResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiver
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiver is a complexType.
///
struct _trv__ConfigureReceiver
{
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be configured.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The new configuration for the receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    struct tt__ReceiverConfiguration*    Configuration                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiverResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiverResponse is a complexType.
///
struct _trv__ConfigureReceiverResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverMode
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverMode is a complexType.
///
struct _trv__SetReceiverMode
{
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be changed.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The new receiver mode. Options available are:
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum tt__ReceiverMode                Mode                           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverModeResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverModeResponse is a complexType.
///
struct _trv__SetReceiverModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverState
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverState is a complexType.
///
struct _trv__GetReceiverState
{
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be queried.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverStateResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverStateResponse is a complexType.
///
struct _trv__GetReceiverStateResponse
{
/// <PRE><BLOCKQUOTE>
///   Description of the current receiver state.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverState" of XSD type "http://www.onvif.org/ver10/schema":ReceiverStateInformation.
    struct tt__ReceiverStateInformation*  ReceiverState                  1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":Service is a complexType.
///
struct tds__Service
{
/// <PRE><BLOCKQUOTE>
///   Namespace of the service being described. This parameter allows to match the service capabilities to the service. Note that only one set of capabilities is supported per namespace.
/// </BLOCKQUOTE></PRE>
/// Element "Namespace" of XSD type xs:anyURI.
    xsd__anyURI                          Namespace                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The transport addresses where the service can be reached. The scheme and IP part shall match the one used in the request (i.e. the GetServices request).
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
    struct _tds__Service_Capabilities
    {
/// @todo <any namespace="##any">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Capabilities                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The version of the service (not the ONVIF core spec version).
/// </BLOCKQUOTE></PRE>
/// Element "Version" of XSD type "http://www.onvif.org/ver10/schema":OnvifVersion.
    struct tt__OnvifVersion*             Version                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities is a complexType.
///
struct tds__DeviceServiceCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Network" of XSD type "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities.
    struct tds__NetworkCapabilities*     Network                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Security" of XSD type "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities.
    struct tds__SecurityCapabilities*    Security                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "System" of XSD type "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities.
    struct tds__SystemCapabilities*      System                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Capabilities that do not fit in any of the other categories.
/// </BLOCKQUOTE></PRE>
/// Element "Misc" of XSD type "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities.
    struct tds__MiscCapabilities*        Misc                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities is a complexType.
///
struct tds__NetworkCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates support for IP filtering.
/// </BLOCKQUOTE></PRE>
/// Attribute "IPFilter" of XSD type xs:boolean.
   @enum xsd__boolean*                   IPFilter                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for zeroconf.
/// </BLOCKQUOTE></PRE>
/// Attribute "ZeroConfiguration" of XSD type xs:boolean.
   @enum xsd__boolean*                   ZeroConfiguration              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IPv6.
/// </BLOCKQUOTE></PRE>
/// Attribute "IPVersion6" of XSD type xs:boolean.
   @enum xsd__boolean*                   IPVersion6                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for dynamic DNS configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "DynDNS" of XSD type xs:boolean.
   @enum xsd__boolean*                   DynDNS                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.11 configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "Dot11Configuration" of XSD type xs:boolean.
   @enum xsd__boolean*                   Dot11Configuration             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of Dot1X configurations supported by the device
/// </BLOCKQUOTE></PRE>
/// Attribute "Dot1XConfigurations" of XSD type xs:int.
   @int*                                 Dot1XConfigurations            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of hostname from DHCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HostnameFromDHCP" of XSD type xs:boolean.
   @enum xsd__boolean*                   HostnameFromDHCP               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of NTP servers supported by the devices SetNTP command.
/// </BLOCKQUOTE></PRE>
/// Attribute "NTP" of XSD type xs:int.
   @int*                                 NTP                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for Stateful IPv6 DHCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "DHCPv6" of XSD type xs:boolean.
   @enum xsd__boolean*                   DHCPv6                         0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities is a complexType.
///
struct tds__SecurityCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.0.
/// </BLOCKQUOTE></PRE>
/// Attribute "TLS1.0" of XSD type xs:boolean.
   @enum xsd__boolean*                   TLS1_x002e0                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.1.
/// </BLOCKQUOTE></PRE>
/// Attribute "TLS1.1" of XSD type xs:boolean.
   @enum xsd__boolean*                   TLS1_x002e1                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.2.
/// </BLOCKQUOTE></PRE>
/// Attribute "TLS1.2" of XSD type xs:boolean.
   @enum xsd__boolean*                   TLS1_x002e2                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for onboard key generation.
/// </BLOCKQUOTE></PRE>
/// Attribute "OnboardKeyGeneration" of XSD type xs:boolean.
   @enum xsd__boolean*                   OnboardKeyGeneration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for access policy configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "AccessPolicyConfig" of XSD type xs:boolean.
   @enum xsd__boolean*                   AccessPolicyConfig             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the ONVIF default access policy.
/// </BLOCKQUOTE></PRE>
/// Attribute "DefaultAccessPolicy" of XSD type xs:boolean.
   @enum xsd__boolean*                   DefaultAccessPolicy            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.1X configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "Dot1X" of XSD type xs:boolean.
   @enum xsd__boolean*                   Dot1X                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote user configuration. Used when accessing another device.
/// </BLOCKQUOTE></PRE>
/// Attribute "RemoteUserHandling" of XSD type xs:boolean.
   @enum xsd__boolean*                   RemoteUserHandling             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security X.509 token.
/// </BLOCKQUOTE></PRE>
/// Attribute "X.509Token" of XSD type xs:boolean.
   @enum xsd__boolean*                   X_x002e509Token                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security SAML token.
/// </BLOCKQUOTE></PRE>
/// Attribute "SAMLToken" of XSD type xs:boolean.
   @enum xsd__boolean*                   SAMLToken                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Kerberos token.
/// </BLOCKQUOTE></PRE>
/// Attribute "KerberosToken" of XSD type xs:boolean.
   @enum xsd__boolean*                   KerberosToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Username token.
/// </BLOCKQUOTE></PRE>
/// Attribute "UsernameToken" of XSD type xs:boolean.
   @enum xsd__boolean*                   UsernameToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS over HTTP digest authenticated communication layer.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpDigest" of XSD type xs:boolean.
   @enum xsd__boolean*                   HttpDigest                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security REL token.
/// </BLOCKQUOTE></PRE>
/// Attribute "RELToken" of XSD type xs:boolean.
   @enum xsd__boolean*                   RELToken                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
/// Attribute "SupportedEAPMethods" of XSD type "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes.
   @tds__EAPMethodTypes                  SupportedEAPMethods            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum number of users that the device supports.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxUsers" of XSD type xs:int.
   @int*                                 MaxUsers                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the username by CreateUsers.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxUserNameLength" of XSD type xs:int.
   @int*                                 MaxUserNameLength              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the password by CreateUsers and SetUser.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxPasswordLength" of XSD type xs:int.
   @int*                                 MaxPasswordLength              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities is a complexType.
///
struct tds__SystemCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS Discovery resolve requests.
/// </BLOCKQUOTE></PRE>
/// Attribute "DiscoveryResolve" of XSD type xs:boolean.
   @enum xsd__boolean*                   DiscoveryResolve               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Discovery Bye.
/// </BLOCKQUOTE></PRE>
/// Attribute "DiscoveryBye" of XSD type xs:boolean.
   @enum xsd__boolean*                   DiscoveryBye                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote discovery.
/// </BLOCKQUOTE></PRE>
/// Attribute "RemoteDiscovery" of XSD type xs:boolean.
   @enum xsd__boolean*                   RemoteDiscovery                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through MTOM.
/// </BLOCKQUOTE></PRE>
/// Attribute "SystemBackup" of XSD type xs:boolean.
   @enum xsd__boolean*                   SystemBackup                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through MTOM.
/// </BLOCKQUOTE></PRE>
/// Attribute "SystemLogging" of XSD type xs:boolean.
   @enum xsd__boolean*                   SystemLogging                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through MTOM.
/// </BLOCKQUOTE></PRE>
/// Attribute "FirmwareUpgrade" of XSD type xs:boolean.
   @enum xsd__boolean*                   FirmwareUpgrade                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through HTTP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpFirmwareUpgrade" of XSD type xs:boolean.
   @enum xsd__boolean*                   HttpFirmwareUpgrade            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through HTTP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpSystemBackup" of XSD type xs:boolean.
   @enum xsd__boolean*                   HttpSystemBackup               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through HTTP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpSystemLogging" of XSD type xs:boolean.
   @enum xsd__boolean*                   HttpSystemLogging              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieving support information through HTTP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpSupportInformation" of XSD type xs:boolean.
   @enum xsd__boolean*                   HttpSupportInformation         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for storage configuration interfaces.
/// </BLOCKQUOTE></PRE>
/// Attribute "StorageConfiguration" of XSD type xs:boolean.
   @enum xsd__boolean*                   StorageConfiguration           0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities is a complexType.
///
struct tds__MiscCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Lists of commands supported by SendAuxiliaryCommand.
/// </BLOCKQUOTE></PRE>
/// Attribute "AuxiliaryCommands" of XSD type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList                   AuxiliaryCommands              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":UserCredential is a complexType.
///
struct tds__UserCredential
{
/// <PRE><BLOCKQUOTE>
///   User name
/// </BLOCKQUOTE></PRE>
/// Element "UserName" of XSD type xs:string.
    char*                                UserName                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   optional password
/// </BLOCKQUOTE></PRE>
/// Element "Password" of XSD type xs:string.
    char*                                Password                       0;	///< Optional element.
    struct _tds__UserCredential_Extension
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData is a complexType.
///
struct tds__StorageConfigurationData
{
/// <PRE><BLOCKQUOTE>
///   local path
/// </BLOCKQUOTE></PRE>
/// Element "LocalPath" of XSD type xs:anyURI.
    xsd__anyURI                          LocalPath                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Storage server address
/// </BLOCKQUOTE></PRE>
/// Element "StorageUri" of XSD type xs:anyURI.
    xsd__anyURI                          StorageUri                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User credential for the storage server
/// </BLOCKQUOTE></PRE>
/// Element "User" of XSD type "http://www.onvif.org/ver10/device/wsdl":UserCredential.
    struct tds__UserCredential*          User                           0;	///< Optional element.
    struct _tds__StorageConfigurationData_Extension
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   StorageType lists the acceptable values for type attribute
/// </BLOCKQUOTE></PRE>
/// Attribute "type" of XSD type xs:string.
   @char*                                type                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServices
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServices is a complexType.
///
struct _tds__GetServices
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the service capabilities (untyped) should be included in the response.
/// </BLOCKQUOTE></PRE>
/// Element "IncludeCapability" of XSD type xs:boolean.
    enum xsd__boolean                    IncludeCapability              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse is a complexType.
///
struct _tds__GetServicesResponse
{
/// <PRE><BLOCKQUOTE>
///   Each Service element contains information about one service.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tds__Service* is 1..unbounded.
   $int                                  __sizeService                  1;
/// Array struct tds__Service* of size 1..unbounded.
    struct tds__Service*                 Service                        1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities is a complexType.
///
struct _tds__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
struct _tds__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the device service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
    struct tds__DeviceServiceCapabilities*  Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation is a complexType.
///
struct _tds__GetDeviceInformation
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse is a complexType.
///
struct _tds__GetDeviceInformationResponse
{
/// <PRE><BLOCKQUOTE>
///   The manufactor of the device.
/// </BLOCKQUOTE></PRE>
/// Element "Manufacturer" of XSD type xs:string.
    char*                                Manufacturer                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device model.
/// </BLOCKQUOTE></PRE>
/// Element "Model" of XSD type xs:string.
    char*                                Model                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The firmware version in the device.
/// </BLOCKQUOTE></PRE>
/// Element "FirmwareVersion" of XSD type xs:string.
    char*                                FirmwareVersion                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The serial number of the device.
/// </BLOCKQUOTE></PRE>
/// Element "SerialNumber" of XSD type xs:string.
    char*                                SerialNumber                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The hardware ID of the device.
/// </BLOCKQUOTE></PRE>
/// Element "HardwareId" of XSD type xs:string.
    char*                                HardwareId                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime is a complexType.
///
struct _tds__SetSystemDateAndTime
{
/// <PRE><BLOCKQUOTE>
///   Defines if the date and time is set via NTP or manually.
/// </BLOCKQUOTE></PRE>
/// Element "DateTimeType" of XSD type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Automatically adjust Daylight savings if defined in TimeZone.
/// </BLOCKQUOTE></PRE>
/// Element "DaylightSavings" of XSD type xs:boolean.
    enum xsd__boolean                    DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time zone in POSIX 1003.1 format
/// </BLOCKQUOTE></PRE>
/// Element "TimeZone" of XSD type "http://www.onvif.org/ver10/schema":TimeZone.
    struct tt__TimeZone*                 TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in UTC. If time is obtained via NTP, UTCDateTime has no meaning
/// </BLOCKQUOTE></PRE>
/// Element "UTCDateTime" of XSD type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 UTCDateTime                    0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse is a complexType.
///
struct _tds__SetSystemDateAndTimeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime is a complexType.
///
struct _tds__GetSystemDateAndTime
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse is a complexType.
///
struct _tds__GetSystemDateAndTimeResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains information whether system date and time are set manually or by NTP, daylight savings is on or off, time zone in POSIX 1003.1 format and system date and time in UTC and also local system date and time.
/// </BLOCKQUOTE></PRE>
/// Element "SystemDateAndTime" of XSD type "http://www.onvif.org/ver10/schema":SystemDateTime.
    struct tt__SystemDateTime*           SystemDateAndTime              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault is a complexType.
///
struct _tds__SetSystemFactoryDefault
{
/// <PRE><BLOCKQUOTE>
///   Specifies the factory default action type.
/// </BLOCKQUOTE></PRE>
/// Element "FactoryDefault" of XSD type "http://www.onvif.org/ver10/schema":FactoryDefaultType.
    enum tt__FactoryDefaultType          FactoryDefault                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse is a complexType.
///
struct _tds__SetSystemFactoryDefaultResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware is a complexType.
///
struct _tds__UpgradeSystemFirmware
{
/// Element "Firmware" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Firmware                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse is a complexType.
///
struct _tds__UpgradeSystemFirmwareResponse
{
/// Element "Message" of XSD type xs:string.
    char*                                Message                        0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemReboot
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemReboot is a complexType.
///
struct _tds__SystemReboot
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse is a complexType.
///
struct _tds__SystemRebootResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the reboot message sent by the device.
/// </BLOCKQUOTE></PRE>
/// Element "Message" of XSD type xs:string.
    char*                                Message                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystem
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystem is a complexType.
///
struct _tds__RestoreSystem
{
/// Size of array of struct tt__BackupFile* is 1..unbounded.
   $int                                  __sizeBackupFiles              1;
/// Array struct tt__BackupFile* of size 1..unbounded.
    struct tt__BackupFile*               BackupFiles                    1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse is a complexType.
///
struct _tds__RestoreSystemResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup is a complexType.
///
struct _tds__GetSystemBackup
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse is a complexType.
///
struct _tds__GetSystemBackupResponse
{
/// Size of array of struct tt__BackupFile* is 1..unbounded.
   $int                                  __sizeBackupFiles              1;
/// Array struct tt__BackupFile* of size 1..unbounded.
    struct tt__BackupFile*               BackupFiles                    1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation is a complexType.
///
struct _tds__GetSystemSupportInformation
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse is a complexType.
///
struct _tds__GetSystemSupportInformationResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the arbitary device diagnostics information.
/// </BLOCKQUOTE></PRE>
/// Element "SupportInformation" of XSD type "http://www.onvif.org/ver10/schema":SupportInformation.
    struct tt__SupportInformation*       SupportInformation             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLog
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLog is a complexType.
///
struct _tds__GetSystemLog
{
/// <PRE><BLOCKQUOTE>
///   Specifies the type of system log to get.
/// </BLOCKQUOTE></PRE>
/// Element "LogType" of XSD type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               LogType                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse is a complexType.
///
struct _tds__GetSystemLogResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the system log information.
/// </BLOCKQUOTE></PRE>
/// Element "SystemLog" of XSD type "http://www.onvif.org/ver10/schema":SystemLog.
    struct tt__SystemLog*                SystemLog                      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopes is a complexType.
///
struct _tds__GetScopes
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse is a complexType.
///
struct _tds__GetScopesResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of URI definining the device scopes. Scope parameters can be of two types: fixed and configurable. Fixed parameters can not be altered.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Scope* is 1..unbounded.
   $int                                  __sizeScopes                   1;
/// Array struct tt__Scope* of size 1..unbounded.
    struct tt__Scope*                    Scopes                         1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopes is a complexType.
///
struct _tds__SetScopes
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of scope parameters that will replace all existing configurable scope parameters.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 1..unbounded.
   $int                                  __sizeScopes                   1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         Scopes                         1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse is a complexType.
///
struct _tds__SetScopesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopes is a complexType.
///
struct _tds__AddScopes
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of new configurable scope parameters that will be added to the existing configurable scope.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 1..unbounded.
   $int                                  __sizeScopeItem                1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         ScopeItem                      1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse is a complexType.
///
struct _tds__AddScopesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopes is a complexType.
///
struct _tds__RemoveScopes
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that should be removed from the device scope.<br/>
///   Note that the response message always will match the request or an error will be returned. The use of the response is for that reason deprecated.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 1..unbounded.
   $int                                  __sizeScopeItem                1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         ScopeItem                      1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse is a complexType.
///
struct _tds__RemoveScopesResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that has been removed from the device scope
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__anyURI* is 0..unbounded.
   $int                                  __sizeScopeItem                0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         ScopeItem                      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode is a complexType.
///
struct _tds__GetDiscoveryMode
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse is a complexType.
///
struct _tds__GetDiscoveryModeResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryMode" of XSD type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode is a complexType.
///
struct _tds__SetDiscoveryMode
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryMode" of XSD type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse is a complexType.
///
struct _tds__SetDiscoveryModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode is a complexType.
///
struct _tds__GetRemoteDiscoveryMode
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse is a complexType.
///
struct _tds__GetRemoteDiscoveryModeResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
/// Element "RemoteDiscoveryMode" of XSD type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode is a complexType.
///
struct _tds__SetRemoteDiscoveryMode
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
/// Element "RemoteDiscoveryMode" of XSD type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse is a complexType.
///
struct _tds__SetRemoteDiscoveryModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses is a complexType.
///
struct _tds__GetDPAddresses
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse is a complexType.
///
struct _tds__GetDPAddressesResponse
{
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
   $int                                  __sizeDPAddress                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              DPAddress                      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses is a complexType.
///
struct _tds__SetDPAddresses
{
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
   $int                                  __sizeDPAddress                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              DPAddress                      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse is a complexType.
///
struct _tds__SetDPAddressesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference is a complexType.
///
struct _tds__GetEndpointReference
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse is a complexType.
///
struct _tds__GetEndpointReferenceResponse
{
/// Element "GUID" of XSD type xs:string.
    char*                                GUID                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser is a complexType.
///
struct _tds__GetRemoteUser
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse is a complexType.
///
struct _tds__GetRemoteUserResponse
{
/// Element "RemoteUser" of XSD type "http://www.onvif.org/ver10/schema":RemoteUser.
    struct tt__RemoteUser*               RemoteUser                     0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser is a complexType.
///
struct _tds__SetRemoteUser
{
/// Element "RemoteUser" of XSD type "http://www.onvif.org/ver10/schema":RemoteUser.
    struct tt__RemoteUser*               RemoteUser                     0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse is a complexType.
///
struct _tds__SetRemoteUserResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsers is a complexType.
///
struct _tds__GetUsers
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse is a complexType.
///
struct _tds__GetUsersResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of the onvif users and following information is included in each entry: username and user level.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__User* is 0..unbounded.
   $int                                  __sizeUser                     0;
/// Array struct tt__User* of size 0..unbounded.
    struct tt__User*                     User                           0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsers is a complexType.
///
struct _tds__CreateUsers
{
/// <PRE><BLOCKQUOTE>
///   Creates new device users and corresponding credentials. Each user entry includes: username, password and user level. Either all users are created successfully or a fault message MUST be returned without creating any user. If trying to create several users with exactly the same username the request is rejected and no users are created. If password is missing, then fault message Too weak password is returned.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__User* is 1..unbounded.
   $int                                  __sizeUser                     1;
/// Array struct tt__User* of size 1..unbounded.
    struct tt__User*                     User                           1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse is a complexType.
///
struct _tds__CreateUsersResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsers is a complexType.
///
struct _tds__DeleteUsers
{
/// <PRE><BLOCKQUOTE>
///   Deletes users on an device and there may exist users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message MUST be returned and no users be deleted. If a username exists multiple times in the request, then a fault message is returned.
/// </BLOCKQUOTE></PRE>
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeUsername                 1;
/// Array char** of size 1..unbounded.
    char**                               Username                       1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse is a complexType.
///
struct _tds__DeleteUsersResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUser is a complexType.
///
struct _tds__SetUser
{
/// <PRE><BLOCKQUOTE>
///   Updates the credentials for one or several users on an device. Either all change requests are processed successfully or a fault message MUST be returned. If the request contains the same username multiple times, a fault message is returned.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__User* is 1..unbounded.
   $int                                  __sizeUser                     1;
/// Array struct tt__User* of size 1..unbounded.
    struct tt__User*                     User                           1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUserResponse is a complexType.
///
struct _tds__SetUserResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl is a complexType.
///
struct _tds__GetWsdlUrl
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse is a complexType.
///
struct _tds__GetWsdlUrlResponse
{
/// Element "WsdlUrl" of XSD type xs:anyURI.
    xsd__anyURI                          WsdlUrl                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilities is a complexType.
///
struct _tds__GetCapabilities
{
/// <PRE><BLOCKQUOTE>
///   List of categories to retrieve capability information on.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__CapabilityCategory* is 0..unbounded.
   $int                                  __sizeCategory                 0;
/// Array enum tt__CapabilityCategory* of size 0..unbounded.
    enum tt__CapabilityCategory*         Category                       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse is a complexType.
///
struct _tds__GetCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   Capability information.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/schema":Capabilities.
    struct tt__Capabilities*             Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostname is a complexType.
///
struct _tds__GetHostname
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse is a complexType.
///
struct _tds__GetHostnameResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the hostname information.
/// </BLOCKQUOTE></PRE>
/// Element "HostnameInformation" of XSD type "http://www.onvif.org/ver10/schema":HostnameInformation.
    struct tt__HostnameInformation*      HostnameInformation            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostname is a complexType.
///
struct _tds__SetHostname
{
/// <PRE><BLOCKQUOTE>
///   The hostname to set.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type xs:token.
    xsd__token                           Name                           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse is a complexType.
///
struct _tds__SetHostnameResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP is a complexType.
///
struct _tds__SetHostnameFromDHCP
{
/// <PRE><BLOCKQUOTE>
///   True if the hostname shall be obtained via DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse is a complexType.
///
struct _tds__SetHostnameFromDHCPResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
/// </BLOCKQUOTE></PRE>
/// Element "RebootNeeded" of XSD type xs:boolean.
    enum xsd__boolean                    RebootNeeded                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNS is a complexType.
///
struct _tds__GetDNS
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse is a complexType.
///
struct _tds__GetDNSResponse
{
/// <PRE><BLOCKQUOTE>
///   DNS information.
/// </BLOCKQUOTE></PRE>
/// Element "DNSInformation" of XSD type "http://www.onvif.org/ver10/schema":DNSInformation.
    struct tt__DNSInformation*           DNSInformation                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNS is a complexType.
///
struct _tds__SetDNS
{
/// <PRE><BLOCKQUOTE>
///   Indicate if the DNS address is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS search domain.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__token* is 0..unbounded.
   $int                                  __sizeSearchDomain             0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          SearchDomain                   0;
/// <PRE><BLOCKQUOTE>
///   DNS address(es) set manually.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__IPAddress* is 0..unbounded.
   $int                                  __sizeDNSManual                0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSManual                      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse is a complexType.
///
struct _tds__SetDNSResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTP is a complexType.
///
struct _tds__GetNTP
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse is a complexType.
///
struct _tds__GetNTPResponse
{
/// <PRE><BLOCKQUOTE>
///   NTP information.
/// </BLOCKQUOTE></PRE>
/// Element "NTPInformation" of XSD type "http://www.onvif.org/ver10/schema":NTPInformation.
    struct tt__NTPInformation*           NTPInformation                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTP is a complexType.
///
struct _tds__SetNTP
{
/// <PRE><BLOCKQUOTE>
///   Indicate if NTP address information is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Manual NTP settings.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
   $int                                  __sizeNTPManual                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPManual                      0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse is a complexType.
///
struct _tds__SetNTPResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS is a complexType.
///
struct _tds__GetDynamicDNS
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse is a complexType.
///
struct _tds__GetDynamicDNSResponse
{
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS information.
/// </BLOCKQUOTE></PRE>
/// Element "DynamicDNSInformation" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSInformation.
    struct tt__DynamicDNSInformation*    DynamicDNSInformation          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS is a complexType.
///
struct _tds__SetDynamicDNS
{
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS record time to live.
/// </BLOCKQUOTE></PRE>
/// Element "TTL" of XSD type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse is a complexType.
///
struct _tds__SetDynamicDNSResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces is a complexType.
///
struct _tds__GetNetworkInterfaces
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse is a complexType.
///
struct _tds__GetNetworkInterfacesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of network interfaces.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkInterface* is 1..unbounded.
   $int                                  __sizeNetworkInterfaces        1;
/// Array struct tt__NetworkInterface* of size 1..unbounded.
    struct tt__NetworkInterface*         NetworkInterfaces              1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces is a complexType.
///
struct _tds__SetNetworkInterfaces
{
/// <PRE><BLOCKQUOTE>
///   Symbolic network interface name.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface name.
/// </BLOCKQUOTE></PRE>
/// Element "NetworkInterface" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration.
    struct tt__NetworkInterfaceSetConfiguration*  NetworkInterface               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse is a complexType.
///
struct _tds__SetNetworkInterfacesResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
///   If a device responds with RebootNeeded set to false, the device can be reached
///   via the new IP address without further action. A client should be aware that a device
///   may not be responsive for a short period of time until it signals availability at
///   the new address via the discovery Hello messages.
///   If a device responds with RebootNeeded set to true, it will be further available under
///   its previous IP address. The settings will only be activated when the device is
///   rebooted via the SystemReboot command.
/// </BLOCKQUOTE></PRE>
/// Element "RebootNeeded" of XSD type xs:boolean.
    enum xsd__boolean                    RebootNeeded                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols is a complexType.
///
struct _tds__GetNetworkProtocols
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse is a complexType.
///
struct _tds__GetNetworkProtocolsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains an array of defined protocols supported by the device. There are three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be retrieved for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkProtocol* is 0..unbounded.
   $int                                  __sizeNetworkProtocols         0;
/// Array struct tt__NetworkProtocol* of size 0..unbounded.
    struct tt__NetworkProtocol*          NetworkProtocols               0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols is a complexType.
///
struct _tds__SetNetworkProtocols
{
/// <PRE><BLOCKQUOTE>
///   Configures one or more defined network protocols supported by the device. There are currently three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be set for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__NetworkProtocol* is 1..unbounded.
   $int                                  __sizeNetworkProtocols         1;
/// Array struct tt__NetworkProtocol* of size 1..unbounded.
    struct tt__NetworkProtocol*          NetworkProtocols               1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse is a complexType.
///
struct _tds__SetNetworkProtocolsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway is a complexType.
///
struct _tds__GetNetworkDefaultGateway
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse is a complexType.
///
struct _tds__GetNetworkDefaultGatewayResponse
{
/// <PRE><BLOCKQUOTE>
///   Gets the default IPv4 and IPv6 gateway settings from the device.
/// </BLOCKQUOTE></PRE>
/// Element "NetworkGateway" of XSD type "http://www.onvif.org/ver10/schema":NetworkGateway.
    struct tt__NetworkGateway*           NetworkGateway                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway is a complexType.
///
struct _tds__SetNetworkDefaultGateway
{
/// <PRE><BLOCKQUOTE>
///   Sets IPv4 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__IPv4Address* is 0..unbounded.
   $int                                  __sizeIPv4Address              0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     IPv4Address                    0;
/// <PRE><BLOCKQUOTE>
///   Sets IPv6 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__IPv6Address* is 0..unbounded.
   $int                                  __sizeIPv6Address              0;
/// Array tt__IPv6Address* of size 0..unbounded.
    tt__IPv6Address*                     IPv6Address                    0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse is a complexType.
///
struct _tds__SetNetworkDefaultGatewayResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration is a complexType.
///
struct _tds__GetZeroConfiguration
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse is a complexType.
///
struct _tds__GetZeroConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the zero-configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ZeroConfiguration" of XSD type "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration.
    struct tt__NetworkZeroConfiguration*  ZeroConfiguration              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration is a complexType.
///
struct _tds__SetZeroConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical interface.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Specifies if the zero-configuration should be enabled or not.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse is a complexType.
///
struct _tds__SetZeroConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter is a complexType.
///
struct _tds__GetIPAddressFilter
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse is a complexType.
///
struct _tds__GetIPAddressFilterResponse
{
/// Element "IPAddressFilter" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter is a complexType.
///
struct _tds__SetIPAddressFilter
{
/// Element "IPAddressFilter" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse is a complexType.
///
struct _tds__SetIPAddressFilterResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter is a complexType.
///
struct _tds__AddIPAddressFilter
{
/// Element "IPAddressFilter" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse is a complexType.
///
struct _tds__AddIPAddressFilterResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter is a complexType.
///
struct _tds__RemoveIPAddressFilter
{
/// Element "IPAddressFilter" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse is a complexType.
///
struct _tds__RemoveIPAddressFilterResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy is a complexType.
///
struct _tds__GetAccessPolicy
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse is a complexType.
///
struct _tds__GetAccessPolicyResponse
{
/// Element "PolicyFile" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               PolicyFile                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy is a complexType.
///
struct _tds__SetAccessPolicy
{
/// Element "PolicyFile" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               PolicyFile                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse is a complexType.
///
struct _tds__SetAccessPolicyResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificate
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificate is a complexType.
///
struct _tds__CreateCertificate
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Identification of the entity associated with the public-key.
/// </BLOCKQUOTE></PRE>
/// Element "Subject" of XSD type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate validity start date.
/// </BLOCKQUOTE></PRE>
/// Element "ValidNotBefore" of XSD type xs:dateTime.
    time_t*                              ValidNotBefore                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate expiry start date.
/// </BLOCKQUOTE></PRE>
/// Element "ValidNotAfter" of XSD type xs:dateTime.
    time_t*                              ValidNotAfter                  0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse is a complexType.
///
struct _tds__CreateCertificateResponse
{
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
/// Element "NvtCertificate" of XSD type "http://www.onvif.org/ver10/schema":Certificate.
    struct tt__Certificate*              NvtCertificate                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificates is a complexType.
///
struct _tds__GetCertificates
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse is a complexType.
///
struct _tds__GetCertificatesResponse
{
/// <PRE><BLOCKQUOTE>
///   Id and base64 encoded DER representation of all available certificates.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Certificate* is 0..unbounded.
   $int                                  __sizeNvtCertificate           0;
/// Array struct tt__Certificate* of size 0..unbounded.
    struct tt__Certificate*              NvtCertificate                 0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus is a complexType.
///
struct _tds__GetCertificatesStatus
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse is a complexType.
///
struct _tds__GetCertificatesStatusResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__CertificateStatus* is 0..unbounded.
   $int                                  __sizeCertificateStatus        0;
/// Array struct tt__CertificateStatus* of size 0..unbounded.
    struct tt__CertificateStatus*        CertificateStatus              0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus is a complexType.
///
struct _tds__SetCertificatesStatus
{
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is to be used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__CertificateStatus* is 0..unbounded.
   $int                                  __sizeCertificateStatus        0;
/// Array struct tt__CertificateStatus* of size 0..unbounded.
    struct tt__CertificateStatus*        CertificateStatus              0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse is a complexType.
///
struct _tds__SetCertificatesStatusResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates is a complexType.
///
struct _tds__DeleteCertificates
{
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
/// Size of array of xsd__token* is 1..unbounded.
   $int                                  __sizeCertificateID            1;
/// Array xsd__token* of size 1..unbounded.
    xsd__token*                          CertificateID                  1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse is a complexType.
///
struct _tds__DeleteCertificatesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request is a complexType.
///
struct _tds__GetPkcs10Request
{
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative Dinstinguished Name(RDN) CommonName(CN).
/// </BLOCKQUOTE></PRE>
/// Element "Subject" of XSD type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional base64 encoded DER attributes.
/// </BLOCKQUOTE></PRE>
/// Element "Attributes" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Attributes                     0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse is a complexType.
///
struct _tds__GetPkcs10RequestResponse
{
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
/// Element "Pkcs10Request" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Pkcs10Request                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificates is a complexType.
///
struct _tds__LoadCertificates
{
/// <PRE><BLOCKQUOTE>
///   Optional id and base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__Certificate* is 1..unbounded.
   $int                                  __sizeNVTCertificate           1;
/// Array struct tt__Certificate* of size 1..unbounded.
    struct tt__Certificate*              NVTCertificate                 1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse is a complexType.
///
struct _tds__LoadCertificatesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode is a complexType.
///
struct _tds__GetClientCertificateMode
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse is a complexType.
///
struct _tds__GetClientCertificateModeResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode is a complexType.
///
struct _tds__SetClientCertificateMode
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse is a complexType.
///
struct _tds__SetClientCertificateModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificates is a complexType.
///
struct _tds__GetCACertificates
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse is a complexType.
///
struct _tds__GetCACertificatesResponse
{
/// Size of array of struct tt__Certificate* is 0..unbounded.
   $int                                  __sizeCACertificate            0;
/// Array struct tt__Certificate* of size 0..unbounded.
    struct tt__Certificate*              CACertificate                  0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey is a complexType.
///
struct _tds__LoadCertificateWithPrivateKey
{
/// Size of array of struct tt__CertificateWithPrivateKey* is 1..unbounded.
   $int                                  __sizeCertificateWithPrivateKey 1;
/// Array struct tt__CertificateWithPrivateKey* of size 1..unbounded.
    struct tt__CertificateWithPrivateKey*  CertificateWithPrivateKey      1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse is a complexType.
///
struct _tds__LoadCertificateWithPrivateKeyResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation is a complexType.
///
struct _tds__GetCertificateInformation
{
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse is a complexType.
///
struct _tds__GetCertificateInformationResponse
{
/// Element "CertificateInformation" of XSD type "http://www.onvif.org/ver10/schema":CertificateInformation.
    struct tt__CertificateInformation*   CertificateInformation         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates is a complexType.
///
struct _tds__LoadCACertificates
{
/// Size of array of struct tt__Certificate* is 1..unbounded.
   $int                                  __sizeCACertificate            1;
/// Array struct tt__Certificate* of size 1..unbounded.
    struct tt__Certificate*              CACertificate                  1;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse is a complexType.
///
struct _tds__LoadCACertificatesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration is a complexType.
///
struct _tds__CreateDot1XConfiguration
{
/// Element "Dot1XConfiguration" of XSD type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse is a complexType.
///
struct _tds__CreateDot1XConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration is a complexType.
///
struct _tds__SetDot1XConfiguration
{
/// Element "Dot1XConfiguration" of XSD type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse is a complexType.
///
struct _tds__SetDot1XConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration is a complexType.
///
struct _tds__GetDot1XConfiguration
{
/// Element "Dot1XConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse is a complexType.
///
struct _tds__GetDot1XConfigurationResponse
{
/// Element "Dot1XConfiguration" of XSD type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations is a complexType.
///
struct _tds__GetDot1XConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse is a complexType.
///
struct _tds__GetDot1XConfigurationsResponse
{
/// Size of array of struct tt__Dot1XConfiguration* is 0..unbounded.
   $int                                  __sizeDot1XConfiguration       0;
/// Array struct tt__Dot1XConfiguration* of size 0..unbounded.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration is a complexType.
///
struct _tds__DeleteDot1XConfiguration
{
/// Size of array of tt__ReferenceToken* is 0..unbounded.
   $int                                  __sizeDot1XConfigurationToken  0;
/// Array tt__ReferenceToken* of size 0..unbounded.
    tt__ReferenceToken*                  Dot1XConfigurationToken        0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse is a complexType.
///
struct _tds__DeleteDot1XConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs is a complexType.
///
struct _tds__GetRelayOutputs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse is a complexType.
///
struct _tds__GetRelayOutputsResponse
{
/// Size of array of struct tt__RelayOutput* is 0..unbounded.
   $int                                  __sizeRelayOutputs             0;
/// Array struct tt__RelayOutput* of size 0..unbounded.
    struct tt__RelayOutput*              RelayOutputs                   0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings is a complexType.
///
struct _tds__SetRelayOutputSettings
{
/// Element "RelayOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "Properties" of XSD type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    struct tt__RelayOutputSettings*      Properties                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse is a complexType.
///
struct _tds__SetRelayOutputSettingsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState is a complexType.
///
struct _tds__SetRelayOutputState
{
/// Element "RelayOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "LogicalState" of XSD type "http://www.onvif.org/ver10/schema":RelayLogicalState.
    enum tt__RelayLogicalState           LogicalState                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse is a complexType.
///
struct _tds__SetRelayOutputStateResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand is a complexType.
///
struct _tds__SendAuxiliaryCommand
{
/// Element "AuxiliaryCommand" of XSD type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommand               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
struct _tds__SendAuxiliaryCommandResponse
{
/// Element "AuxiliaryCommandResponse" of XSD type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommandResponse       0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities is a complexType.
///
struct _tds__GetDot11Capabilities
{
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse is a complexType.
///
struct _tds__GetDot11CapabilitiesResponse
{
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/schema":Dot11Capabilities.
    struct tt__Dot11Capabilities*        Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Status
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Status is a complexType.
///
struct _tds__GetDot11Status
{
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse is a complexType.
///
struct _tds__GetDot11StatusResponse
{
/// Element "Status" of XSD type "http://www.onvif.org/ver10/schema":Dot11Status.
    struct tt__Dot11Status*              Status                         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks is a complexType.
///
struct _tds__ScanAvailableDot11Networks
{
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse is a complexType.
///
struct _tds__ScanAvailableDot11NetworksResponse
{
/// Size of array of struct tt__Dot11AvailableNetworks* is 0..unbounded.
   $int                                  __sizeNetworks                 0;
/// Array struct tt__Dot11AvailableNetworks* of size 0..unbounded.
    struct tt__Dot11AvailableNetworks*   Networks                       0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUris
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUris is a complexType.
///
struct _tds__GetSystemUris
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse is a complexType.
///
struct _tds__GetSystemUrisResponse
{
/// Element "SystemLogUris" of XSD type "http://www.onvif.org/ver10/schema":SystemLogUriList.
    struct tt__SystemLogUriList*         SystemLogUris                  0;	///< Optional element.
/// Element "SupportInfoUri" of XSD type xs:anyURI.
    xsd__anyURI                          SupportInfoUri                 0;	///< Optional element.
/// Element "SystemBackupUri" of XSD type xs:anyURI.
    xsd__anyURI                          SystemBackupUri                0;	///< Optional element.
    struct _tds__GetSystemUrisResponse_Extension
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Extension                      0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade is a complexType.
///
struct _tds__StartFirmwareUpgrade
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse is a complexType.
///
struct _tds__StartFirmwareUpgradeResponse
{
/// Element "UploadUri" of XSD type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "UploadDelay" of XSD type xs:duration.
    xsd__duration                        UploadDelay                    1;	///< Required element.
/// Element "ExpectedDownTime" of XSD type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore is a complexType.
///
struct _tds__StartSystemRestore
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse is a complexType.
///
struct _tds__StartSystemRestoreResponse
{
/// Element "UploadUri" of XSD type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "ExpectedDownTime" of XSD type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations is a complexType.
///
struct _tds__GetStorageConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse is a complexType.
///
struct _tds__GetStorageConfigurationsResponse
{
/// Size of array of struct tds__StorageConfiguration* is 0..unbounded.
   $int                                  __sizeStorageConfigurations    0;
/// Array struct tds__StorageConfiguration* of size 0..unbounded.
    struct tds__StorageConfiguration*    StorageConfigurations          0;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration is a complexType.
///
struct _tds__CreateStorageConfiguration
{
/// Element "StorageConfiguration" of XSD type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    struct tds__StorageConfigurationData*  StorageConfiguration           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse is a complexType.
///
struct _tds__CreateStorageConfigurationResponse
{
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration is a complexType.
///
struct _tds__GetStorageConfiguration
{
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse is a complexType.
///
struct _tds__GetStorageConfigurationResponse
{
/// Element "StorageConfiguration" of XSD type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    struct tds__StorageConfiguration*    StorageConfiguration           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration is a complexType.
///
struct _tds__SetStorageConfiguration
{
/// Element "StorageConfiguration" of XSD type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    struct tds__StorageConfiguration*    StorageConfiguration           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse is a complexType.
///
struct _tds__SetStorageConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration is a complexType.
///
struct _tds__DeleteStorageConfiguration
{
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse is a complexType.
///
struct _tds__DeleteStorageConfigurationResponse
{
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":VideoSource is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video input.
/// </BLOCKQUOTE></PRE>
struct tt__VideoSource
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   Frame rate in frames per second.
/// </BLOCKQUOTE></PRE>
/// Element "Framerate" of XSD type xs:float.
    float                                Framerate                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Horizontal and vertical resolution
/// </BLOCKQUOTE></PRE>
/// Element "Resolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor.
/// </BLOCKQUOTE></PRE>
/// Element "Imaging" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettings.
    struct tt__ImagingSettings*          Imaging                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceExtension.
    struct tt__VideoSourceExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSource is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio input.
/// </BLOCKQUOTE></PRE>
struct tt__AudioSource
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   number of available audio channels. (1: mono, 2: stereo)
/// </BLOCKQUOTE></PRE>
/// Element "Channels" of XSD type xs:int.
    int                                  Channels                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__VideoSourceConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Reference to the physical input.
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.
/// </BLOCKQUOTE></PRE>
/// Element "Bounds" of XSD type "http://www.onvif.org/ver10/schema":IntRectangle.
    struct tt__IntRectangle*             Bounds                         1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension.
    struct tt__VideoSourceConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__VideoEncoderConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Used video codec, either Jpeg, H.264 or Mpeg4
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configured video resolution
/// </BLOCKQUOTE></PRE>
/// Element "Resolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// </BLOCKQUOTE></PRE>
/// Element "Quality" of XSD type xs:float.
    float                                Quality                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rate control related parameters.
/// </BLOCKQUOTE></PRE>
/// Element "RateControl" of XSD type "http://www.onvif.org/ver10/schema":VideoRateControl.
    struct tt__VideoRateControl*         RateControl                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Mpeg4 related parameters.
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    struct tt__Mpeg4Configuration*       MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure H.264 related parameters.
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type "http://www.onvif.org/ver10/schema":H264Configuration.
    struct tt__H264Configuration*        H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related video stream
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions2 is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":JpegOptions.
///
struct tt__JpegOptions2
{
/// INHERITED FROM tt__JpegOptions:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
//  END OF INHERITED FROM tt__JpegOptions
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "BitrateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options2 is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Options.
///
struct tt__Mpeg4Options2
{
/// INHERITED FROM tt__Mpeg4Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
   $int                                  __sizeMpeg4ProfilesSupported   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               Mpeg4ProfilesSupported         1;
//  END OF INHERITED FROM tt__Mpeg4Options
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "BitrateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options2 is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":H264Options.
///
struct tt__H264Options2
{
/// INHERITED FROM tt__H264Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
   $int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
/// Size of array of enum tt__H264Profile* is 1..unbounded.
   $int                                  __sizeH264ProfilesSupported    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                H264ProfilesSupported          1;
//  END OF INHERITED FROM tt__H264Options
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "BitrateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__AudioSourceConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the Audio Source the configuration applies to
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__AudioEncoderConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Audio codec used for encoding the audio input (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output sample rate in kHz.
/// </BLOCKQUOTE></PRE>
/// Element "SampleRate" of XSD type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__VideoAnalyticsConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// Element "AnalyticsEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    struct tt__AnalyticsEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// Element "RuleEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RuleEngineConfiguration.
    struct tt__RuleEngineConfiguration*  RuleEngineConfiguration        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__MetadataConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   optional element to configure which PTZ related data is to include in the metadata stream
/// </BLOCKQUOTE></PRE>
/// Element "PTZStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZFilter.
    struct tt__PTZFilter*                PTZStatus                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure the streaming of events. A client might be interested in receiving all, none or some of the events produced by the device:<ul>
///   <li>To get all events: Include the Events element but do not include a filter.</li>
///   <li>To get no events: Do not include the Events element.</li>
///   <li>To get only some events: Include the Events element and include a filter in the element.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Events" of XSD type "http://www.onvif.org/ver10/schema":EventSubscription.
    struct tt__EventSubscription*        Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines whether the streamed metadata will include metadata from the analytics engines (video, cell motion, audio etc.)
/// </BLOCKQUOTE></PRE>
/// Element "Analytics" of XSD type xs:boolean.
    enum xsd__boolean*                   Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "AnalyticsEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    struct tt__AnalyticsEngineConfiguration*  AnalyticsEngineConfiguration   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension.
    struct tt__MetadataConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure compression type of Metadata payload. Use values from enumeration MetadataCompressionType.
/// </BLOCKQUOTE></PRE>
/// Attribute "CompressionType" of XSD type xs:string.
   @char*                                CompressionType                0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video outputs.
/// </BLOCKQUOTE></PRE>
struct tt__VideoOutput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// Element "Layout" of XSD type "http://www.onvif.org/ver10/schema":Layout.
    struct tt__Layout*                   Layout                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Resolution of the display in Pixel.
/// </BLOCKQUOTE></PRE>
/// Element "Resolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          Resolution                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Refresh rate of the display in Hertz.
/// </BLOCKQUOTE></PRE>
/// Element "RefreshRate" of XSD type xs:float.
    float*                               RefreshRate                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Aspect ratio of the display as physical extent of width divided by height.
/// </BLOCKQUOTE></PRE>
/// Element "AspectRatio" of XSD type xs:float.
    float*                               AspectRatio                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoOutputExtension.
    struct tt__VideoOutputExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__VideoOutputConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output the configuration applies to
/// </BLOCKQUOTE></PRE>
/// Element "OutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio outputs.
/// </BLOCKQUOTE></PRE>
struct tt__AudioOutput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__AudioOutputConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the phsycial Audio output.
/// </BLOCKQUOTE></PRE>
/// Element "OutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An audio channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
/// Element "SendPrimacy" of XSD type xs:anyURI.
    xsd__anyURI                          SendPrimacy                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.
/// </BLOCKQUOTE></PRE>
/// Element "OutputLevel" of XSD type xs:int.
    int                                  OutputLevel                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// <PRE><BLOCKQUOTE>
///   The Audio Decoder Configuration does not contain any that parameter to configure the
///   decoding .A decoder shall decode every data it receives (according to its capabilities).
/// </BLOCKQUOTE></PRE>
struct tt__AudioDecoderConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
struct tt__NetworkInterface
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface information
/// </BLOCKQUOTE></PRE>
/// Element "Info" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    struct tt__NetworkInterfaceInfo*     Info                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Link" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    struct tt__NetworkInterfaceLink*     Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4" of XSD type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    struct tt__IPv4NetworkInterface*     IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv6" of XSD type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    struct tt__IPv6NetworkInterface*     IPv6                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    struct tt__NetworkInterfaceExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateUsage is a complexType with simpleContent.
///
struct tt__CertificateUsage
{
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Attribute "Critical" of XSD type xs:boolean.
   @enum xsd__boolean                    Critical                       1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
struct tt__RelayOutput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// Element "Properties" of XSD type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    struct tt__RelayOutputSettings*      Properties                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":DigitalInput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
struct tt__DigitalInput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNode is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
struct tt__PTZNode
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   A unique identifier that is used to reference PTZ Nodes.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.
/// </BLOCKQUOTE></PRE>
/// Element "SupportedPTZSpaces" of XSD type "http://www.onvif.org/ver10/schema":PTZSpaces.
    struct tt__PTZSpaces*                SupportedPTZSpaces             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   All preset operations MUST be available for this PTZ Node if one preset is supported.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfPresets" of XSD type xs:int.
    int                                  MaximumNumberOfPresets         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Element "HomeSupported" of XSD type xs:boolean.
    enum xsd__boolean                    HomeSupported                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__AuxiliaryData* is 0..unbounded.
   $int                                  __sizeAuxiliaryCommands        0;
/// Array tt__AuxiliaryData* of size 0..unbounded.
    tt__AuxiliaryData*                   AuxiliaryCommands              0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZNodeExtension.
    struct tt__PTZNodeExtension*         Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indication whether the HomePosition of a Node is fixed or it can be changed via the SetHomePosition command.
/// </BLOCKQUOTE></PRE>
/// Attribute "FixedHomePosition" of XSD type xs:boolean.
   @enum xsd__boolean*                   FixedHomePosition              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__PTZConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.
/// </BLOCKQUOTE></PRE>
/// Element "NodeToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultAbsolutePantTiltPositionSpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultAbsolutePantTiltPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultAbsoluteZoomPositionSpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultAbsoluteZoomPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultRelativePanTiltTranslationSpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultRelativePanTiltTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultRelativeZoomTranslationSpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultRelativeZoomTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultContinuousPanTiltVelocitySpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultContinuousPanTiltVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultContinuousZoomVelocitySpace" of XSD type xs:anyURI.
    xsd__anyURI                          DefaultContinuousZoomVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultPTZSpeed" of XSD type "http://www.onvif.org/ver10/schema":PTZSpeed.
    struct tt__PTZSpeed*                 DefaultPTZSpeed                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultPTZTimeout" of XSD type xs:duration.
    xsd__duration*                       DefaultPTZTimeout              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to INF or +INF.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltLimits" of XSD type "http://www.onvif.org/ver10/schema":PanTiltLimits.
    struct tt__PanTiltLimits*            PanTiltLimits                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomLimits" of XSD type "http://www.onvif.org/ver10/schema":ZoomLimits.
    struct tt__ZoomLimits*               ZoomLimits                     0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension.
    struct tt__PTZConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when moving.
/// </BLOCKQUOTE></PRE>
/// Attribute "MoveRamp" of XSD type xs:int.
   @int*                                 MoveRamp                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when recalling presets.
/// </BLOCKQUOTE></PRE>
/// Attribute "PresetRamp" of XSD type xs:int.
   @int*                                 PresetRamp                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when executing PresetTours.
/// </BLOCKQUOTE></PRE>
/// Attribute "PresetTourRamp" of XSD type xs:int.
   @int*                                 PresetTourRamp                 0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":Object is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
///
struct tt__Object
{
/// INHERITED FROM tt__ObjectId:
/// Attribute "ObjectId" of XSD type xs:integer.
   @xsd__integer                         ObjectId                       0;	///< Optional attribute.
//  END OF INHERITED FROM tt__ObjectId
/// Element "Appearance" of XSD type "http://www.onvif.org/ver10/schema":Appearance.
    struct tt__Appearance*               Appearance                     0;	///< Optional element.
/// Element "Behaviour" of XSD type "http://www.onvif.org/ver10/schema":Behaviour.
    struct tt__Behaviour*                Behaviour                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ObjectExtension.
    struct tt__ObjectExtension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":EventFilter is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
///
struct tt__EventFilter
{
/// INHERITED FROM wsnt__FilterType:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
//  END OF INHERITED FROM wsnt__FilterType
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngine is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__AnalyticsEngine
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// Element "AnalyticsEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration.
    struct tt__AnalyticsDeviceEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__AnalyticsEngineInput
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// Element "SourceIdentification" of XSD type "http://www.onvif.org/ver10/schema":SourceIdentification.
    struct tt__SourceIdentification*     SourceIdentification           1;	///< Required element.
/// Element "VideoInput" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  VideoInput                     1;	///< Required element.
/// Element "MetadataInput" of XSD type "http://www.onvif.org/ver10/schema":MetadataInput.
    struct tt__MetadataInput*            MetadataInput                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
struct tt__AnalyticsEngineControl
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Token of the analytics engine (AnalyticsEngine) being controlled.
/// </BLOCKQUOTE></PRE>
/// Element "EngineToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the analytics engine configuration (VideoAnalyticsConfiguration) in effect.
/// </BLOCKQUOTE></PRE>
/// Element "EngineConfigToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineConfigToken              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Tokens of the input (AnalyticsEngineInput) configuration applied.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeInputToken               1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  InputToken                     1;
/// <PRE><BLOCKQUOTE>
///   Tokens of the receiver providing media input data. The order of ReceiverToken shall exactly match the order of InputToken.
/// </BLOCKQUOTE></PRE>
/// Size of array of tt__ReferenceToken* is 1..unbounded.
   $int                                  __sizeReceiverToken            1;
/// Array tt__ReferenceToken* of size 1..unbounded.
    tt__ReferenceToken*                  ReceiverToken                  1;
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      0;	///< Optional element.
/// Element "Subscription" of XSD type "http://www.onvif.org/ver10/schema":Config.
    struct tt__Config*                   Subscription                   1;	///< Required element.
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ModeOfOperation.
    enum tt__ModeOfOperation             Mode                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
struct tt__OSDConfiguration
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   Reference to the video source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":OSDReference.
    struct tt__OSDReference*             VideoSourceConfigurationToken  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Type of OSD.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":OSDType.
    enum tt__OSDType                     Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Position configuration of OSD.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":OSDPosConfiguration.
    struct tt__OSDPosConfiguration*      Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Text configuration of OSD. It shall be present when the value of Type field is Text.
/// </BLOCKQUOTE></PRE>
/// Element "TextString" of XSD type "http://www.onvif.org/ver10/schema":OSDTextConfiguration.
    struct tt__OSDTextConfiguration*     TextString                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image configuration of OSD. It shall be present when the value of Type field is Image
/// </BLOCKQUOTE></PRE>
/// Element "Image" of XSD type "http://www.onvif.org/ver10/schema":OSDImgConfiguration.
    struct tt__OSDImgConfiguration*      Image                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":OSDConfigurationExtension.
    struct tt__OSDConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__SubscribeCreationFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__SubscribeCreationFailedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__SubscribeCreationFailedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__InvalidFilterFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__InvalidFilterFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__InvalidFilterFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__InvalidFilterFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 1..unbounded.
   $int                                  __sizeUnknownFilter            1;
/// Array _QName* of size 1..unbounded.
    _QName*                              UnknownFilter                  1;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__TopicExpressionDialectUnknownFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__TopicExpressionDialectUnknownFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__InvalidTopicExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__InvalidTopicExpressionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__InvalidTopicExpressionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__TopicNotSupportedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__TopicNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__TopicNotSupportedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__TopicNotSupportedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__MultipleTopicsSpecifiedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__MultipleTopicsSpecifiedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__InvalidProducerPropertiesExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__InvalidMessageContentExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__InvalidMessageContentExpressionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnrecognizedPolicyRequestFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnrecognizedPolicyRequestFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 0..unbounded.
   $int                                  __sizeUnrecognizedPolicy       0;
/// Array _QName* of size 0..unbounded.
    _QName*                              UnrecognizedPolicy             0;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnsupportedPolicyRequestFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnsupportedPolicyRequestFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 0..unbounded.
   $int                                  __sizeUnsupportedPolicy        0;
/// Array _QName* of size 0..unbounded.
    _QName*                              UnsupportedPolicy              0;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__NotifyMessageNotSupportedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__NotifyMessageNotSupportedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnacceptableInitialTerminationTimeFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Element "MinimumTime" of XSD type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of XSD type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__NoCurrentMessageOnTopicFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__NoCurrentMessageOnTopicFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnableToGetMessagesFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnableToGetMessagesFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnableToGetMessagesFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnableToGetMessagesFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnableToDestroyPullPointFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnableToDestroyPullPointFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnableToCreatePullPointFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnableToCreatePullPointFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnableToCreatePullPointFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnacceptableTerminationTimeFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnacceptableTerminationTimeFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Element "MinimumTime" of XSD type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of XSD type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__UnableToDestroySubscriptionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__UnableToDestroySubscriptionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__PauseFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__PauseFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__PauseFailedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__PauseFailedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
struct wsnt__ResumeFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
    struct _wsnt__ResumeFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          :dialect                       1;	///< Required attribute.
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
   $int                                  __sizeDescription              0;
    struct _wsnt__ResumeFailedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;
    struct _wsnt__ResumeFailedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
struct wstop__TopicNamespaceType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// Size of Topic array is 0..unbounded.
   $int                                  __sizeTopic                    0;
    struct _wstop__TopicNamespaceType_Topic
    {
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// INHERITED FROM wstop__TopicType:
/// Element "MessagePattern" of XSD type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    struct wstop__QueryExpressionType*   MessagePattern                 0;	///< Optional element.
/// Size of array of struct wstop__TopicType* is 0..unbounded.
   $int                                  __sizeTopic                    0;
/// Array struct wstop__TopicType* of size 0..unbounded.
    struct wstop__TopicType*             Topic                          0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "name" of XSD type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    _QName                                                             

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of XSD type xs:boolean.
   @enum xsd__boolean                    final_                         0;	///< Default attribute value="false".
//  END OF INHERITED FROM wstop__TopicType
/// Attribute "parent" of XSD type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
   @wstop__ConcreteTopicExpression       parent                         0;	///< Optional attribute.
    }                                   *Topic                          0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "name" of XSD type xs:NCName.
   @xsd__NCName                          name                           0;	///< Optional attribute.
/// Attribute "targetNamespace" of XSD type xs:anyURI.
   @xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute "final" of XSD type xs:boolean.
   @enum xsd__boolean                    final_                         0;	///< Default attribute value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
struct wstop__TopicType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// Element "MessagePattern" of XSD type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    struct wstop__QueryExpressionType*   MessagePattern                 0;	///< Optional element.
/// Size of array of struct wstop__TopicType* is 0..unbounded.
   $int                                  __sizeTopic                    0;
/// Array struct wstop__TopicType* of size 0..unbounded.
    struct wstop__TopicType*             Topic                          0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute "name" of XSD type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    _QName                                                             

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of XSD type xs:boolean.
   @enum xsd__boolean                    final_                         0;	///< Default attribute value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
struct wstop__TopicSetType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded.
   $int                                  __size                        0;
    _XML                                 __any                         0;	///< Catch any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
struct tds__StorageConfiguration
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   :token                         1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// Element "Data" of XSD type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    struct tds__StorageConfigurationData*  Data                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDReference is a complexType with simpleContent.
///
struct tt__OSDReference
{
/// __item wraps ""http://www.onvif.org/ver10/schema":ReferenceToken" simpleContent.
    tt__ReferenceToken                   __item                        ;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of XSD type "http://www.onvif.org/ver10/schema":PTZConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polygon of XSD type "http://www.onvif.org/ver10/schema":Polygon.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polyline of XSD type "http://www.onvif.org/ver10/schema":Polyline.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataStream of XSD type "http://www.onvif.org/ver10/schema":MetadataStream.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of XSD type xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of XSD type xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of XSD type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of XSD type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of XSD type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of XSD type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of XSD type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of XSD type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of XSD type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of XSD type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of XSD type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of XSD type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/receiver/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Hello of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":HelloResponse of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Probe of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":ProbeResponse of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Bye of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":ByeResponse of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap tdn  service name:	RemoteDiscoveryBinding 
//gsoap tdn  service type:	RemoteDiscoveryPort 
//gsoap tdn  service namespace:	http://www.onvif.org/ver10/network/wsdl 
//gsoap tdn  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tds  service name:	DeviceBinding 
//gsoap tds  service type:	Device 
//gsoap tds  service namespace:	http://www.onvif.org/ver10/device/wsdl 
//gsoap tds  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trv  service name:	ReceiverBinding 
//gsoap trv  service type:	ReceiverPort 
//gsoap trv  service namespace:	http://www.onvif.org/ver10/receiver/wsdl 
//gsoap trv  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage WSDL Definitions

@section WSDL_bindings Service Bindings

  - @ref RemoteDiscoveryBinding

  - @ref DeviceBinding

  - @ref ReceiverBinding

@section WSDL_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_operations Operations of Binding "RemoteDiscoveryBinding"

  - @ref __tdn__Hello

  - @ref __tdn__Bye

  - @ref __tdn__Probe

@section RemoteDiscoveryBinding_ports Endpoints of Binding "RemoteDiscoveryBinding"

@note Multiple service bindings collected as one, use wsdl2h option -Nname to produce a separate service for each binding


*/

/**

@page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_operations Operations of Binding "DeviceBinding"

  - @ref __tds__GetServices

  - @ref __tds__GetServiceCapabilities

  - @ref __tds__GetDeviceInformation

  - @ref __tds__SetSystemDateAndTime

  - @ref __tds__GetSystemDateAndTime

  - @ref __tds__SetSystemFactoryDefault

  - @ref __tds__UpgradeSystemFirmware

  - @ref __tds__SystemReboot

  - @ref __tds__RestoreSystem

  - @ref __tds__GetSystemBackup

  - @ref __tds__GetSystemLog

  - @ref __tds__GetSystemSupportInformation

  - @ref __tds__GetScopes

  - @ref __tds__SetScopes

  - @ref __tds__AddScopes

  - @ref __tds__RemoveScopes

  - @ref __tds__GetDiscoveryMode

  - @ref __tds__SetDiscoveryMode

  - @ref __tds__GetRemoteDiscoveryMode

  - @ref __tds__SetRemoteDiscoveryMode

  - @ref __tds__GetDPAddresses

  - @ref __tds__GetEndpointReference

  - @ref __tds__GetRemoteUser

  - @ref __tds__SetRemoteUser

  - @ref __tds__GetUsers

  - @ref __tds__CreateUsers

  - @ref __tds__DeleteUsers

  - @ref __tds__SetUser

  - @ref __tds__GetWsdlUrl

  - @ref __tds__GetCapabilities

  - @ref __tds__SetDPAddresses

  - @ref __tds__GetHostname

  - @ref __tds__SetHostname

  - @ref __tds__SetHostnameFromDHCP

  - @ref __tds__GetDNS

  - @ref __tds__SetDNS

  - @ref __tds__GetNTP

  - @ref __tds__SetNTP

  - @ref __tds__GetDynamicDNS

  - @ref __tds__SetDynamicDNS

  - @ref __tds__GetNetworkInterfaces

  - @ref __tds__SetNetworkInterfaces

  - @ref __tds__GetNetworkProtocols

  - @ref __tds__SetNetworkProtocols

  - @ref __tds__GetNetworkDefaultGateway

  - @ref __tds__SetNetworkDefaultGateway

  - @ref __tds__GetZeroConfiguration

  - @ref __tds__SetZeroConfiguration

  - @ref __tds__GetIPAddressFilter

  - @ref __tds__SetIPAddressFilter

  - @ref __tds__AddIPAddressFilter

  - @ref __tds__RemoveIPAddressFilter

  - @ref __tds__GetAccessPolicy

  - @ref __tds__SetAccessPolicy

  - @ref __tds__CreateCertificate

  - @ref __tds__GetCertificates

  - @ref __tds__GetCertificatesStatus

  - @ref __tds__SetCertificatesStatus

  - @ref __tds__DeleteCertificates

  - @ref __tds__GetPkcs10Request

  - @ref __tds__LoadCertificates

  - @ref __tds__GetClientCertificateMode

  - @ref __tds__SetClientCertificateMode

  - @ref __tds__GetRelayOutputs

  - @ref __tds__SetRelayOutputSettings

  - @ref __tds__SetRelayOutputState

  - @ref __tds__SendAuxiliaryCommand

  - @ref __tds__GetCACertificates

  - @ref __tds__LoadCertificateWithPrivateKey

  - @ref __tds__GetCertificateInformation

  - @ref __tds__LoadCACertificates

  - @ref __tds__CreateDot1XConfiguration

  - @ref __tds__SetDot1XConfiguration

  - @ref __tds__GetDot1XConfiguration

  - @ref __tds__GetDot1XConfigurations

  - @ref __tds__DeleteDot1XConfiguration

  - @ref __tds__GetDot11Capabilities

  - @ref __tds__GetDot11Status

  - @ref __tds__ScanAvailableDot11Networks

  - @ref __tds__GetSystemUris

  - @ref __tds__StartFirmwareUpgrade

  - @ref __tds__StartSystemRestore

  - @ref __tds__GetStorageConfigurations

  - @ref __tds__CreateStorageConfiguration

  - @ref __tds__GetStorageConfiguration

  - @ref __tds__SetStorageConfiguration

  - @ref __tds__DeleteStorageConfiguration

@section DeviceBinding_ports Endpoints of Binding "DeviceBinding"

@note Multiple service bindings collected as one, use wsdl2h option -Nname to produce a separate service for each binding


*/

/**

@page ReceiverBinding Binding "ReceiverBinding"

@section ReceiverBinding_operations Operations of Binding "ReceiverBinding"

  - @ref __trv__GetServiceCapabilities

  - @ref __trv__GetReceivers

  - @ref __trv__GetReceiver

  - @ref __trv__CreateReceiver

  - @ref __trv__DeleteReceiver

  - @ref __trv__ConfigureReceiver

  - @ref __trv__SetReceiverMode

  - @ref __trv__GetReceiverState

@section ReceiverBinding_ports Endpoints of Binding "ReceiverBinding"

@note Multiple service bindings collected as one, use wsdl2h option -Nname to produce a separate service for each binding


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   RemoteDiscoveryBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Hello                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Hello" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/HelloResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Hello(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__HelloType                     tdn__Hello,
    // output parameters:
    wsdd__ResolveType                  *tdn__HelloResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Hello(
    struct soap *soap,
    // input parameters:
    wsdd__HelloType                     tdn__Hello,
    // output parameters:
    wsdd__ResolveType                  *tdn__HelloResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Hello SOAP
//gsoap tdn  service method-style:	Hello document
//gsoap tdn  service method-encoding:	Hello literal
//gsoap tdn  service method-input-action:	Hello http://www.onvif.org/ver10/network/wsdl/Hello
//gsoap tdn  service method-output-action:	Hello http://www.onvif.org/ver10/network/wsdl/HelloResponse
int __tdn__Hello(
    wsdd__HelloType                     tdn__Hello,	///< Input parameter
    wsdd__ResolveType                  *tdn__HelloResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Bye                                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Bye" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ByeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Bye(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__ByeType                       tdn__Bye,
    // output parameters:
    wsdd__ResolveType                  *tdn__ByeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Bye(
    struct soap *soap,
    // input parameters:
    wsdd__ByeType                       tdn__Bye,
    // output parameters:
    wsdd__ResolveType                  *tdn__ByeResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Bye SOAP
//gsoap tdn  service method-style:	Bye document
//gsoap tdn  service method-encoding:	Bye literal
//gsoap tdn  service method-input-action:	Bye http://www.onvif.org/ver10/network/wsdl/Bye
//gsoap tdn  service method-output-action:	Bye http://www.onvif.org/ver10/network/wsdl/ByeResponse
int __tdn__Bye(
    wsdd__ByeType                       tdn__Bye,	///< Input parameter
    wsdd__ResolveType                  *tdn__ByeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Probe                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Probe" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ProbeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Probe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__ProbeType                     tdn__Probe,
    // output parameters:
    wsdd__ProbeMatchesType             *tdn__ProbeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Probe(
    struct soap *soap,
    // input parameters:
    wsdd__ProbeType                     tdn__Probe,
    // output parameters:
    wsdd__ProbeMatchesType             *tdn__ProbeResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Probe SOAP
//gsoap tdn  service method-style:	Probe document
//gsoap tdn  service method-encoding:	Probe literal
//gsoap tdn  service method-input-action:	Probe http://www.onvif.org/ver10/network/wsdl/Probe
//gsoap tdn  service method-output-action:	Probe http://www.onvif.org/ver10/network/wsdl/ProbeResponse
int __tdn__Probe(
    wsdd__ProbeType                     tdn__Probe,	///< Input parameter
    wsdd__ProbeMatchesType             *tdn__ProbeResponse	///< Output parameter
);

/**

@page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_policy_enablers Policy Enablers of Binding "RemoteDiscoveryBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServices                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServices" of service binding "DeviceBinding".
Returns information about services on the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServicesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServices(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetServices*           tds__GetServices,
    // output parameters:
    struct _tds__GetServicesResponse   *tds__GetServicesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServices(
    struct soap *soap,
    // input parameters:
    struct _tds__GetServices*           tds__GetServices,
    // output parameters:
    struct _tds__GetServicesResponse   *tds__GetServicesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetServices SOAP
//gsoap tds  service method-style:	GetServices document
//gsoap tds  service method-encoding:	GetServices literal
//gsoap tds  service method-input-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServices
//gsoap tds  service method-output-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServicesResponse
int __tds__GetServices(
    struct _tds__GetServices*           tds__GetServices,	///< Input parameter
    struct _tds__GetServicesResponse   *tds__GetServicesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServiceCapabilities" of service binding "DeviceBinding".
Returns the capabilities of the device service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,
    // output parameters:
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,
    // output parameters:
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tds  service method-style:	GetServiceCapabilities document
//gsoap tds  service method-encoding:	GetServiceCapabilities literal
//gsoap tds  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities
//gsoap tds  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse
int __tds__GetServiceCapabilities(
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,	///< Input parameter
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDeviceInformation                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDeviceInformation" of service binding "DeviceBinding".
This operation gets basic device information from the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDeviceInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,
    // output parameters:
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDeviceInformation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,
    // output parameters:
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDeviceInformation SOAP
//gsoap tds  service method-style:	GetDeviceInformation document
//gsoap tds  service method-encoding:	GetDeviceInformation literal
//gsoap tds  service method-input-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation
//gsoap tds  service method-output-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse
int __tds__GetDeviceInformation(
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,	///< Input parameter
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemDateAndTime" of service binding "DeviceBinding".
This operation sets the device system date and time. The device shall support the
				configuration of the daylight saving setting and
of the manual system date and time (if
				applicable) or indication of NTP time (if applicable)
through the SetSystemDateAndTime
				command. <br/>
				If system time and date are set manually, the client
shall include UTCDateTime in the request.<br/>
				A TimeZone token which is not formed according to
the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.<br/>
				The DayLightSavings flag should be set to true to
activate any DST settings of the TimeZone string. 
				Clear the DayLightSavings flag if the DST portion
of the TimeZone settings should be ignored.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetSystemDateAndTime*  tds__SetSystemDateAndTime,
    // output parameters:
    struct _tds__SetSystemDateAndTimeResponse*tds__SetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    struct _tds__SetSystemDateAndTime*  tds__SetSystemDateAndTime,
    // output parameters:
    struct _tds__SetSystemDateAndTimeResponse*tds__SetSystemDateAndTimeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetSystemDateAndTime SOAP
//gsoap tds  service method-style:	SetSystemDateAndTime document
//gsoap tds  service method-encoding:	SetSystemDateAndTime literal
//gsoap tds  service method-input-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime
//gsoap tds  service method-output-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse
int __tds__SetSystemDateAndTime(
    struct _tds__SetSystemDateAndTime*  tds__SetSystemDateAndTime,	///< Input parameter
    struct _tds__SetSystemDateAndTimeResponse*tds__SetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemDateAndTime" of service binding "DeviceBinding".
This operation gets the device system date and time. The device shall support the
return of
				the daylight saving setting and of the manual system
date and time (if applicable) or indication
				of NTP time (if applicable) through the GetSystemDateAndTime
command.<br/>
				A device shall provide the UTCDateTime information.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemDateAndTime*  tds__GetSystemDateAndTime,
    // output parameters:
    struct _tds__GetSystemDateAndTimeResponse*tds__GetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemDateAndTime*  tds__GetSystemDateAndTime,
    // output parameters:
    struct _tds__GetSystemDateAndTimeResponse*tds__GetSystemDateAndTimeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemDateAndTime SOAP
//gsoap tds  service method-style:	GetSystemDateAndTime document
//gsoap tds  service method-encoding:	GetSystemDateAndTime literal
//gsoap tds  service method-input-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime
//gsoap tds  service method-output-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse
int __tds__GetSystemDateAndTime(
    struct _tds__GetSystemDateAndTime*  tds__GetSystemDateAndTime,	///< Input parameter
    struct _tds__GetSystemDateAndTimeResponse*tds__GetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemFactoryDefault                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemFactoryDefault" of service binding "DeviceBinding".
This operation reloads the parameters on the device to their factory default values.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemFactoryDefault(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetSystemFactoryDefault* tds__SetSystemFactoryDefault,
    // output parameters:
    struct _tds__SetSystemFactoryDefaultResponse*tds__SetSystemFactoryDefaultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemFactoryDefault(
    struct soap *soap,
    // input parameters:
    struct _tds__SetSystemFactoryDefault* tds__SetSystemFactoryDefault,
    // output parameters:
    struct _tds__SetSystemFactoryDefaultResponse*tds__SetSystemFactoryDefaultResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetSystemFactoryDefault SOAP
//gsoap tds  service method-style:	SetSystemFactoryDefault document
//gsoap tds  service method-encoding:	SetSystemFactoryDefault literal
//gsoap tds  service method-input-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault
//gsoap tds  service method-output-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse
int __tds__SetSystemFactoryDefault(
    struct _tds__SetSystemFactoryDefault* tds__SetSystemFactoryDefault,	///< Input parameter
    struct _tds__SetSystemFactoryDefaultResponse*tds__SetSystemFactoryDefaultResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__UpgradeSystemFirmware                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__UpgradeSystemFirmware" of service binding "DeviceBinding".
This operation upgrades a device firmware version. After a successful upgrade the
response
				message is sent before the device reboots. The device
should support firmware upgrade
				through the UpgradeSystemFirmware command. The exact
format of the firmware data is
				outside the scope of this standard.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__UpgradeSystemFirmware(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__UpgradeSystemFirmware* tds__UpgradeSystemFirmware,
    // output parameters:
    struct _tds__UpgradeSystemFirmwareResponse*tds__UpgradeSystemFirmwareResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__UpgradeSystemFirmware(
    struct soap *soap,
    // input parameters:
    struct _tds__UpgradeSystemFirmware* tds__UpgradeSystemFirmware,
    // output parameters:
    struct _tds__UpgradeSystemFirmwareResponse*tds__UpgradeSystemFirmwareResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	UpgradeSystemFirmware SOAP
//gsoap tds  service method-style:	UpgradeSystemFirmware document
//gsoap tds  service method-encoding:	UpgradeSystemFirmware literal
//gsoap tds  service method-input-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware
//gsoap tds  service method-output-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse
int __tds__UpgradeSystemFirmware(
    struct _tds__UpgradeSystemFirmware* tds__UpgradeSystemFirmware,	///< Input parameter
    struct _tds__UpgradeSystemFirmwareResponse*tds__UpgradeSystemFirmwareResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SystemReboot                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SystemReboot" of service binding "DeviceBinding".
This operation reboots the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SystemReboot(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SystemReboot*          tds__SystemReboot,
    // output parameters:
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SystemReboot(
    struct soap *soap,
    // input parameters:
    struct _tds__SystemReboot*          tds__SystemReboot,
    // output parameters:
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SystemReboot SOAP
//gsoap tds  service method-style:	SystemReboot document
//gsoap tds  service method-encoding:	SystemReboot literal
//gsoap tds  service method-input-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemReboot
//gsoap tds  service method-output-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse
int __tds__SystemReboot(
    struct _tds__SystemReboot*          tds__SystemReboot,	///< Input parameter
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RestoreSystem                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RestoreSystem" of service binding "DeviceBinding".
This operation restores the system backup configuration files(s) previously retrieved
from a
				device. The device should support restore of backup
configuration file(s) through the
				RestoreSystem command. The exact format of the backup
configuration file(s) is outside the
				scope of this standard. If the command is supported,
it shall accept backup files returned by
				the GetSystemBackup command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RestoreSystem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__RestoreSystem*         tds__RestoreSystem,
    // output parameters:
    struct _tds__RestoreSystemResponse *tds__RestoreSystemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RestoreSystem(
    struct soap *soap,
    // input parameters:
    struct _tds__RestoreSystem*         tds__RestoreSystem,
    // output parameters:
    struct _tds__RestoreSystemResponse *tds__RestoreSystemResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	RestoreSystem SOAP
//gsoap tds  service method-style:	RestoreSystem document
//gsoap tds  service method-encoding:	RestoreSystem literal
//gsoap tds  service method-input-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystem
//gsoap tds  service method-output-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse
int __tds__RestoreSystem(
    struct _tds__RestoreSystem*         tds__RestoreSystem,	///< Input parameter
    struct _tds__RestoreSystemResponse *tds__RestoreSystemResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemBackup                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemBackup" of service binding "DeviceBinding".
This operation is retrieves system backup configuration file(s) from a device. The
device
				should support return of back up configuration file(s)
through the GetSystemBackup command.
				The backup is returned with reference to a name
and mime-type together with binary data.
				The exact format of the backup configuration files
is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemBackup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemBackup*       tds__GetSystemBackup,
    // output parameters:
    struct _tds__GetSystemBackupResponse*tds__GetSystemBackupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemBackup(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemBackup*       tds__GetSystemBackup,
    // output parameters:
    struct _tds__GetSystemBackupResponse*tds__GetSystemBackupResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemBackup SOAP
//gsoap tds  service method-style:	GetSystemBackup document
//gsoap tds  service method-encoding:	GetSystemBackup literal
//gsoap tds  service method-input-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackup
//gsoap tds  service method-output-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse
int __tds__GetSystemBackup(
    struct _tds__GetSystemBackup*       tds__GetSystemBackup,	///< Input parameter
    struct _tds__GetSystemBackupResponse*tds__GetSystemBackupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemLog                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemLog" of service binding "DeviceBinding".
This operation gets a system log from the device. The exact format of the system
logs is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemLog(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemLog*          tds__GetSystemLog,
    // output parameters:
    struct _tds__GetSystemLogResponse  *tds__GetSystemLogResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemLog(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemLog*          tds__GetSystemLog,
    // output parameters:
    struct _tds__GetSystemLogResponse  *tds__GetSystemLogResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemLog SOAP
//gsoap tds  service method-style:	GetSystemLog document
//gsoap tds  service method-encoding:	GetSystemLog literal
//gsoap tds  service method-input-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLog
//gsoap tds  service method-output-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse
int __tds__GetSystemLog(
    struct _tds__GetSystemLog*          tds__GetSystemLog,	///< Input parameter
    struct _tds__GetSystemLogResponse  *tds__GetSystemLogResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemSupportInformation                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemSupportInformation" of service binding "DeviceBinding".
This operation gets arbitary device diagnostics information from the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemSupportInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemSupportInformation* tds__GetSystemSupportInformation,
    // output parameters:
    struct _tds__GetSystemSupportInformationResponse*tds__GetSystemSupportInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemSupportInformation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemSupportInformation* tds__GetSystemSupportInformation,
    // output parameters:
    struct _tds__GetSystemSupportInformationResponse*tds__GetSystemSupportInformationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemSupportInformation SOAP
//gsoap tds  service method-style:	GetSystemSupportInformation document
//gsoap tds  service method-encoding:	GetSystemSupportInformation literal
//gsoap tds  service method-input-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation
//gsoap tds  service method-output-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse
int __tds__GetSystemSupportInformation(
    struct _tds__GetSystemSupportInformation* tds__GetSystemSupportInformation,	///< Input parameter
    struct _tds__GetSystemSupportInformationResponse*tds__GetSystemSupportInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetScopes" of service binding "DeviceBinding".
This operation requests the scope parameters of a device. The scope parameters are
used in
				the device discovery to match a probe message, see
Section 7. The Scope parameters are of
				two different types: <ul>
					<li>Fixed</li>
					<li>Configurable</li>
				</ul>
				Fixed scope parameters are permanent device characteristics
and cannot be removed through the device management interface. 
				The scope type is indicated in the scope list returned
in the get scope parameters response. A device shall support 
				retrieval of discovery scope parameters through
the GetScopes command. As some scope parameters are mandatory, 
				the device shall return a non-empty scope list in
the response.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetScopes*             tds__GetScopes,
    // output parameters:
    struct _tds__GetScopesResponse     *tds__GetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__GetScopes*             tds__GetScopes,
    // output parameters:
    struct _tds__GetScopesResponse     *tds__GetScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetScopes SOAP
//gsoap tds  service method-style:	GetScopes document
//gsoap tds  service method-encoding:	GetScopes literal
//gsoap tds  service method-input-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopes
//gsoap tds  service method-output-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopesResponse
int __tds__GetScopes(
    struct _tds__GetScopes*             tds__GetScopes,	///< Input parameter
    struct _tds__GetScopesResponse     *tds__GetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetScopes" of service binding "DeviceBinding".
This operation sets the scope parameters of a device. The scope parameters are used
in the
				device discovery to match a probe message.
				This operation replaces all existing configurable
scope parameters (not fixed parameters). If
				this shall be avoided, one should use the scope
add command instead. The device shall
				support configuration of discovery scope parameters
through the SetScopes command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetScopes*             tds__SetScopes,
    // output parameters:
    struct _tds__SetScopesResponse     *tds__SetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__SetScopes*             tds__SetScopes,
    // output parameters:
    struct _tds__SetScopesResponse     *tds__SetScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetScopes SOAP
//gsoap tds  service method-style:	SetScopes document
//gsoap tds  service method-encoding:	SetScopes literal
//gsoap tds  service method-input-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopes
//gsoap tds  service method-output-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopesResponse
int __tds__SetScopes(
    struct _tds__SetScopes*             tds__SetScopes,	///< Input parameter
    struct _tds__SetScopesResponse     *tds__SetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddScopes" of service binding "DeviceBinding".
This operation adds new configurable scope parameters to a device. The scope parameters
				are used in the device discovery to match a probe
message. The device shall
				support addition of discovery scope parameters through
the AddScopes command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__AddScopes*             tds__AddScopes,
    // output parameters:
    struct _tds__AddScopesResponse     *tds__AddScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__AddScopes*             tds__AddScopes,
    // output parameters:
    struct _tds__AddScopesResponse     *tds__AddScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	AddScopes SOAP
//gsoap tds  service method-style:	AddScopes document
//gsoap tds  service method-encoding:	AddScopes literal
//gsoap tds  service method-input-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopes
//gsoap tds  service method-output-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopesResponse
int __tds__AddScopes(
    struct _tds__AddScopes*             tds__AddScopes,	///< Input parameter
    struct _tds__AddScopesResponse     *tds__AddScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveScopes                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveScopes" of service binding "DeviceBinding".
This operation deletes scope-configurable scope parameters from a device. The scope
				parameters are used in the device discovery to match
a probe message, see Section 7. The
				device shall support deletion of discovery scope
parameters through the RemoveScopes
				command.
				Table

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__RemoveScopes*          tds__RemoveScopes,
    // output parameters:
    struct _tds__RemoveScopesResponse  *tds__RemoveScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__RemoveScopes*          tds__RemoveScopes,
    // output parameters:
    struct _tds__RemoveScopesResponse  *tds__RemoveScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	RemoveScopes SOAP
//gsoap tds  service method-style:	RemoveScopes document
//gsoap tds  service method-encoding:	RemoveScopes literal
//gsoap tds  service method-input-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopes
//gsoap tds  service method-output-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse
int __tds__RemoveScopes(
    struct _tds__RemoveScopes*          tds__RemoveScopes,	///< Input parameter
    struct _tds__RemoveScopesResponse  *tds__RemoveScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDiscoveryMode" of service binding "DeviceBinding".
This operation gets the discovery mode of a device. See Section 7.2 for the definition
of the
				different device discovery modes. The device shall
support retrieval of the discovery mode
				setting through the GetDiscoveryMode command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDiscoveryMode*      tds__GetDiscoveryMode,
    // output parameters:
    struct _tds__GetDiscoveryModeResponse*tds__GetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDiscoveryMode*      tds__GetDiscoveryMode,
    // output parameters:
    struct _tds__GetDiscoveryModeResponse*tds__GetDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDiscoveryMode SOAP
//gsoap tds  service method-style:	GetDiscoveryMode document
//gsoap tds  service method-encoding:	GetDiscoveryMode literal
//gsoap tds  service method-input-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode
//gsoap tds  service method-output-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse
int __tds__GetDiscoveryMode(
    struct _tds__GetDiscoveryMode*      tds__GetDiscoveryMode,	///< Input parameter
    struct _tds__GetDiscoveryModeResponse*tds__GetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDiscoveryMode" of service binding "DeviceBinding".
This operation sets the discovery mode operation of a device. See Section 7.2 for
the
				definition of the different device discovery modes.
The device shall support configuration of
				the discovery mode setting through the SetDiscoveryMode
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDiscoveryMode*      tds__SetDiscoveryMode,
    // output parameters:
    struct _tds__SetDiscoveryModeResponse*tds__SetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDiscoveryMode*      tds__SetDiscoveryMode,
    // output parameters:
    struct _tds__SetDiscoveryModeResponse*tds__SetDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDiscoveryMode SOAP
//gsoap tds  service method-style:	SetDiscoveryMode document
//gsoap tds  service method-encoding:	SetDiscoveryMode literal
//gsoap tds  service method-input-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode
//gsoap tds  service method-output-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse
int __tds__SetDiscoveryMode(
    struct _tds__SetDiscoveryMode*      tds__SetDiscoveryMode,	///< Input parameter
    struct _tds__SetDiscoveryModeResponse*tds__SetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation gets the remote discovery mode of a device. See Section 7.4 for the
definition
				of remote discovery extensions. A device that supports
remote discovery shall support
				retrieval of the remote discovery mode setting through
the GetRemoteDiscoveryMode
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRemoteDiscoveryMode* tds__GetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__GetRemoteDiscoveryModeResponse*tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRemoteDiscoveryMode* tds__GetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__GetRemoteDiscoveryModeResponse*tds__GetRemoteDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	GetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	GetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse
int __tds__GetRemoteDiscoveryMode(
    struct _tds__GetRemoteDiscoveryMode* tds__GetRemoteDiscoveryMode,	///< Input parameter
    struct _tds__GetRemoteDiscoveryModeResponse*tds__GetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation sets the remote discovery mode of operation of a device. See Section
7.4 for
				the definition of remote discovery remote extensions.
A device that supports remote discovery
				shall support configuration of the discovery mode
setting through the
				SetRemoteDiscoveryMode command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRemoteDiscoveryMode* tds__SetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__SetRemoteDiscoveryModeResponse*tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRemoteDiscoveryMode* tds__SetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__SetRemoteDiscoveryModeResponse*tds__SetRemoteDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	SetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	SetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse
int __tds__SetRemoteDiscoveryMode(
    struct _tds__SetRemoteDiscoveryMode* tds__SetRemoteDiscoveryMode,	///< Input parameter
    struct _tds__SetRemoteDiscoveryModeResponse*tds__SetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDPAddresses" of service binding "DeviceBinding".
This operation gets the remote DP address or addresses from a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support retrieval of the remote
				DP address(es) through the GetDPAddresses command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDPAddresses*        tds__GetDPAddresses,
    // output parameters:
    struct _tds__GetDPAddressesResponse*tds__GetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDPAddresses(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDPAddresses*        tds__GetDPAddresses,
    // output parameters:
    struct _tds__GetDPAddressesResponse*tds__GetDPAddressesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDPAddresses SOAP
//gsoap tds  service method-style:	GetDPAddresses document
//gsoap tds  service method-encoding:	GetDPAddresses literal
//gsoap tds  service method-input-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddresses
//gsoap tds  service method-output-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse
int __tds__GetDPAddresses(
    struct _tds__GetDPAddresses*        tds__GetDPAddresses,	///< Input parameter
    struct _tds__GetDPAddressesResponse*tds__GetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetEndpointReference                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetEndpointReference" of service binding "DeviceBinding".
A client can ask for the device service endpoint reference address property that
can be used
				to derive the password equivalent for remote user
operation. The device shall support the
				GetEndpointReference command returning the address
property of the device service
				endpoint reference.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetEndpointReference(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetEndpointReference*  tds__GetEndpointReference,
    // output parameters:
    struct _tds__GetEndpointReferenceResponse*tds__GetEndpointReferenceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetEndpointReference(
    struct soap *soap,
    // input parameters:
    struct _tds__GetEndpointReference*  tds__GetEndpointReference,
    // output parameters:
    struct _tds__GetEndpointReferenceResponse*tds__GetEndpointReferenceResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetEndpointReference SOAP
//gsoap tds  service method-style:	GetEndpointReference document
//gsoap tds  service method-encoding:	GetEndpointReference literal
//gsoap tds  service method-input-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReference
//gsoap tds  service method-output-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse
int __tds__GetEndpointReference(
    struct _tds__GetEndpointReference*  tds__GetEndpointReference,	///< Input parameter
    struct _tds__GetEndpointReferenceResponse*tds__GetEndpointReferenceResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteUser" of service binding "DeviceBinding".
This operation returns the configured remote user (if any). A device supporting
remote user
				handling shall support this operation. The user
is only valid for the WS-UserToken profile or
				as a HTTP / RTSP user.<br/>
				The algorithm to use for deriving the password is
described in section 5.12.2.1 of the core specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRemoteUser*         tds__GetRemoteUser,
    // output parameters:
    struct _tds__GetRemoteUserResponse *tds__GetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteUser(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRemoteUser*         tds__GetRemoteUser,
    // output parameters:
    struct _tds__GetRemoteUserResponse *tds__GetRemoteUserResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetRemoteUser SOAP
//gsoap tds  service method-style:	GetRemoteUser document
//gsoap tds  service method-encoding:	GetRemoteUser literal
//gsoap tds  service method-input-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUser
//gsoap tds  service method-output-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse
int __tds__GetRemoteUser(
    struct _tds__GetRemoteUser*         tds__GetRemoteUser,	///< Input parameter
    struct _tds__GetRemoteUserResponse *tds__GetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteUser" of service binding "DeviceBinding".
This operation sets the remote user. A device supporting remote user handling shall
support this
				operation. The user is only valid for the WS-UserToken
profile or as a HTTP / RTSP user.<br/>
				The password that is set shall always be the original
(not derived) password.<br/>
				If UseDerivedPassword is set password derivation
shall be done by the device when connecting to a
				remote device.The algorithm to use for deriving
the password is described in section 5.12.2.1 of the core specification.<br/>
				To remove the remote user SetRemoteUser should be
called without the RemoteUser parameter.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRemoteUser*         tds__SetRemoteUser,
    // output parameters:
    struct _tds__SetRemoteUserResponse *tds__SetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteUser(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRemoteUser*         tds__SetRemoteUser,
    // output parameters:
    struct _tds__SetRemoteUserResponse *tds__SetRemoteUserResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRemoteUser SOAP
//gsoap tds  service method-style:	SetRemoteUser document
//gsoap tds  service method-encoding:	SetRemoteUser literal
//gsoap tds  service method-input-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUser
//gsoap tds  service method-output-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse
int __tds__SetRemoteUser(
    struct _tds__SetRemoteUser*         tds__SetRemoteUser,	///< Input parameter
    struct _tds__SetRemoteUserResponse *tds__SetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetUsers                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetUsers" of service binding "DeviceBinding".
This operation lists the registered users and corresponding credentials on a device.
The
				device shall support retrieval of registered device
users and their credentials for the user
				token through the GetUsers command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetUsers*              tds__GetUsers,
    // output parameters:
    struct _tds__GetUsersResponse      *tds__GetUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetUsers(
    struct soap *soap,
    // input parameters:
    struct _tds__GetUsers*              tds__GetUsers,
    // output parameters:
    struct _tds__GetUsersResponse      *tds__GetUsersResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetUsers SOAP
//gsoap tds  service method-style:	GetUsers document
//gsoap tds  service method-encoding:	GetUsers literal
//gsoap tds  service method-input-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsers
//gsoap tds  service method-output-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsersResponse
int __tds__GetUsers(
    struct _tds__GetUsers*              tds__GetUsers,	///< Input parameter
    struct _tds__GetUsersResponse      *tds__GetUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateUsers" of service binding "DeviceBinding".
This operation creates new device users and corresponding credentials on a device
for authentication purposes. 
				The device shall support creation of device users
and their credentials through the CreateUsers
				command. Either all users are created successfully
or a fault message shall be returned
				without creating any user.<br/>
				ONVIF compliant devices are recommended to support
password length of at least 28 bytes,
				as clients may follow the password derivation mechanism
which results in 'password
				equivalent' of length 28 bytes, as described in
section 3.1.2 of the ONVIF security white paper.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateUsers*           tds__CreateUsers,
    // output parameters:
    struct _tds__CreateUsersResponse   *tds__CreateUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateUsers(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateUsers*           tds__CreateUsers,
    // output parameters:
    struct _tds__CreateUsersResponse   *tds__CreateUsersResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateUsers SOAP
//gsoap tds  service method-style:	CreateUsers document
//gsoap tds  service method-encoding:	CreateUsers literal
//gsoap tds  service method-input-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsers
//gsoap tds  service method-output-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse
int __tds__CreateUsers(
    struct _tds__CreateUsers*           tds__CreateUsers,	///< Input parameter
    struct _tds__CreateUsersResponse   *tds__CreateUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteUsers" of service binding "DeviceBinding".
This operation deletes users on a device. The device shall support deletion of device
users and their credentials 
				through the DeleteUsers command. A device may have
one or more fixed users
				that cannot be deleted to ensure access to the unit.
Either all users are deleted successfully or a
				fault message shall be returned and no users be
deleted.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteUsers*           tds__DeleteUsers,
    // output parameters:
    struct _tds__DeleteUsersResponse   *tds__DeleteUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteUsers(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteUsers*           tds__DeleteUsers,
    // output parameters:
    struct _tds__DeleteUsersResponse   *tds__DeleteUsersResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteUsers SOAP
//gsoap tds  service method-style:	DeleteUsers document
//gsoap tds  service method-encoding:	DeleteUsers literal
//gsoap tds  service method-input-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsers
//gsoap tds  service method-output-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse
int __tds__DeleteUsers(
    struct _tds__DeleteUsers*           tds__DeleteUsers,	///< Input parameter
    struct _tds__DeleteUsersResponse   *tds__DeleteUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetUser                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetUser" of service binding "DeviceBinding".
This operation updates the settings for one or several users on a device for authentication
purposes.
				The device shall support update of device users
and their credentials through the SetUser command. 
				Either all change requests are processed successfully
or a fault message shall be returned and no change requests be processed.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetUser*               tds__SetUser,
    // output parameters:
    struct _tds__SetUserResponse       *tds__SetUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetUser(
    struct soap *soap,
    // input parameters:
    struct _tds__SetUser*               tds__SetUser,
    // output parameters:
    struct _tds__SetUserResponse       *tds__SetUserResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetUser SOAP
//gsoap tds  service method-style:	SetUser document
//gsoap tds  service method-encoding:	SetUser literal
//gsoap tds  service method-input-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUser
//gsoap tds  service method-output-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUserResponse
int __tds__SetUser(
    struct _tds__SetUser*               tds__SetUser,	///< Input parameter
    struct _tds__SetUserResponse       *tds__SetUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetWsdlUrl                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetWsdlUrl" of service binding "DeviceBinding".
It is possible for an endpoint to request a URL that can be used to retrieve the
complete
				schema and WSDL definitions of a device. The command
gives in return a URL entry point
				where all the necessary product specific WSDL and
schema definitions can be retrieved. The
				device shall provide a URL for WSDL and schema download
through the GetWsdlUrl command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetWsdlUrl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetWsdlUrl*            tds__GetWsdlUrl,
    // output parameters:
    struct _tds__GetWsdlUrlResponse    *tds__GetWsdlUrlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetWsdlUrl(
    struct soap *soap,
    // input parameters:
    struct _tds__GetWsdlUrl*            tds__GetWsdlUrl,
    // output parameters:
    struct _tds__GetWsdlUrlResponse    *tds__GetWsdlUrlResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetWsdlUrl SOAP
//gsoap tds  service method-style:	GetWsdlUrl document
//gsoap tds  service method-encoding:	GetWsdlUrl literal
//gsoap tds  service method-input-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl
//gsoap tds  service method-output-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse
int __tds__GetWsdlUrl(
    struct _tds__GetWsdlUrl*            tds__GetWsdlUrl,	///< Input parameter
    struct _tds__GetWsdlUrlResponse    *tds__GetWsdlUrlResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCapabilities                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCapabilities" of service binding "DeviceBinding".
Any endpoint can ask for the capabilities of a device using the capability exchange
request
				response operation. The device shall indicate all
its ONVIF compliant capabilities through the
				GetCapabilities command.
				The capability list includes references to the addresses
(XAddr) of the service implementing
				the interface operations in the category. Apart
from the addresses, the
				capabilities only reflect optional functions.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCapabilities*       tds__GetCapabilities,
    // output parameters:
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCapabilities*       tds__GetCapabilities,
    // output parameters:
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCapabilities SOAP
//gsoap tds  service method-style:	GetCapabilities document
//gsoap tds  service method-encoding:	GetCapabilities literal
//gsoap tds  service method-input-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilities
//gsoap tds  service method-output-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse
int __tds__GetCapabilities(
    struct _tds__GetCapabilities*       tds__GetCapabilities,	///< Input parameter
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDPAddresses" of service binding "DeviceBinding".
This operation sets the remote DP address or addresses on a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support configuration of the
				remote DP address(es) through the SetDPAddresses
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDPAddresses*        tds__SetDPAddresses,
    // output parameters:
    struct _tds__SetDPAddressesResponse*tds__SetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDPAddresses(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDPAddresses*        tds__SetDPAddresses,
    // output parameters:
    struct _tds__SetDPAddressesResponse*tds__SetDPAddressesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDPAddresses SOAP
//gsoap tds  service method-style:	SetDPAddresses document
//gsoap tds  service method-encoding:	SetDPAddresses literal
//gsoap tds  service method-input-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddresses
//gsoap tds  service method-output-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse
int __tds__SetDPAddresses(
    struct _tds__SetDPAddresses*        tds__SetDPAddresses,	///< Input parameter
    struct _tds__SetDPAddressesResponse*tds__SetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetHostname" of service binding "DeviceBinding".
This operation is used by an endpoint to get the hostname from a device. The device
shall
				return its hostname configurations through the GetHostname
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetHostname*           tds__GetHostname,
    // output parameters:
    struct _tds__GetHostnameResponse   *tds__GetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetHostname(
    struct soap *soap,
    // input parameters:
    struct _tds__GetHostname*           tds__GetHostname,
    // output parameters:
    struct _tds__GetHostnameResponse   *tds__GetHostnameResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetHostname SOAP
//gsoap tds  service method-style:	GetHostname document
//gsoap tds  service method-encoding:	GetHostname literal
//gsoap tds  service method-input-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostname
//gsoap tds  service method-output-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse
int __tds__GetHostname(
    struct _tds__GetHostname*           tds__GetHostname,	///< Input parameter
    struct _tds__GetHostnameResponse   *tds__GetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostname" of service binding "DeviceBinding".
This operation sets the hostname on a device. It shall be possible to set the device
hostname
				configurations through the SetHostname command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.

			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetHostname*           tds__SetHostname,
    // output parameters:
    struct _tds__SetHostnameResponse   *tds__SetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostname(
    struct soap *soap,
    // input parameters:
    struct _tds__SetHostname*           tds__SetHostname,
    // output parameters:
    struct _tds__SetHostnameResponse   *tds__SetHostnameResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetHostname SOAP
//gsoap tds  service method-style:	SetHostname document
//gsoap tds  service method-encoding:	SetHostname literal
//gsoap tds  service method-input-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostname
//gsoap tds  service method-output-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse
int __tds__SetHostname(
    struct _tds__SetHostname*           tds__SetHostname,	///< Input parameter
    struct _tds__SetHostnameResponse   *tds__SetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostnameFromDHCP                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostnameFromDHCP" of service binding "DeviceBinding".
This operation controls whether the hostname is set manually or retrieved via DHCP.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostnameFromDHCP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetHostnameFromDHCP*   tds__SetHostnameFromDHCP,
    // output parameters:
    struct _tds__SetHostnameFromDHCPResponse*tds__SetHostnameFromDHCPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostnameFromDHCP(
    struct soap *soap,
    // input parameters:
    struct _tds__SetHostnameFromDHCP*   tds__SetHostnameFromDHCP,
    // output parameters:
    struct _tds__SetHostnameFromDHCPResponse*tds__SetHostnameFromDHCPResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetHostnameFromDHCP SOAP
//gsoap tds  service method-style:	SetHostnameFromDHCP document
//gsoap tds  service method-encoding:	SetHostnameFromDHCP literal
//gsoap tds  service method-input-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP
//gsoap tds  service method-output-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse
int __tds__SetHostnameFromDHCP(
    struct _tds__SetHostnameFromDHCP*   tds__SetHostnameFromDHCP,	///< Input parameter
    struct _tds__SetHostnameFromDHCPResponse*tds__SetHostnameFromDHCPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDNS" of service binding "DeviceBinding".
This operation gets the DNS settings from a device. The device shall return its
DNS
				configurations through the GetDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDNS*                tds__GetDNS,
    // output parameters:
    struct _tds__GetDNSResponse        *tds__GetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDNS*                tds__GetDNS,
    // output parameters:
    struct _tds__GetDNSResponse        *tds__GetDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDNS SOAP
//gsoap tds  service method-style:	GetDNS document
//gsoap tds  service method-encoding:	GetDNS literal
//gsoap tds  service method-input-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNS
//gsoap tds  service method-output-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNSResponse
int __tds__GetDNS(
    struct _tds__GetDNS*                tds__GetDNS,	///< Input parameter
    struct _tds__GetDNSResponse        *tds__GetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDNS" of service binding "DeviceBinding".
This operation sets the DNS settings on a device. It shall be possible to set the
device DNS
				configurations through the SetDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDNS*                tds__SetDNS,
    // output parameters:
    struct _tds__SetDNSResponse        *tds__SetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDNS*                tds__SetDNS,
    // output parameters:
    struct _tds__SetDNSResponse        *tds__SetDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDNS SOAP
//gsoap tds  service method-style:	SetDNS document
//gsoap tds  service method-encoding:	SetDNS literal
//gsoap tds  service method-input-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNS
//gsoap tds  service method-output-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNSResponse
int __tds__SetDNS(
    struct _tds__SetDNS*                tds__SetDNS,	///< Input parameter
    struct _tds__SetDNSResponse        *tds__SetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNTP" of service binding "DeviceBinding".
This operation gets the NTP settings from a device. If the device supports NTP,
it shall be
				possible to get the NTP server settings through
the GetNTP command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNTP*                tds__GetNTP,
    // output parameters:
    struct _tds__GetNTPResponse        *tds__GetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNTP(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNTP*                tds__GetNTP,
    // output parameters:
    struct _tds__GetNTPResponse        *tds__GetNTPResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNTP SOAP
//gsoap tds  service method-style:	GetNTP document
//gsoap tds  service method-encoding:	GetNTP literal
//gsoap tds  service method-input-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTP
//gsoap tds  service method-output-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTPResponse
int __tds__GetNTP(
    struct _tds__GetNTP*                tds__GetNTP,	///< Input parameter
    struct _tds__GetNTPResponse        *tds__GetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNTP" of service binding "DeviceBinding".
This operation sets the NTP settings on a device. If the device supports NTP, it
shall be
				possible to set the NTP server settings through
the SetNTP command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.
<br/>
				Changes to the NTP server list will not affect the
clock mode DateTimeType. Use SetSystemDateAndTime to activate NTP operation.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNTP*                tds__SetNTP,
    // output parameters:
    struct _tds__SetNTPResponse        *tds__SetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNTP(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNTP*                tds__SetNTP,
    // output parameters:
    struct _tds__SetNTPResponse        *tds__SetNTPResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNTP SOAP
//gsoap tds  service method-style:	SetNTP document
//gsoap tds  service method-encoding:	SetNTP literal
//gsoap tds  service method-input-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTP
//gsoap tds  service method-output-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTPResponse
int __tds__SetNTP(
    struct _tds__SetNTP*                tds__SetNTP,	///< Input parameter
    struct _tds__SetNTPResponse        *tds__SetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDynamicDNS" of service binding "DeviceBinding".
This operation gets the dynamic DNS settings from a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to get the type, name
				and TTL through the GetDynamicDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDynamicDNS*         tds__GetDynamicDNS,
    // output parameters:
    struct _tds__GetDynamicDNSResponse *tds__GetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDynamicDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDynamicDNS*         tds__GetDynamicDNS,
    // output parameters:
    struct _tds__GetDynamicDNSResponse *tds__GetDynamicDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDynamicDNS SOAP
//gsoap tds  service method-style:	GetDynamicDNS document
//gsoap tds  service method-encoding:	GetDynamicDNS literal
//gsoap tds  service method-input-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS
//gsoap tds  service method-output-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse
int __tds__GetDynamicDNS(
    struct _tds__GetDynamicDNS*         tds__GetDynamicDNS,	///< Input parameter
    struct _tds__GetDynamicDNSResponse *tds__GetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDynamicDNS" of service binding "DeviceBinding".
This operation sets the dynamic DNS settings on a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to set the type, name
				and TTL through the SetDynamicDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDynamicDNS*         tds__SetDynamicDNS,
    // output parameters:
    struct _tds__SetDynamicDNSResponse *tds__SetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDynamicDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDynamicDNS*         tds__SetDynamicDNS,
    // output parameters:
    struct _tds__SetDynamicDNSResponse *tds__SetDynamicDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDynamicDNS SOAP
//gsoap tds  service method-style:	SetDynamicDNS document
//gsoap tds  service method-encoding:	SetDynamicDNS literal
//gsoap tds  service method-input-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS
//gsoap tds  service method-output-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse
int __tds__SetDynamicDNS(
    struct _tds__SetDynamicDNS*         tds__SetDynamicDNS,	///< Input parameter
    struct _tds__SetDynamicDNSResponse *tds__SetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkInterfaces" of service binding "DeviceBinding".
This operation gets the network interface configuration from a device. The device
shall
				support return of network interface configuration
settings as defined by the NetworkInterface
				type through the GetNetworkInterfaces command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNetworkInterfaces*  tds__GetNetworkInterfaces,
    // output parameters:
    struct _tds__GetNetworkInterfacesResponse*tds__GetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNetworkInterfaces*  tds__GetNetworkInterfaces,
    // output parameters:
    struct _tds__GetNetworkInterfacesResponse*tds__GetNetworkInterfacesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNetworkInterfaces SOAP
//gsoap tds  service method-style:	GetNetworkInterfaces document
//gsoap tds  service method-encoding:	GetNetworkInterfaces literal
//gsoap tds  service method-input-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces
//gsoap tds  service method-output-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse
int __tds__GetNetworkInterfaces(
    struct _tds__GetNetworkInterfaces*  tds__GetNetworkInterfaces,	///< Input parameter
    struct _tds__GetNetworkInterfacesResponse*tds__GetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkInterfaces" of service binding "DeviceBinding".
This operation sets the network interface configuration on a device. The device
shall support
				network configuration of supported network interfaces
through the SetNetworkInterfaces
				command.<br/>
				For interoperability with a client unaware of the
IEEE 802.11 extension a device shall retain
				its IEEE 802.11 configuration if the IEEE 802.11
configuration element isnt present in the
				request.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNetworkInterfaces*  tds__SetNetworkInterfaces,
    // output parameters:
    struct _tds__SetNetworkInterfacesResponse*tds__SetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNetworkInterfaces*  tds__SetNetworkInterfaces,
    // output parameters:
    struct _tds__SetNetworkInterfacesResponse*tds__SetNetworkInterfacesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNetworkInterfaces SOAP
//gsoap tds  service method-style:	SetNetworkInterfaces document
//gsoap tds  service method-encoding:	SetNetworkInterfaces literal
//gsoap tds  service method-input-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces
//gsoap tds  service method-output-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse
int __tds__SetNetworkInterfaces(
    struct _tds__SetNetworkInterfaces*  tds__SetNetworkInterfaces,	///< Input parameter
    struct _tds__SetNetworkInterfacesResponse*tds__SetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkProtocols" of service binding "DeviceBinding".
This operation gets defined network protocols from a device. The device shall support
the
				GetNetworkProtocols command returning configured
network protocols.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNetworkProtocols*   tds__GetNetworkProtocols,
    // output parameters:
    struct _tds__GetNetworkProtocolsResponse*tds__GetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNetworkProtocols*   tds__GetNetworkProtocols,
    // output parameters:
    struct _tds__GetNetworkProtocolsResponse*tds__GetNetworkProtocolsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNetworkProtocols SOAP
//gsoap tds  service method-style:	GetNetworkProtocols document
//gsoap tds  service method-encoding:	GetNetworkProtocols literal
//gsoap tds  service method-input-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols
//gsoap tds  service method-output-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse
int __tds__GetNetworkProtocols(
    struct _tds__GetNetworkProtocols*   tds__GetNetworkProtocols,	///< Input parameter
    struct _tds__GetNetworkProtocolsResponse*tds__GetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkProtocols" of service binding "DeviceBinding".
This operation configures defined network protocols on a device. The device shall
support
				configuration of defined network protocols through
the SetNetworkProtocols command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNetworkProtocols*   tds__SetNetworkProtocols,
    // output parameters:
    struct _tds__SetNetworkProtocolsResponse*tds__SetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNetworkProtocols*   tds__SetNetworkProtocols,
    // output parameters:
    struct _tds__SetNetworkProtocolsResponse*tds__SetNetworkProtocolsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNetworkProtocols SOAP
//gsoap tds  service method-style:	SetNetworkProtocols document
//gsoap tds  service method-encoding:	SetNetworkProtocols literal
//gsoap tds  service method-input-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols
//gsoap tds  service method-output-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse
int __tds__SetNetworkProtocols(
    struct _tds__SetNetworkProtocols*   tds__SetNetworkProtocols,	///< Input parameter
    struct _tds__SetNetworkProtocolsResponse*tds__SetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation gets the default gateway settings from a device. The device shall
support the
				GetNetworkDefaultGateway command returning configured
default gateway address(es).

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNetworkDefaultGateway* tds__GetNetworkDefaultGateway,
    // output parameters:
    struct _tds__GetNetworkDefaultGatewayResponse*tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNetworkDefaultGateway* tds__GetNetworkDefaultGateway,
    // output parameters:
    struct _tds__GetNetworkDefaultGatewayResponse*tds__GetNetworkDefaultGatewayResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	GetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	GetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway
//gsoap tds  service method-output-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse
int __tds__GetNetworkDefaultGateway(
    struct _tds__GetNetworkDefaultGateway* tds__GetNetworkDefaultGateway,	///< Input parameter
    struct _tds__GetNetworkDefaultGatewayResponse*tds__GetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation sets the default gateway settings on a device. The device shall support
				configuration of default gateway through the SetNetworkDefaultGateway
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNetworkDefaultGateway* tds__SetNetworkDefaultGateway,
    // output parameters:
    struct _tds__SetNetworkDefaultGatewayResponse*tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNetworkDefaultGateway* tds__SetNetworkDefaultGateway,
    // output parameters:
    struct _tds__SetNetworkDefaultGatewayResponse*tds__SetNetworkDefaultGatewayResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	SetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	SetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway
//gsoap tds  service method-output-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse
int __tds__SetNetworkDefaultGateway(
    struct _tds__SetNetworkDefaultGateway* tds__SetNetworkDefaultGateway,	///< Input parameter
    struct _tds__SetNetworkDefaultGatewayResponse*tds__SetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetZeroConfiguration" of service binding "DeviceBinding".
This operation gets the zero-configuration from a device. If the device supports
dynamic IP
				configuration according to [RFC3927], it shall support
the return of IPv4 zero configuration
				address and status through the GetZeroConfiguration
command.<br/>
			Devices supporting zero configuration on more than one interface
shall use the extension to list the additional interface settings.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetZeroConfiguration*  tds__GetZeroConfiguration,
    // output parameters:
    struct _tds__GetZeroConfigurationResponse*tds__GetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetZeroConfiguration*  tds__GetZeroConfiguration,
    // output parameters:
    struct _tds__GetZeroConfigurationResponse*tds__GetZeroConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetZeroConfiguration SOAP
//gsoap tds  service method-style:	GetZeroConfiguration document
//gsoap tds  service method-encoding:	GetZeroConfiguration literal
//gsoap tds  service method-input-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration
//gsoap tds  service method-output-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse
int __tds__GetZeroConfiguration(
    struct _tds__GetZeroConfiguration*  tds__GetZeroConfiguration,	///< Input parameter
    struct _tds__GetZeroConfigurationResponse*tds__GetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetZeroConfiguration" of service binding "DeviceBinding".
This operation sets the zero-configuration. Use GetCapalities to get if zero-zero-configuration
is supported or not.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetZeroConfiguration*  tds__SetZeroConfiguration,
    // output parameters:
    struct _tds__SetZeroConfigurationResponse*tds__SetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetZeroConfiguration*  tds__SetZeroConfiguration,
    // output parameters:
    struct _tds__SetZeroConfigurationResponse*tds__SetZeroConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetZeroConfiguration SOAP
//gsoap tds  service method-style:	SetZeroConfiguration document
//gsoap tds  service method-encoding:	SetZeroConfiguration literal
//gsoap tds  service method-input-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration
//gsoap tds  service method-output-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse
int __tds__SetZeroConfiguration(
    struct _tds__SetZeroConfiguration*  tds__SetZeroConfiguration,	///< Input parameter
    struct _tds__SetZeroConfigurationResponse*tds__SetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetIPAddressFilter" of service binding "DeviceBinding".
This operation gets the IP address filter settings from a device. If the device
supports device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support the GetIPAddressFilter command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetIPAddressFilter*    tds__GetIPAddressFilter,
    // output parameters:
    struct _tds__GetIPAddressFilterResponse*tds__GetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__GetIPAddressFilter*    tds__GetIPAddressFilter,
    // output parameters:
    struct _tds__GetIPAddressFilterResponse*tds__GetIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetIPAddressFilter SOAP
//gsoap tds  service method-style:	GetIPAddressFilter document
//gsoap tds  service method-encoding:	GetIPAddressFilter literal
//gsoap tds  service method-input-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter
//gsoap tds  service method-output-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse
int __tds__GetIPAddressFilter(
    struct _tds__GetIPAddressFilter*    tds__GetIPAddressFilter,	///< Input parameter
    struct _tds__GetIPAddressFilterResponse*tds__GetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetIPAddressFilter" of service binding "DeviceBinding".
This operation sets the IP address filter settings on a device. If the device supports
device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support configuration of IP filtering
rules through the SetIPAddressFilter
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetIPAddressFilter*    tds__SetIPAddressFilter,
    // output parameters:
    struct _tds__SetIPAddressFilterResponse*tds__SetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__SetIPAddressFilter*    tds__SetIPAddressFilter,
    // output parameters:
    struct _tds__SetIPAddressFilterResponse*tds__SetIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetIPAddressFilter SOAP
//gsoap tds  service method-style:	SetIPAddressFilter document
//gsoap tds  service method-encoding:	SetIPAddressFilter literal
//gsoap tds  service method-input-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter
//gsoap tds  service method-output-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse
int __tds__SetIPAddressFilter(
    struct _tds__SetIPAddressFilter*    tds__SetIPAddressFilter,	///< Input parameter
    struct _tds__SetIPAddressFilterResponse*tds__SetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddIPAddressFilter" of service binding "DeviceBinding".
This operation adds an IP filter address to a device. If the device supports device
access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support adding of IP filtering addresses through
the AddIPAddressFilter command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__AddIPAddressFilter*    tds__AddIPAddressFilter,
    // output parameters:
    struct _tds__AddIPAddressFilterResponse*tds__AddIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__AddIPAddressFilter*    tds__AddIPAddressFilter,
    // output parameters:
    struct _tds__AddIPAddressFilterResponse*tds__AddIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	AddIPAddressFilter SOAP
//gsoap tds  service method-style:	AddIPAddressFilter document
//gsoap tds  service method-encoding:	AddIPAddressFilter literal
//gsoap tds  service method-input-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter
//gsoap tds  service method-output-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse
int __tds__AddIPAddressFilter(
    struct _tds__AddIPAddressFilter*    tds__AddIPAddressFilter,	///< Input parameter
    struct _tds__AddIPAddressFilterResponse*tds__AddIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveIPAddressFilter                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveIPAddressFilter" of service binding "DeviceBinding".
This operation deletes an IP filter address from a device. If the device supports
device access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support deletion of IP filtering addresses
through the RemoveIPAddressFilter command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__RemoveIPAddressFilter* tds__RemoveIPAddressFilter,
    // output parameters:
    struct _tds__RemoveIPAddressFilterResponse*tds__RemoveIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__RemoveIPAddressFilter* tds__RemoveIPAddressFilter,
    // output parameters:
    struct _tds__RemoveIPAddressFilterResponse*tds__RemoveIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	RemoveIPAddressFilter SOAP
//gsoap tds  service method-style:	RemoveIPAddressFilter document
//gsoap tds  service method-encoding:	RemoveIPAddressFilter literal
//gsoap tds  service method-input-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter
//gsoap tds  service method-output-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse
int __tds__RemoveIPAddressFilter(
    struct _tds__RemoveIPAddressFilter* tds__RemoveIPAddressFilter,	///< Input parameter
    struct _tds__RemoveIPAddressFilterResponse*tds__RemoveIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetAccessPolicy" of service binding "DeviceBinding".
Access to different services and sub-sets of services should be subject to access
control. The
				WS-Security framework gives the prerequisite for
end-point authentication. Authorization
				decisions can then be taken using an access security
policy. This standard does not mandate
				any particular policy description format or security
policy but this is up to the device
				manufacturer or system provider to choose policy
and policy description format of choice.
				However, an access policy (in arbitrary format)
can be requested using this command. If the
				device supports access policy settings based on
WS-Security authentication, then the device
				shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetAccessPolicy*       tds__GetAccessPolicy,
    // output parameters:
    struct _tds__GetAccessPolicyResponse*tds__GetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetAccessPolicy(
    struct soap *soap,
    // input parameters:
    struct _tds__GetAccessPolicy*       tds__GetAccessPolicy,
    // output parameters:
    struct _tds__GetAccessPolicyResponse*tds__GetAccessPolicyResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetAccessPolicy SOAP
//gsoap tds  service method-style:	GetAccessPolicy document
//gsoap tds  service method-encoding:	GetAccessPolicy literal
//gsoap tds  service method-input-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy
//gsoap tds  service method-output-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse
int __tds__GetAccessPolicy(
    struct _tds__GetAccessPolicy*       tds__GetAccessPolicy,	///< Input parameter
    struct _tds__GetAccessPolicyResponse*tds__GetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetAccessPolicy" of service binding "DeviceBinding".
This command sets the device access security policy (for more details on the access
security
				policy see the Get command). If the device supports
access policy settings
				based on WS-Security authentication, then the device
shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetAccessPolicy*       tds__SetAccessPolicy,
    // output parameters:
    struct _tds__SetAccessPolicyResponse*tds__SetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetAccessPolicy(
    struct soap *soap,
    // input parameters:
    struct _tds__SetAccessPolicy*       tds__SetAccessPolicy,
    // output parameters:
    struct _tds__SetAccessPolicyResponse*tds__SetAccessPolicyResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetAccessPolicy SOAP
//gsoap tds  service method-style:	SetAccessPolicy document
//gsoap tds  service method-encoding:	SetAccessPolicy literal
//gsoap tds  service method-input-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy
//gsoap tds  service method-output-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse
int __tds__SetAccessPolicy(
    struct _tds__SetAccessPolicy*       tds__SetAccessPolicy,	///< Input parameter
    struct _tds__SetAccessPolicyResponse*tds__SetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateCertificate                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateCertificate" of service binding "DeviceBinding".
This operation generates a private/public key pair and also can create a self-signed
device
				certificate as a result of key pair generation.
The certificate is created using a suitable
				onboard key pair generation mechanism.<br/>
				If a device supports onboard key pair generation,
the device that supports TLS shall support
				this certificate creation command. And also, if
a device supports onboard key pair generation,
				the device that support IEEE 802.1X shall support
this command for the purpose of key pair
				generation. Certificates and key pairs are identified
using certificate IDs. These IDs are either
				chosen by the certificate generation requester or
by the device (in case that no ID value is
				given).

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateCertificate*     tds__CreateCertificate,
    // output parameters:
    struct _tds__CreateCertificateResponse*tds__CreateCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateCertificate(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateCertificate*     tds__CreateCertificate,
    // output parameters:
    struct _tds__CreateCertificateResponse*tds__CreateCertificateResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateCertificate SOAP
//gsoap tds  service method-style:	CreateCertificate document
//gsoap tds  service method-encoding:	CreateCertificate literal
//gsoap tds  service method-input-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificate
//gsoap tds  service method-output-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse
int __tds__CreateCertificate(
    struct _tds__CreateCertificate*     tds__CreateCertificate,	///< Input parameter
    struct _tds__CreateCertificateResponse*tds__CreateCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificates                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificates" of service binding "DeviceBinding".
This operation gets all device server certificates (including self-signed) for the
purpose of TLS
				authentication and all device client certificates
for the purpose of IEEE 802.1X authentication.
				This command lists only the TLS server certificates
and IEEE 802.1X client certificates for the
				device (neither trusted CA certificates nor trusted
root certificates). The certificates are
				returned as binary data. A device that supports
TLS shall support this command and the
				certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCertificates*       tds__GetCertificates,
    // output parameters:
    struct _tds__GetCertificatesResponse*tds__GetCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCertificates*       tds__GetCertificates,
    // output parameters:
    struct _tds__GetCertificatesResponse*tds__GetCertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCertificates SOAP
//gsoap tds  service method-style:	GetCertificates document
//gsoap tds  service method-encoding:	GetCertificates literal
//gsoap tds  service method-input-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificates
//gsoap tds  service method-output-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse
int __tds__GetCertificates(
    struct _tds__GetCertificates*       tds__GetCertificates,	///< Input parameter
    struct _tds__GetCertificatesResponse*tds__GetCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificatesStatus" of service binding "DeviceBinding".
This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS server certificates.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCertificatesStatus* tds__GetCertificatesStatus,
    // output parameters:
    struct _tds__GetCertificatesStatusResponse*tds__GetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCertificatesStatus* tds__GetCertificatesStatus,
    // output parameters:
    struct _tds__GetCertificatesStatusResponse*tds__GetCertificatesStatusResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCertificatesStatus SOAP
//gsoap tds  service method-style:	GetCertificatesStatus document
//gsoap tds  service method-encoding:	GetCertificatesStatus literal
//gsoap tds  service method-input-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus
//gsoap tds  service method-output-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse
int __tds__GetCertificatesStatus(
    struct _tds__GetCertificatesStatus* tds__GetCertificatesStatus,	///< Input parameter
    struct _tds__GetCertificatesStatusResponse*tds__GetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetCertificatesStatus" of service binding "DeviceBinding".
This operation is specific to TLS functionality. This operation sets the status
(enable/disable)
				of the device TLS server certificates. A device
that supports TLS shall support this command.
				Typically only one device server certificate is
allowed to be enabled at a time.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetCertificatesStatus* tds__SetCertificatesStatus,
    // output parameters:
    struct _tds__SetCertificatesStatusResponse*tds__SetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    struct _tds__SetCertificatesStatus* tds__SetCertificatesStatus,
    // output parameters:
    struct _tds__SetCertificatesStatusResponse*tds__SetCertificatesStatusResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetCertificatesStatus SOAP
//gsoap tds  service method-style:	SetCertificatesStatus document
//gsoap tds  service method-encoding:	SetCertificatesStatus literal
//gsoap tds  service method-input-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus
//gsoap tds  service method-output-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse
int __tds__SetCertificatesStatus(
    struct _tds__SetCertificatesStatus* tds__SetCertificatesStatus,	///< Input parameter
    struct _tds__SetCertificatesStatusResponse*tds__SetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteCertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteCertificates" of service binding "DeviceBinding".
This operation deletes a certificate or multiple certificates. The device MAY also
delete a
				private/public key pair which is coupled with the
certificate to be deleted. The device that
				support either TLS or IEEE 802.1X shall support
the deletion of a certificate or multiple
				certificates through this command. Either all certificates
are deleted successfully or a fault
				message shall be returned without deleting any certificate.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteCertificates*    tds__DeleteCertificates,
    // output parameters:
    struct _tds__DeleteCertificatesResponse*tds__DeleteCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteCertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteCertificates*    tds__DeleteCertificates,
    // output parameters:
    struct _tds__DeleteCertificatesResponse*tds__DeleteCertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteCertificates SOAP
//gsoap tds  service method-style:	DeleteCertificates document
//gsoap tds  service method-encoding:	DeleteCertificates literal
//gsoap tds  service method-input-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificates
//gsoap tds  service method-output-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse
int __tds__DeleteCertificates(
    struct _tds__DeleteCertificates*    tds__DeleteCertificates,	///< Input parameter
    struct _tds__DeleteCertificatesResponse*tds__DeleteCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPkcs10Request                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPkcs10Request" of service binding "DeviceBinding".
This operation requests a PKCS #10 certificate signature request from the device.
The
				returned information field shall be either formatted
exactly as specified in [PKCS#10] or PEM
				encoded [PKCS#10] format. In order for this command
to work, the device must already have
				a private/public key pair. This key pair should
be referred by CertificateID as specified in the
				input parameter description. This CertificateID
refers to the key pair generated using
				CreateCertificate command.<br/>
				A device that support onboard key pair generation
that supports either TLS or IEEE 802.1X
				using client certificate shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPkcs10Request(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetPkcs10Request*      tds__GetPkcs10Request,
    // output parameters:
    struct _tds__GetPkcs10RequestResponse*tds__GetPkcs10RequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPkcs10Request(
    struct soap *soap,
    // input parameters:
    struct _tds__GetPkcs10Request*      tds__GetPkcs10Request,
    // output parameters:
    struct _tds__GetPkcs10RequestResponse*tds__GetPkcs10RequestResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetPkcs10Request SOAP
//gsoap tds  service method-style:	GetPkcs10Request document
//gsoap tds  service method-encoding:	GetPkcs10Request literal
//gsoap tds  service method-input-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request
//gsoap tds  service method-output-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse
int __tds__GetPkcs10Request(
    struct _tds__GetPkcs10Request*      tds__GetPkcs10Request,	///< Input parameter
    struct _tds__GetPkcs10RequestResponse*tds__GetPkcs10RequestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificates                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificates" of service binding "DeviceBinding".
TLS server certificate(s) or IEEE 802.1X client certificate(s) created using the
PKCS#10
				certificate request command can be loaded into the
device using this command (see Section
				8.4.13). The certificate ID in the request shall
be present. The device may sort the received
				certificate(s) based on the public key and subject
information in the certificate(s).
				The certificate ID in the request will be the ID
value the client wish to have. The device is
				supposed to scan the generated key pairs present
in the device to identify which is the
				correspondent key pair with the loaded certificate
and then make the link between the
				certificate and the key pair.<br/>
				A device that supports onboard key pair generation
that support either TLS or IEEE 802.1X
				shall support this command.<br/>
				The certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.<br/>
				This command is applicable to any device type, although
the parameter name is called for
				historical reasons NVTCertificate.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__LoadCertificates*      tds__LoadCertificates,
    // output parameters:
    struct _tds__LoadCertificatesResponse*tds__LoadCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__LoadCertificates*      tds__LoadCertificates,
    // output parameters:
    struct _tds__LoadCertificatesResponse*tds__LoadCertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	LoadCertificates SOAP
//gsoap tds  service method-style:	LoadCertificates document
//gsoap tds  service method-encoding:	LoadCertificates literal
//gsoap tds  service method-input-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificates
//gsoap tds  service method-output-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse
int __tds__LoadCertificates(
    struct _tds__LoadCertificates*      tds__LoadCertificates,	///< Input parameter
    struct _tds__LoadCertificatesResponse*tds__LoadCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetClientCertificateMode" of service binding "DeviceBinding".
This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS client authentication.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetClientCertificateMode* tds__GetClientCertificateMode,
    // output parameters:
    struct _tds__GetClientCertificateModeResponse*tds__GetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    struct _tds__GetClientCertificateMode* tds__GetClientCertificateMode,
    // output parameters:
    struct _tds__GetClientCertificateModeResponse*tds__GetClientCertificateModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetClientCertificateMode SOAP
//gsoap tds  service method-style:	GetClientCertificateMode document
//gsoap tds  service method-encoding:	GetClientCertificateMode literal
//gsoap tds  service method-input-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode
//gsoap tds  service method-output-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse
int __tds__GetClientCertificateMode(
    struct _tds__GetClientCertificateMode* tds__GetClientCertificateMode,	///< Input parameter
    struct _tds__GetClientCertificateModeResponse*tds__GetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetClientCertificateMode" of service binding "DeviceBinding".
This operation is specific to TLS functionality. This operation sets the status
				(enabled/disabled) of the device TLS client authentication.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetClientCertificateMode* tds__SetClientCertificateMode,
    // output parameters:
    struct _tds__SetClientCertificateModeResponse*tds__SetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    struct _tds__SetClientCertificateMode* tds__SetClientCertificateMode,
    // output parameters:
    struct _tds__SetClientCertificateModeResponse*tds__SetClientCertificateModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetClientCertificateMode SOAP
//gsoap tds  service method-style:	SetClientCertificateMode document
//gsoap tds  service method-encoding:	SetClientCertificateMode literal
//gsoap tds  service method-input-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode
//gsoap tds  service method-output-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse
int __tds__SetClientCertificateMode(
    struct _tds__SetClientCertificateMode* tds__SetClientCertificateMode,	///< Input parameter
    struct _tds__SetClientCertificateModeResponse*tds__SetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRelayOutputs" of service binding "DeviceBinding".
This operation gets a list of all available relay outputs and their settings.<br/>
				This method has been depricated with version 2.0.
Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,
    // output parameters:
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRelayOutputs(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,
    // output parameters:
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetRelayOutputs SOAP
//gsoap tds  service method-style:	GetRelayOutputs document
//gsoap tds  service method-encoding:	GetRelayOutputs literal
//gsoap tds  service method-input-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs
//gsoap tds  service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse
int __tds__GetRelayOutputs(
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,	///< Input parameter
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputSettings" of service binding "DeviceBinding".
This operation sets the settings of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRelayOutputSettings* tds__SetRelayOutputSettings,
    // output parameters:
    struct _tds__SetRelayOutputSettingsResponse*tds__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputSettings(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRelayOutputSettings* tds__SetRelayOutputSettings,
    // output parameters:
    struct _tds__SetRelayOutputSettingsResponse*tds__SetRelayOutputSettingsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRelayOutputSettings SOAP
//gsoap tds  service method-style:	SetRelayOutputSettings document
//gsoap tds  service method-encoding:	SetRelayOutputSettings literal
//gsoap tds  service method-input-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings
//gsoap tds  service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse
int __tds__SetRelayOutputSettings(
    struct _tds__SetRelayOutputSettings* tds__SetRelayOutputSettings,	///< Input parameter
    struct _tds__SetRelayOutputSettingsResponse*tds__SetRelayOutputSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputState" of service binding "DeviceBinding".
This operation sets the state of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,
    // output parameters:
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputState(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,
    // output parameters:
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRelayOutputState SOAP
//gsoap tds  service method-style:	SetRelayOutputState document
//gsoap tds  service method-encoding:	SetRelayOutputState literal
//gsoap tds  service method-input-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState
//gsoap tds  service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse
int __tds__SetRelayOutputState(
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,	///< Input parameter
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SendAuxiliaryCommand                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SendAuxiliaryCommand" of service binding "DeviceBinding".
Manage auxiliary commands supported by a device, such as controlling an Infrared
(IR) lamp, 
				a heater or a wiper or a thermometer that is connected
to the device.<br/>
				The supported commands can be retrieved via the
AuxiliaryCommands capability.<br/>
				Although the name of the auxiliary commands can
be freely defined, commands starting with the prefix tt: are 
				reserved to define frequently used commands and
these reserved commands shall all share the "tt:command|parameter" syntax.
				<ul>
					<li>tt:Wiper|On  Request to start the
wiper.</li>
					<li>tt:Wiper|Off  Request to stop the
wiper.</li>
					<li>tt:Washer|On  Request to start the
washer.</li>
					<li>tt:Washer|Off  Request to stop the
washer.</li>
					<li>tt:WashingProcedure|On  Request to
start the washing procedure.</li>
					<li>tt: WashingProcedure |Off  Request
to stop the washing procedure.</li>
					<li>tt:IRLamp|On  Request to turn ON
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Off  Request to turn OFF
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Auto  Request to configure
an IR illuminator attached to the unit so that it automatically turns ON and OFF.</li>
				</ul>
				A device that indicates auxiliary service capability
shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SendAuxiliaryCommand*  tds__SendAuxiliaryCommand,
    // output parameters:
    struct _tds__SendAuxiliaryCommandResponse*tds__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SendAuxiliaryCommand(
    struct soap *soap,
    // input parameters:
    struct _tds__SendAuxiliaryCommand*  tds__SendAuxiliaryCommand,
    // output parameters:
    struct _tds__SendAuxiliaryCommandResponse*tds__SendAuxiliaryCommandResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tds  service method-style:	SendAuxiliaryCommand document
//gsoap tds  service method-encoding:	SendAuxiliaryCommand literal
//gsoap tds  service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand
//gsoap tds  service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse
int __tds__SendAuxiliaryCommand(
    struct _tds__SendAuxiliaryCommand*  tds__SendAuxiliaryCommand,	///< Input parameter
    struct _tds__SendAuxiliaryCommandResponse*tds__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCACertificates                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCACertificates" of service binding "DeviceBinding".
CA certificates will be loaded into a device and be used for the sake of following
two cases.
				The one is for the purpose of TLS client authentication
in TLS server function. The other one
				is for the purpose of Authentication Server authentication
in IEEE 802.1X function. This
				operation gets all CA certificates loaded into a
device. A device that supports either TLS client
				authentication or IEEE 802.1X shall support this
command and the returned certificates shall
				be encoded using ASN.1 [X.681], [X.682], [X.683]
DER [X.690] encoding rules.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCACertificates*     tds__GetCACertificates,
    // output parameters:
    struct _tds__GetCACertificatesResponse*tds__GetCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCACertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCACertificates*     tds__GetCACertificates,
    // output parameters:
    struct _tds__GetCACertificatesResponse*tds__GetCACertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCACertificates SOAP
//gsoap tds  service method-style:	GetCACertificates document
//gsoap tds  service method-encoding:	GetCACertificates literal
//gsoap tds  service method-input-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificates
//gsoap tds  service method-output-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse
int __tds__GetCACertificates(
    struct _tds__GetCACertificates*     tds__GetCACertificates,	///< Input parameter
    struct _tds__GetCACertificatesResponse*tds__GetCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificateWithPrivateKey                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificateWithPrivateKey" of service binding "DeviceBinding".
There might be some cases that a Certificate Authority or some other equivalent
creates a
				certificate without having PKCS#10 certificate signing
request. In such cases, the certificate
				will be bundled in conjunction with its private
key. This command will be used for such use
				case scenarios. The certificate ID in the request
is optionally set to the ID value the client
				wish to have. If the certificate ID is not specified
in the request, device can choose the ID
				accordingly.<br/>
				This operation imports a private/public key pair
into the device.
				The certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.<br/>
				A device that does not support onboard key pair
generation and support either TLS or IEEE
				802.1X using client certificate shall support this
command. A device that support onboard key
				pair generation MAY support this command. The security
policy of a device that supports this
				operation should make sure that the private key
is sufficiently protected.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    struct _tds__LoadCertificateWithPrivateKeyResponse*tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    // input parameters:
    struct _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    struct _tds__LoadCertificateWithPrivateKeyResponse*tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	LoadCertificateWithPrivateKey SOAP
//gsoap tds  service method-style:	LoadCertificateWithPrivateKey document
//gsoap tds  service method-encoding:	LoadCertificateWithPrivateKey literal
//gsoap tds  service method-input-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey
//gsoap tds  service method-output-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse
int __tds__LoadCertificateWithPrivateKey(
    struct _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,	///< Input parameter
    struct _tds__LoadCertificateWithPrivateKeyResponse*tds__LoadCertificateWithPrivateKeyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificateInformation                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificateInformation" of service binding "DeviceBinding".
This operation requests the information of a certificate specified by certificate
ID. The device
				should respond with its Issuer DN, Subject
DN, Key usage, "Extended key usage, Key
				Length, Version, Serial Number, Signature
Algorithm and Validity data as the
				information of the certificate, as long as the device
can retrieve such information from the
				specified certificate.<br/>
				A device that supports either TLS or IEEE 802.1X
should support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificateInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCertificateInformation* tds__GetCertificateInformation,
    // output parameters:
    struct _tds__GetCertificateInformationResponse*tds__GetCertificateInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificateInformation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCertificateInformation* tds__GetCertificateInformation,
    // output parameters:
    struct _tds__GetCertificateInformationResponse*tds__GetCertificateInformationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCertificateInformation SOAP
//gsoap tds  service method-style:	GetCertificateInformation document
//gsoap tds  service method-encoding:	GetCertificateInformation literal
//gsoap tds  service method-input-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation
//gsoap tds  service method-output-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse
int __tds__GetCertificateInformation(
    struct _tds__GetCertificateInformation* tds__GetCertificateInformation,	///< Input parameter
    struct _tds__GetCertificateInformationResponse*tds__GetCertificateInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCACertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCACertificates" of service binding "DeviceBinding".
This command is used when it is necessary to load trusted CA certificates or trusted
root
				certificates for the purpose of verification for
its counterpart i.e. client certificate verification in
				TLS function or server certificate verification
in IEEE 802.1X function.<br/>
				A device that support either TLS or IEEE 802.1X
shall support this command. As for the
				supported certificate format, either DER format
or PEM format is possible to be used. But a
				device that support this command shall support at
least DER format as supported format type.
				The device may sort the received certificate(s)
based on the public key and subject
				information in the certificate(s). Either all CA
certificates are loaded successfully or a fault
				message shall be returned without loading any CA
certificate.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__LoadCACertificates*    tds__LoadCACertificates,
    // output parameters:
    struct _tds__LoadCACertificatesResponse*tds__LoadCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCACertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__LoadCACertificates*    tds__LoadCACertificates,
    // output parameters:
    struct _tds__LoadCACertificatesResponse*tds__LoadCACertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	LoadCACertificates SOAP
//gsoap tds  service method-style:	LoadCACertificates document
//gsoap tds  service method-encoding:	LoadCACertificates literal
//gsoap tds  service method-input-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificates
//gsoap tds  service method-output-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse
int __tds__LoadCACertificates(
    struct _tds__LoadCACertificates*    tds__LoadCACertificates,	///< Input parameter
    struct _tds__LoadCACertificatesResponse*tds__LoadCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateDot1XConfiguration" of service binding "DeviceBinding".
This operation newly creates IEEE 802.1X configuration parameter set of the device.
The
				device shall support this command if it supports
IEEE 802.1X. If the device receives this
				request with already existing configuration token
(Dot1XConfigurationToken) specification, the
				device should respond with 'ter:ReferenceToken '
error to indicate there is some configuration
				conflict.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateDot1XConfiguration* tds__CreateDot1XConfiguration,
    // output parameters:
    struct _tds__CreateDot1XConfigurationResponse*tds__CreateDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateDot1XConfiguration* tds__CreateDot1XConfiguration,
    // output parameters:
    struct _tds__CreateDot1XConfigurationResponse*tds__CreateDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateDot1XConfiguration SOAP
//gsoap tds  service method-style:	CreateDot1XConfiguration document
//gsoap tds  service method-encoding:	CreateDot1XConfiguration literal
//gsoap tds  service method-input-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration
//gsoap tds  service method-output-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse
int __tds__CreateDot1XConfiguration(
    struct _tds__CreateDot1XConfiguration* tds__CreateDot1XConfiguration,	///< Input parameter
    struct _tds__CreateDot1XConfigurationResponse*tds__CreateDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDot1XConfiguration" of service binding "DeviceBinding".
While the CreateDot1XConfiguration command is trying to create a new configuration
				parameter set, this operation modifies existing
IEEE 802.1X configuration parameter set of
				the device. A device that support IEEE 802.1X shall
support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDot1XConfiguration* tds__SetDot1XConfiguration,
    // output parameters:
    struct _tds__SetDot1XConfigurationResponse*tds__SetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDot1XConfiguration* tds__SetDot1XConfiguration,
    // output parameters:
    struct _tds__SetDot1XConfigurationResponse*tds__SetDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDot1XConfiguration SOAP
//gsoap tds  service method-style:	SetDot1XConfiguration document
//gsoap tds  service method-encoding:	SetDot1XConfiguration literal
//gsoap tds  service method-input-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration
//gsoap tds  service method-output-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse
int __tds__SetDot1XConfiguration(
    struct _tds__SetDot1XConfiguration* tds__SetDot1XConfiguration,	///< Input parameter
    struct _tds__SetDot1XConfigurationResponse*tds__SetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfiguration" of service binding "DeviceBinding".
This operation gets one IEEE 802.1X configuration parameter set from the device
by
				specifying the configuration token (Dot1XConfigurationToken).<br/>
				A device that supports IEEE 802.1X shall support
this command.
				Regardless of whether the 802.1X method in the retrieved
configuration has a password or
				not, the device shall not include the Password element
in the response.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot1XConfiguration* tds__GetDot1XConfiguration,
    // output parameters:
    struct _tds__GetDot1XConfigurationResponse*tds__GetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot1XConfiguration* tds__GetDot1XConfiguration,
    // output parameters:
    struct _tds__GetDot1XConfigurationResponse*tds__GetDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot1XConfiguration SOAP
//gsoap tds  service method-style:	GetDot1XConfiguration document
//gsoap tds  service method-encoding:	GetDot1XConfiguration literal
//gsoap tds  service method-input-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration
//gsoap tds  service method-output-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse
int __tds__GetDot1XConfiguration(
    struct _tds__GetDot1XConfiguration* tds__GetDot1XConfiguration,	///< Input parameter
    struct _tds__GetDot1XConfigurationResponse*tds__GetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfigurations                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfigurations" of service binding "DeviceBinding".
This operation gets all the existing IEEE 802.1X configuration parameter sets from
the device.
				The device shall respond with all the IEEE 802.1X
configurations so that the client can get to
				know how many IEEE 802.1X configurations are existing
and how they are configured.<br/>
				A device that support IEEE 802.1X shall support
this command.<br/>
				Regardless of whether the 802.1X method in the retrieved
configuration has a password or
				not, the device shall not include the Password element
in the response.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot1XConfigurations* tds__GetDot1XConfigurations,
    // output parameters:
    struct _tds__GetDot1XConfigurationsResponse*tds__GetDot1XConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot1XConfigurations* tds__GetDot1XConfigurations,
    // output parameters:
    struct _tds__GetDot1XConfigurationsResponse*tds__GetDot1XConfigurationsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot1XConfigurations SOAP
//gsoap tds  service method-style:	GetDot1XConfigurations document
//gsoap tds  service method-encoding:	GetDot1XConfigurations literal
//gsoap tds  service method-input-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations
//gsoap tds  service method-output-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse
int __tds__GetDot1XConfigurations(
    struct _tds__GetDot1XConfigurations* tds__GetDot1XConfigurations,	///< Input parameter
    struct _tds__GetDot1XConfigurationsResponse*tds__GetDot1XConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteDot1XConfiguration" of service binding "DeviceBinding".
This operation deletes an IEEE 802.1X configuration parameter set from the device.
Which
				configuration should be deleted is specified by
the 'Dot1XConfigurationToken' in the request.
				A device that support IEEE 802.1X shall support
this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteDot1XConfiguration* tds__DeleteDot1XConfiguration,
    // output parameters:
    struct _tds__DeleteDot1XConfigurationResponse*tds__DeleteDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteDot1XConfiguration* tds__DeleteDot1XConfiguration,
    // output parameters:
    struct _tds__DeleteDot1XConfigurationResponse*tds__DeleteDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteDot1XConfiguration SOAP
//gsoap tds  service method-style:	DeleteDot1XConfiguration document
//gsoap tds  service method-encoding:	DeleteDot1XConfiguration literal
//gsoap tds  service method-input-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration
//gsoap tds  service method-output-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse
int __tds__DeleteDot1XConfiguration(
    struct _tds__DeleteDot1XConfiguration* tds__DeleteDot1XConfiguration,	///< Input parameter
    struct _tds__DeleteDot1XConfigurationResponse*tds__DeleteDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Capabilities                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Capabilities" of service binding "DeviceBinding".
This operation returns the IEEE802.11 capabilities. The device shall support
				this operation.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Capabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot11Capabilities*  tds__GetDot11Capabilities,
    // output parameters:
    struct _tds__GetDot11CapabilitiesResponse*tds__GetDot11CapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Capabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot11Capabilities*  tds__GetDot11Capabilities,
    // output parameters:
    struct _tds__GetDot11CapabilitiesResponse*tds__GetDot11CapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot11Capabilities SOAP
//gsoap tds  service method-style:	GetDot11Capabilities document
//gsoap tds  service method-encoding:	GetDot11Capabilities literal
//gsoap tds  service method-input-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities
//gsoap tds  service method-output-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse
int __tds__GetDot11Capabilities(
    struct _tds__GetDot11Capabilities*  tds__GetDot11Capabilities,	///< Input parameter
    struct _tds__GetDot11CapabilitiesResponse*tds__GetDot11CapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Status                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Status" of service binding "DeviceBinding".
This operation returns the status of a wireless network interface. The device shall
support this
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Status(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot11Status*        tds__GetDot11Status,
    // output parameters:
    struct _tds__GetDot11StatusResponse*tds__GetDot11StatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Status(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot11Status*        tds__GetDot11Status,
    // output parameters:
    struct _tds__GetDot11StatusResponse*tds__GetDot11StatusResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot11Status SOAP
//gsoap tds  service method-style:	GetDot11Status document
//gsoap tds  service method-encoding:	GetDot11Status literal
//gsoap tds  service method-input-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11Status
//gsoap tds  service method-output-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse
int __tds__GetDot11Status(
    struct _tds__GetDot11Status*        tds__GetDot11Status,	///< Input parameter
    struct _tds__GetDot11StatusResponse*tds__GetDot11StatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__ScanAvailableDot11Networks                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__ScanAvailableDot11Networks" of service binding "DeviceBinding".
This operation returns a lists of the wireless networks in range of the device.
A device should
				support this operation.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__ScanAvailableDot11Networks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__ScanAvailableDot11Networks* tds__ScanAvailableDot11Networks,
    // output parameters:
    struct _tds__ScanAvailableDot11NetworksResponse*tds__ScanAvailableDot11NetworksResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__ScanAvailableDot11Networks(
    struct soap *soap,
    // input parameters:
    struct _tds__ScanAvailableDot11Networks* tds__ScanAvailableDot11Networks,
    // output parameters:
    struct _tds__ScanAvailableDot11NetworksResponse*tds__ScanAvailableDot11NetworksResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	ScanAvailableDot11Networks SOAP
//gsoap tds  service method-style:	ScanAvailableDot11Networks document
//gsoap tds  service method-encoding:	ScanAvailableDot11Networks literal
//gsoap tds  service method-input-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks
//gsoap tds  service method-output-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse
int __tds__ScanAvailableDot11Networks(
    struct _tds__ScanAvailableDot11Networks* tds__ScanAvailableDot11Networks,	///< Input parameter
    struct _tds__ScanAvailableDot11NetworksResponse*tds__ScanAvailableDot11NetworksResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemUris                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemUris" of service binding "DeviceBinding".
This operation is used to retrieve URIs from which system information may be downloaded
				using HTTP. URIs may be returned for the following
system information:<br/>
				System Logs. Multiple system logs may be returned,
of different types. The exact format of
				the system logs is outside the scope of this specification.<br/>
				Support Information. This consists of arbitrary
device diagnostics information from a device.
				The exact format of the diagnostic information is
outside the scope of this specification.<br/>
				System Backup. The received file is a backup file
that can be used to restore the current
				device configuration at a later date. The exact
format of the backup configuration file is
				outside the scope of this specification.<br/>
				If the device allows retrieval of system logs, support
information or system backup data, it
				should make them available via HTTP GET. If it does,
it shall support the GetSystemUris
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemUris(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemUris*         tds__GetSystemUris,
    // output parameters:
    struct _tds__GetSystemUrisResponse *tds__GetSystemUrisResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemUris(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemUris*         tds__GetSystemUris,
    // output parameters:
    struct _tds__GetSystemUrisResponse *tds__GetSystemUrisResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemUris SOAP
//gsoap tds  service method-style:	GetSystemUris document
//gsoap tds  service method-encoding:	GetSystemUris literal
//gsoap tds  service method-input-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUris
//gsoap tds  service method-output-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse
int __tds__GetSystemUris(
    struct _tds__GetSystemUris*         tds__GetSystemUris,	///< Input parameter
    struct _tds__GetSystemUrisResponse *tds__GetSystemUrisResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartFirmwareUpgrade                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartFirmwareUpgrade" of service binding "DeviceBinding".
This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
				to the command includes an HTTP URL to which the
upgrade file may be uploaded. The
				actual upgrade takes place as soon as the HTTP POST
operation has completed. The device
				should support firmware upgrade through the StartFirmwareUpgrade
command. The exact
				format of the firmware data is outside the scope
of this specification.
				Firmware upgrade over HTTP may be achieved using
the following steps:<ol>
					<li>Client calls StartFirmwareUpgrade.</li>
					<li>Server responds with upload URI and
optional delay value.</li>
					<li>Client waits for delay duration if specified
by server.</li>
					<li>Client transmits the firmware image
to the upload URI using HTTP POST.</li>
					<li>Server reprograms itself using the uploaded
image, then reboots.</li>
				</ol>
				If the firmware upgrade fails because the upgrade
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
firmware upgrade fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartFirmwareUpgrade(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__StartFirmwareUpgrade*  tds__StartFirmwareUpgrade,
    // output parameters:
    struct _tds__StartFirmwareUpgradeResponse*tds__StartFirmwareUpgradeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartFirmwareUpgrade(
    struct soap *soap,
    // input parameters:
    struct _tds__StartFirmwareUpgrade*  tds__StartFirmwareUpgrade,
    // output parameters:
    struct _tds__StartFirmwareUpgradeResponse*tds__StartFirmwareUpgradeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	StartFirmwareUpgrade SOAP
//gsoap tds  service method-style:	StartFirmwareUpgrade document
//gsoap tds  service method-encoding:	StartFirmwareUpgrade literal
//gsoap tds  service method-input-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade
//gsoap tds  service method-output-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse
int __tds__StartFirmwareUpgrade(
    struct _tds__StartFirmwareUpgrade*  tds__StartFirmwareUpgrade,	///< Input parameter
    struct _tds__StartFirmwareUpgradeResponse*tds__StartFirmwareUpgradeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartSystemRestore                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartSystemRestore" of service binding "DeviceBinding".
This operation initiates a system restore from backed up configuration data using
the HTTP
				POST mechanism. The response to the command includes
an HTTP URL to which the backup
				file may be uploaded. The actual restore takes place
as soon as the HTTP POST operation
				has completed. Devices should support system restore
through the StartSystemRestore
				command. The exact format of the backup configuration
data is outside the scope of this
				specification.<br/>
				System restore over HTTP may be achieved using the
following steps:<ol>
					<li>Client calls StartSystemRestore.</li>
					<li>Server responds with upload URI.</li>
					<li>Client transmits the configuration data
to the upload URI using HTTP POST.</li>
					<li>Server applies the uploaded configuration,
then reboots if necessary.</li>
				</ol>
				If the system restore fails because the uploaded
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
system restore fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartSystemRestore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__StartSystemRestore*    tds__StartSystemRestore,
    // output parameters:
    struct _tds__StartSystemRestoreResponse*tds__StartSystemRestoreResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartSystemRestore(
    struct soap *soap,
    // input parameters:
    struct _tds__StartSystemRestore*    tds__StartSystemRestore,
    // output parameters:
    struct _tds__StartSystemRestoreResponse*tds__StartSystemRestoreResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	StartSystemRestore SOAP
//gsoap tds  service method-style:	StartSystemRestore document
//gsoap tds  service method-encoding:	StartSystemRestore literal
//gsoap tds  service method-input-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestore
//gsoap tds  service method-output-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse
int __tds__StartSystemRestore(
    struct _tds__StartSystemRestore*    tds__StartSystemRestore,	///< Input parameter
    struct _tds__StartSystemRestoreResponse*tds__StartSystemRestoreResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfigurations                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfigurations" of service binding "DeviceBinding".

			This operation lists all existing storage configurations
for the device. 
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetStorageConfigurations* tds__GetStorageConfigurations,
    // output parameters:
    struct _tds__GetStorageConfigurationsResponse*tds__GetStorageConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tds__GetStorageConfigurations* tds__GetStorageConfigurations,
    // output parameters:
    struct _tds__GetStorageConfigurationsResponse*tds__GetStorageConfigurationsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetStorageConfigurations SOAP
//gsoap tds  service method-style:	GetStorageConfigurations document
//gsoap tds  service method-encoding:	GetStorageConfigurations literal
//gsoap tds  service method-input-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations
//gsoap tds  service method-output-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse
int __tds__GetStorageConfigurations(
    struct _tds__GetStorageConfigurations* tds__GetStorageConfigurations,	///< Input parameter
    struct _tds__GetStorageConfigurationsResponse*tds__GetStorageConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateStorageConfiguration" of service binding "DeviceBinding".

			This operation creates a new storage configuration. 
			The configuration data shall be created in the device and
shall be persistent (remain after reboot).
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateStorageConfiguration* tds__CreateStorageConfiguration,
    // output parameters:
    struct _tds__CreateStorageConfigurationResponse*tds__CreateStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateStorageConfiguration* tds__CreateStorageConfiguration,
    // output parameters:
    struct _tds__CreateStorageConfigurationResponse*tds__CreateStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateStorageConfiguration SOAP
//gsoap tds  service method-style:	CreateStorageConfiguration document
//gsoap tds  service method-encoding:	CreateStorageConfiguration literal
//gsoap tds  service method-input-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration
//gsoap tds  service method-output-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse
int __tds__CreateStorageConfiguration(
    struct _tds__CreateStorageConfiguration* tds__CreateStorageConfiguration,	///< Input parameter
    struct _tds__CreateStorageConfigurationResponse*tds__CreateStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfiguration" of service binding "DeviceBinding".

			This operation retrieves the Storage configuration associated
with the given storage configuration token.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetStorageConfiguration* tds__GetStorageConfiguration,
    // output parameters:
    struct _tds__GetStorageConfigurationResponse*tds__GetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetStorageConfiguration* tds__GetStorageConfiguration,
    // output parameters:
    struct _tds__GetStorageConfigurationResponse*tds__GetStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetStorageConfiguration SOAP
//gsoap tds  service method-style:	GetStorageConfiguration document
//gsoap tds  service method-encoding:	GetStorageConfiguration literal
//gsoap tds  service method-input-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration
//gsoap tds  service method-output-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse
int __tds__GetStorageConfiguration(
    struct _tds__GetStorageConfiguration* tds__GetStorageConfiguration,	///< Input parameter
    struct _tds__GetStorageConfigurationResponse*tds__GetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetStorageConfiguration" of service binding "DeviceBinding".

			This operation modifies an existing Storage configuration.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetStorageConfiguration* tds__SetStorageConfiguration,
    // output parameters:
    struct _tds__SetStorageConfigurationResponse*tds__SetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetStorageConfiguration* tds__SetStorageConfiguration,
    // output parameters:
    struct _tds__SetStorageConfigurationResponse*tds__SetStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetStorageConfiguration SOAP
//gsoap tds  service method-style:	SetStorageConfiguration document
//gsoap tds  service method-encoding:	SetStorageConfiguration literal
//gsoap tds  service method-input-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration
//gsoap tds  service method-output-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse
int __tds__SetStorageConfiguration(
    struct _tds__SetStorageConfiguration* tds__SetStorageConfiguration,	///< Input parameter
    struct _tds__SetStorageConfigurationResponse*tds__SetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteStorageConfiguration" of service binding "DeviceBinding".

			This operation deletes the given storage configuration and
configuration change shall always be persistent.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteStorageConfiguration* tds__DeleteStorageConfiguration,
    // output parameters:
    struct _tds__DeleteStorageConfigurationResponse*tds__DeleteStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteStorageConfiguration* tds__DeleteStorageConfiguration,
    // output parameters:
    struct _tds__DeleteStorageConfigurationResponse*tds__DeleteStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteStorageConfiguration SOAP
//gsoap tds  service method-style:	DeleteStorageConfiguration document
//gsoap tds  service method-encoding:	DeleteStorageConfiguration literal
//gsoap tds  service method-input-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration
//gsoap tds  service method-output-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse
int __tds__DeleteStorageConfiguration(
    struct _tds__DeleteStorageConfiguration* tds__DeleteStorageConfiguration,	///< Input parameter
    struct _tds__DeleteStorageConfigurationResponse*tds__DeleteStorageConfigurationResponse	///< Output parameter
);

/**

@page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_policy_enablers Policy Enablers of Binding "DeviceBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ReceiverBinding                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__GetServiceCapabilities" of service binding "ReceiverBinding".
Returns the capabilities of the receiver service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__GetServiceCapabilities* trv__GetServiceCapabilities,
    // output parameters:
    struct _trv__GetServiceCapabilitiesResponse*trv__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _trv__GetServiceCapabilities* trv__GetServiceCapabilities,
    // output parameters:
    struct _trv__GetServiceCapabilitiesResponse*trv__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trv  service method-style:	GetServiceCapabilities document
//gsoap trv  service method-encoding:	GetServiceCapabilities literal
//gsoap trv  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities
//gsoap trv  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilitiesResponse
int __trv__GetServiceCapabilities(
    struct _trv__GetServiceCapabilities* trv__GetServiceCapabilities,	///< Input parameter
    struct _trv__GetServiceCapabilitiesResponse*trv__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetReceivers                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__GetReceivers" of service binding "ReceiverBinding".

				Lists all receivers currently present on a device.
This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceivers"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceivers"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiversResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__GetReceivers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__GetReceivers*          trv__GetReceivers,
    // output parameters:
    struct _trv__GetReceiversResponse  *trv__GetReceiversResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__GetReceivers(
    struct soap *soap,
    // input parameters:
    struct _trv__GetReceivers*          trv__GetReceivers,
    // output parameters:
    struct _trv__GetReceiversResponse  *trv__GetReceiversResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	GetReceivers SOAP
//gsoap trv  service method-style:	GetReceivers document
//gsoap trv  service method-encoding:	GetReceivers literal
//gsoap trv  service method-input-action:	GetReceivers http://www.onvif.org/ver10/receiver/wsdl/GetReceivers
//gsoap trv  service method-output-action:	GetReceivers http://www.onvif.org/ver10/receiver/wsdl/GetReceiversResponse
int __trv__GetReceivers(
    struct _trv__GetReceivers*          trv__GetReceivers,	///< Input parameter
    struct _trv__GetReceiversResponse  *trv__GetReceiversResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetReceiver                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__GetReceiver" of service binding "ReceiverBinding".

				Retrieves the details of a specific receiver. This
operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__GetReceiver(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__GetReceiver*           trv__GetReceiver,
    // output parameters:
    struct _trv__GetReceiverResponse   *trv__GetReceiverResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__GetReceiver(
    struct soap *soap,
    // input parameters:
    struct _trv__GetReceiver*           trv__GetReceiver,
    // output parameters:
    struct _trv__GetReceiverResponse   *trv__GetReceiverResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	GetReceiver SOAP
//gsoap trv  service method-style:	GetReceiver document
//gsoap trv  service method-encoding:	GetReceiver literal
//gsoap trv  service method-input-action:	GetReceiver http://www.onvif.org/ver10/receiver/wsdl/GetReceiver
//gsoap trv  service method-output-action:	GetReceiver http://www.onvif.org/ver10/receiver/wsdl/GetReceiverResponse
int __trv__GetReceiver(
    struct _trv__GetReceiver*           trv__GetReceiver,	///< Input parameter
    struct _trv__GetReceiverResponse   *trv__GetReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__CreateReceiver                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__CreateReceiver" of service binding "ReceiverBinding".

				Creates a new receiver. This operation is mandatory,
although the service may
				raise a fault if the receiver cannot be created.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/CreateReceiverResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__CreateReceiver(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__CreateReceiver*        trv__CreateReceiver,
    // output parameters:
    struct _trv__CreateReceiverResponse*trv__CreateReceiverResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__CreateReceiver(
    struct soap *soap,
    // input parameters:
    struct _trv__CreateReceiver*        trv__CreateReceiver,
    // output parameters:
    struct _trv__CreateReceiverResponse*trv__CreateReceiverResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	CreateReceiver SOAP
//gsoap trv  service method-style:	CreateReceiver document
//gsoap trv  service method-encoding:	CreateReceiver literal
//gsoap trv  service method-input-action:	CreateReceiver http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver
//gsoap trv  service method-output-action:	CreateReceiver http://www.onvif.org/ver10/receiver/wsdl/CreateReceiverResponse
int __trv__CreateReceiver(
    struct _trv__CreateReceiver*        trv__CreateReceiver,	///< Input parameter
    struct _trv__CreateReceiverResponse*trv__CreateReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__DeleteReceiver                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__DeleteReceiver" of service binding "ReceiverBinding".

				Deletes an existing receiver. A receiver may be
deleted only if it is not
				currently in use; otherwise a fault shall be raised.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiverResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__DeleteReceiver(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__DeleteReceiver*        trv__DeleteReceiver,
    // output parameters:
    struct _trv__DeleteReceiverResponse*trv__DeleteReceiverResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__DeleteReceiver(
    struct soap *soap,
    // input parameters:
    struct _trv__DeleteReceiver*        trv__DeleteReceiver,
    // output parameters:
    struct _trv__DeleteReceiverResponse*trv__DeleteReceiverResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	DeleteReceiver SOAP
//gsoap trv  service method-style:	DeleteReceiver document
//gsoap trv  service method-encoding:	DeleteReceiver literal
//gsoap trv  service method-input-action:	DeleteReceiver http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver
//gsoap trv  service method-output-action:	DeleteReceiver http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiverResponse
int __trv__DeleteReceiver(
    struct _trv__DeleteReceiver*        trv__DeleteReceiver,	///< Input parameter
    struct _trv__DeleteReceiverResponse*trv__DeleteReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__ConfigureReceiver                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__ConfigureReceiver" of service binding "ReceiverBinding".

				Configures an existing receiver. This operation
is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiverResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__ConfigureReceiver(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__ConfigureReceiver*     trv__ConfigureReceiver,
    // output parameters:
    struct _trv__ConfigureReceiverResponse*trv__ConfigureReceiverResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__ConfigureReceiver(
    struct soap *soap,
    // input parameters:
    struct _trv__ConfigureReceiver*     trv__ConfigureReceiver,
    // output parameters:
    struct _trv__ConfigureReceiverResponse*trv__ConfigureReceiverResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	ConfigureReceiver SOAP
//gsoap trv  service method-style:	ConfigureReceiver document
//gsoap trv  service method-encoding:	ConfigureReceiver literal
//gsoap trv  service method-input-action:	ConfigureReceiver http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver
//gsoap trv  service method-output-action:	ConfigureReceiver http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiverResponse
int __trv__ConfigureReceiver(
    struct _trv__ConfigureReceiver*     trv__ConfigureReceiver,	///< Input parameter
    struct _trv__ConfigureReceiverResponse*trv__ConfigureReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__SetReceiverMode                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__SetReceiverMode" of service binding "ReceiverBinding".

				Sets the mode of the receiver without affecting
the rest of its configuration.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/SetReceiverModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__SetReceiverMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__SetReceiverMode*       trv__SetReceiverMode,
    // output parameters:
    struct _trv__SetReceiverModeResponse*trv__SetReceiverModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__SetReceiverMode(
    struct soap *soap,
    // input parameters:
    struct _trv__SetReceiverMode*       trv__SetReceiverMode,
    // output parameters:
    struct _trv__SetReceiverModeResponse*trv__SetReceiverModeResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	SetReceiverMode SOAP
//gsoap trv  service method-style:	SetReceiverMode document
//gsoap trv  service method-encoding:	SetReceiverMode literal
//gsoap trv  service method-input-action:	SetReceiverMode http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode
//gsoap trv  service method-output-action:	SetReceiverMode http://www.onvif.org/ver10/receiver/wsdl/SetReceiverModeResponse
int __trv__SetReceiverMode(
    struct _trv__SetReceiverMode*       trv__SetReceiverMode,	///< Input parameter
    struct _trv__SetReceiverModeResponse*trv__SetReceiverModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetReceiverState                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__GetReceiverState" of service binding "ReceiverBinding".

				Determines whether the receiver is currently disconnected,
connected or
				attempting to connect.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__GetReceiverState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trv__GetReceiverState*      trv__GetReceiverState,
    // output parameters:
    struct _trv__GetReceiverStateResponse*trv__GetReceiverStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__GetReceiverState(
    struct soap *soap,
    // input parameters:
    struct _trv__GetReceiverState*      trv__GetReceiverState,
    // output parameters:
    struct _trv__GetReceiverStateResponse*trv__GetReceiverStateResponse
  );
@endcode

*/

//gsoap trv  service method-protocol:	GetReceiverState SOAP
//gsoap trv  service method-style:	GetReceiverState document
//gsoap trv  service method-encoding:	GetReceiverState literal
//gsoap trv  service method-input-action:	GetReceiverState http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState
//gsoap trv  service method-output-action:	GetReceiverState http://www.onvif.org/ver10/receiver/wsdl/GetReceiverStateResponse
int __trv__GetReceiverState(
    struct _trv__GetReceiverState*      trv__GetReceiverState,	///< Input parameter
    struct _trv__GetReceiverStateResponse*trv__GetReceiverStateResponse	///< Output parameter
);

/**

@page ReceiverBinding Binding "ReceiverBinding"

@section ReceiverBinding_policy_enablers Policy Enablers of Binding "ReceiverBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section tt Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <VideoSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <AudioSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate)

  - <PTZConfiguration> (use wsdl2h option -g to auto-generate)

  - <MetadataConfiguration> (use wsdl2h option -g to auto-generate)

  - <AudioOutputConfiguration> (use wsdl2h option -g to auto-generate)

  - <AudioDecoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <Message> @ref _tt__Message
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__Message(struct soap*, struct _tt__Message*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__Message(struct soap*, struct _tt__Message*);
    @endcode

  - <Polygon> (use wsdl2h option -g to auto-generate)

  - <Polyline> (use wsdl2h option -g to auto-generate)

  - <MetadataStream> (use wsdl2h option -g to auto-generate)

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <TopicExpression> (use wsdl2h option -g to auto-generate)

  - <FixedTopicSet> (use wsdl2h option -g to auto-generate)

  - <TopicExpressionDialect> (use wsdl2h option -g to auto-generate)

  - <NotificationProducerRP> @ref _wsnt__NotificationProducerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    @endcode

  - <ConsumerReference> (use wsdl2h option -g to auto-generate)

  - <Filter> (use wsdl2h option -g to auto-generate)

  - <SubscriptionPolicy> (use wsdl2h option -g to auto-generate)

  - <CreationTime> (use wsdl2h option -g to auto-generate)

  - <SubscriptionManagerRP> @ref _wsnt__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    @endcode

  - <SubscriptionReference> (use wsdl2h option -g to auto-generate)

  - <Topic> (use wsdl2h option -g to auto-generate)

  - <ProducerReference> (use wsdl2h option -g to auto-generate)

  - <NotificationMessage> (use wsdl2h option -g to auto-generate)

  - <Notify> @ref _wsnt__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    @endcode

  - <CurrentTime> (use wsdl2h option -g to auto-generate)

  - <TerminationTime> (use wsdl2h option -g to auto-generate)

  - <ProducerProperties> (use wsdl2h option -g to auto-generate)

  - <MessageContent> (use wsdl2h option -g to auto-generate)

  - <UseRaw> @ref _wsnt__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    @endcode

  - <Subscribe> @ref _wsnt__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    @endcode

  - <SubscribeResponse> @ref _wsnt__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    @endcode

  - <GetCurrentMessage> @ref _wsnt__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    @endcode

  - <GetCurrentMessageResponse> @ref _wsnt__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    @endcode

  - <SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate)

  - <InvalidFilterFault> (use wsdl2h option -g to auto-generate)

  - <TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate)

  - <InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate)

  - <TopicNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate)

  - <InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate)

  - <InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate)

  - <UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate)

  - <GetMessages> @ref _wsnt__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    @endcode

  - <GetMessagesResponse> @ref _wsnt__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    @endcode

  - <DestroyPullPoint> @ref _wsnt__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    @endcode

  - <DestroyPullPointResponse> @ref _wsnt__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    @endcode

  - <UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate)

  - <UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate)

  - <CreatePullPoint> @ref _wsnt__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    @endcode

  - <CreatePullPointResponse> @ref _wsnt__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    @endcode

  - <UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate)

  - <Renew> @ref _wsnt__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    @endcode

  - <RenewResponse> @ref _wsnt__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    @endcode

  - <UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <Unsubscribe> @ref _wsnt__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    @endcode

  - <UnsubscribeResponse> @ref _wsnt__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    @endcode

  - <UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate)

  - <PauseSubscription> @ref _wsnt__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    @endcode

  - <PauseSubscriptionResponse> @ref _wsnt__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    @endcode

  - <ResumeSubscription> @ref _wsnt__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    @endcode

  - <ResumeSubscriptionResponse> @ref _wsnt__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    @endcode

  - <PauseFailedFault> (use wsdl2h option -g to auto-generate)

  - <ResumeFailedFault> (use wsdl2h option -g to auto-generate)

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <BaseFault> (use wsdl2h option -g to auto-generate)

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <TopicNamespace> (use wsdl2h option -g to auto-generate)

  - <TopicSet> (use wsdl2h option -g to auto-generate)

@section trv Top-level root elements of schema "http://www.onvif.org/ver10/receiver/wsdl"

  - <GetServiceCapabilities> @ref _trv__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetServiceCapabilities(struct soap*, struct _trv__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetServiceCapabilities(struct soap*, struct _trv__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _trv__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetServiceCapabilitiesResponse(struct soap*, struct _trv__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetServiceCapabilitiesResponse(struct soap*, struct _trv__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetReceivers> @ref _trv__GetReceivers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceivers(struct soap*, struct _trv__GetReceivers*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceivers(struct soap*, struct _trv__GetReceivers*);
    @endcode

  - <GetReceiversResponse> @ref _trv__GetReceiversResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiversResponse(struct soap*, struct _trv__GetReceiversResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiversResponse(struct soap*, struct _trv__GetReceiversResponse*);
    @endcode

  - <GetReceiver> @ref _trv__GetReceiver
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiver(struct soap*, struct _trv__GetReceiver*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiver(struct soap*, struct _trv__GetReceiver*);
    @endcode

  - <GetReceiverResponse> @ref _trv__GetReceiverResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiverResponse(struct soap*, struct _trv__GetReceiverResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiverResponse(struct soap*, struct _trv__GetReceiverResponse*);
    @endcode

  - <CreateReceiver> @ref _trv__CreateReceiver
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__CreateReceiver(struct soap*, struct _trv__CreateReceiver*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__CreateReceiver(struct soap*, struct _trv__CreateReceiver*);
    @endcode

  - <CreateReceiverResponse> @ref _trv__CreateReceiverResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__CreateReceiverResponse(struct soap*, struct _trv__CreateReceiverResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__CreateReceiverResponse(struct soap*, struct _trv__CreateReceiverResponse*);
    @endcode

  - <DeleteReceiver> @ref _trv__DeleteReceiver
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__DeleteReceiver(struct soap*, struct _trv__DeleteReceiver*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__DeleteReceiver(struct soap*, struct _trv__DeleteReceiver*);
    @endcode

  - <DeleteReceiverResponse> @ref _trv__DeleteReceiverResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__DeleteReceiverResponse(struct soap*, struct _trv__DeleteReceiverResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__DeleteReceiverResponse(struct soap*, struct _trv__DeleteReceiverResponse*);
    @endcode

  - <ConfigureReceiver> @ref _trv__ConfigureReceiver
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__ConfigureReceiver(struct soap*, struct _trv__ConfigureReceiver*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__ConfigureReceiver(struct soap*, struct _trv__ConfigureReceiver*);
    @endcode

  - <ConfigureReceiverResponse> @ref _trv__ConfigureReceiverResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__ConfigureReceiverResponse(struct soap*, struct _trv__ConfigureReceiverResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__ConfigureReceiverResponse(struct soap*, struct _trv__ConfigureReceiverResponse*);
    @endcode

  - <SetReceiverMode> @ref _trv__SetReceiverMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__SetReceiverMode(struct soap*, struct _trv__SetReceiverMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__SetReceiverMode(struct soap*, struct _trv__SetReceiverMode*);
    @endcode

  - <SetReceiverModeResponse> @ref _trv__SetReceiverModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__SetReceiverModeResponse(struct soap*, struct _trv__SetReceiverModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__SetReceiverModeResponse(struct soap*, struct _trv__SetReceiverModeResponse*);
    @endcode

  - <GetReceiverState> @ref _trv__GetReceiverState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiverState(struct soap*, struct _trv__GetReceiverState*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiverState(struct soap*, struct _trv__GetReceiverState*);
    @endcode

  - <GetReceiverStateResponse> @ref _trv__GetReceiverStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiverStateResponse(struct soap*, struct _trv__GetReceiverStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiverStateResponse(struct soap*, struct _trv__GetReceiverStateResponse*);
    @endcode

@section tds Top-level root elements of schema "http://www.onvif.org/ver10/device/wsdl"

  - <GetServices> @ref _tds__GetServices
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServices(struct soap*, struct _tds__GetServices*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServices(struct soap*, struct _tds__GetServices*);
    @endcode

  - <GetServicesResponse> @ref _tds__GetServicesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse*);
    @endcode

  - <GetServiceCapabilities> @ref _tds__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _tds__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> (use wsdl2h option -g to auto-generate)

  - <GetDeviceInformation> @ref _tds__GetDeviceInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation*);
    @endcode

  - <GetDeviceInformationResponse> @ref _tds__GetDeviceInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse*);
    @endcode

  - <SetSystemDateAndTime> @ref _tds__SetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTime(struct soap*, struct _tds__SetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTime(struct soap*, struct _tds__SetSystemDateAndTime*);
    @endcode

  - <SetSystemDateAndTimeResponse> @ref _tds__SetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTimeResponse(struct soap*, struct _tds__SetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTimeResponse(struct soap*, struct _tds__SetSystemDateAndTimeResponse*);
    @endcode

  - <GetSystemDateAndTime> @ref _tds__GetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTime(struct soap*, struct _tds__GetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTime(struct soap*, struct _tds__GetSystemDateAndTime*);
    @endcode

  - <GetSystemDateAndTimeResponse> @ref _tds__GetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTimeResponse(struct soap*, struct _tds__GetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTimeResponse(struct soap*, struct _tds__GetSystemDateAndTimeResponse*);
    @endcode

  - <SetSystemFactoryDefault> @ref _tds__SetSystemFactoryDefault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefault(struct soap*, struct _tds__SetSystemFactoryDefault*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefault(struct soap*, struct _tds__SetSystemFactoryDefault*);
    @endcode

  - <SetSystemFactoryDefaultResponse> @ref _tds__SetSystemFactoryDefaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefaultResponse(struct soap*, struct _tds__SetSystemFactoryDefaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefaultResponse(struct soap*, struct _tds__SetSystemFactoryDefaultResponse*);
    @endcode

  - <UpgradeSystemFirmware> @ref _tds__UpgradeSystemFirmware
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmware(struct soap*, struct _tds__UpgradeSystemFirmware*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmware(struct soap*, struct _tds__UpgradeSystemFirmware*);
    @endcode

  - <UpgradeSystemFirmwareResponse> @ref _tds__UpgradeSystemFirmwareResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmwareResponse(struct soap*, struct _tds__UpgradeSystemFirmwareResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmwareResponse(struct soap*, struct _tds__UpgradeSystemFirmwareResponse*);
    @endcode

  - <SystemReboot> @ref _tds__SystemReboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemReboot(struct soap*, struct _tds__SystemReboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemReboot(struct soap*, struct _tds__SystemReboot*);
    @endcode

  - <SystemRebootResponse> @ref _tds__SystemRebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse*);
    @endcode

  - <RestoreSystem> @ref _tds__RestoreSystem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystem(struct soap*, struct _tds__RestoreSystem*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystem(struct soap*, struct _tds__RestoreSystem*);
    @endcode

  - <RestoreSystemResponse> @ref _tds__RestoreSystemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystemResponse(struct soap*, struct _tds__RestoreSystemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystemResponse(struct soap*, struct _tds__RestoreSystemResponse*);
    @endcode

  - <GetSystemBackup> @ref _tds__GetSystemBackup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackup(struct soap*, struct _tds__GetSystemBackup*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackup(struct soap*, struct _tds__GetSystemBackup*);
    @endcode

  - <GetSystemBackupResponse> @ref _tds__GetSystemBackupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackupResponse(struct soap*, struct _tds__GetSystemBackupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackupResponse(struct soap*, struct _tds__GetSystemBackupResponse*);
    @endcode

  - <GetSystemSupportInformation> @ref _tds__GetSystemSupportInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformation(struct soap*, struct _tds__GetSystemSupportInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformation(struct soap*, struct _tds__GetSystemSupportInformation*);
    @endcode

  - <GetSystemSupportInformationResponse> @ref _tds__GetSystemSupportInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformationResponse(struct soap*, struct _tds__GetSystemSupportInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformationResponse(struct soap*, struct _tds__GetSystemSupportInformationResponse*);
    @endcode

  - <GetSystemLog> @ref _tds__GetSystemLog
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLog(struct soap*, struct _tds__GetSystemLog*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLog(struct soap*, struct _tds__GetSystemLog*);
    @endcode

  - <GetSystemLogResponse> @ref _tds__GetSystemLogResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLogResponse(struct soap*, struct _tds__GetSystemLogResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLogResponse(struct soap*, struct _tds__GetSystemLogResponse*);
    @endcode

  - <GetScopes> @ref _tds__GetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopes(struct soap*, struct _tds__GetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopes(struct soap*, struct _tds__GetScopes*);
    @endcode

  - <GetScopesResponse> @ref _tds__GetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopesResponse(struct soap*, struct _tds__GetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopesResponse(struct soap*, struct _tds__GetScopesResponse*);
    @endcode

  - <SetScopes> @ref _tds__SetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopes(struct soap*, struct _tds__SetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopes(struct soap*, struct _tds__SetScopes*);
    @endcode

  - <SetScopesResponse> @ref _tds__SetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopesResponse(struct soap*, struct _tds__SetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopesResponse(struct soap*, struct _tds__SetScopesResponse*);
    @endcode

  - <AddScopes> @ref _tds__AddScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopes(struct soap*, struct _tds__AddScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopes(struct soap*, struct _tds__AddScopes*);
    @endcode

  - <AddScopesResponse> @ref _tds__AddScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopesResponse(struct soap*, struct _tds__AddScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopesResponse(struct soap*, struct _tds__AddScopesResponse*);
    @endcode

  - <RemoveScopes> @ref _tds__RemoveScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopes(struct soap*, struct _tds__RemoveScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopes(struct soap*, struct _tds__RemoveScopes*);
    @endcode

  - <RemoveScopesResponse> @ref _tds__RemoveScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopesResponse(struct soap*, struct _tds__RemoveScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopesResponse(struct soap*, struct _tds__RemoveScopesResponse*);
    @endcode

  - <GetDiscoveryMode> @ref _tds__GetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryMode(struct soap*, struct _tds__GetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryMode(struct soap*, struct _tds__GetDiscoveryMode*);
    @endcode

  - <GetDiscoveryModeResponse> @ref _tds__GetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryModeResponse(struct soap*, struct _tds__GetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryModeResponse(struct soap*, struct _tds__GetDiscoveryModeResponse*);
    @endcode

  - <SetDiscoveryMode> @ref _tds__SetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryMode(struct soap*, struct _tds__SetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryMode(struct soap*, struct _tds__SetDiscoveryMode*);
    @endcode

  - <SetDiscoveryModeResponse> @ref _tds__SetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryModeResponse(struct soap*, struct _tds__SetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryModeResponse(struct soap*, struct _tds__SetDiscoveryModeResponse*);
    @endcode

  - <GetRemoteDiscoveryMode> @ref _tds__GetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryMode(struct soap*, struct _tds__GetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryMode(struct soap*, struct _tds__GetRemoteDiscoveryMode*);
    @endcode

  - <GetRemoteDiscoveryModeResponse> @ref _tds__GetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryModeResponse(struct soap*, struct _tds__GetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryModeResponse(struct soap*, struct _tds__GetRemoteDiscoveryModeResponse*);
    @endcode

  - <SetRemoteDiscoveryMode> @ref _tds__SetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryMode(struct soap*, struct _tds__SetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryMode(struct soap*, struct _tds__SetRemoteDiscoveryMode*);
    @endcode

  - <SetRemoteDiscoveryModeResponse> @ref _tds__SetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryModeResponse(struct soap*, struct _tds__SetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryModeResponse(struct soap*, struct _tds__SetRemoteDiscoveryModeResponse*);
    @endcode

  - <GetDPAddresses> @ref _tds__GetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddresses(struct soap*, struct _tds__GetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddresses(struct soap*, struct _tds__GetDPAddresses*);
    @endcode

  - <GetDPAddressesResponse> @ref _tds__GetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddressesResponse(struct soap*, struct _tds__GetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddressesResponse(struct soap*, struct _tds__GetDPAddressesResponse*);
    @endcode

  - <SetDPAddresses> @ref _tds__SetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddresses(struct soap*, struct _tds__SetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddresses(struct soap*, struct _tds__SetDPAddresses*);
    @endcode

  - <SetDPAddressesResponse> @ref _tds__SetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddressesResponse(struct soap*, struct _tds__SetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddressesResponse(struct soap*, struct _tds__SetDPAddressesResponse*);
    @endcode

  - <GetEndpointReference> @ref _tds__GetEndpointReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReference(struct soap*, struct _tds__GetEndpointReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReference(struct soap*, struct _tds__GetEndpointReference*);
    @endcode

  - <GetEndpointReferenceResponse> @ref _tds__GetEndpointReferenceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReferenceResponse(struct soap*, struct _tds__GetEndpointReferenceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReferenceResponse(struct soap*, struct _tds__GetEndpointReferenceResponse*);
    @endcode

  - <GetRemoteUser> @ref _tds__GetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUser(struct soap*, struct _tds__GetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUser(struct soap*, struct _tds__GetRemoteUser*);
    @endcode

  - <GetRemoteUserResponse> @ref _tds__GetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUserResponse(struct soap*, struct _tds__GetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUserResponse(struct soap*, struct _tds__GetRemoteUserResponse*);
    @endcode

  - <SetRemoteUser> @ref _tds__SetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUser(struct soap*, struct _tds__SetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUser(struct soap*, struct _tds__SetRemoteUser*);
    @endcode

  - <SetRemoteUserResponse> @ref _tds__SetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUserResponse(struct soap*, struct _tds__SetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUserResponse(struct soap*, struct _tds__SetRemoteUserResponse*);
    @endcode

  - <GetUsers> @ref _tds__GetUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsers(struct soap*, struct _tds__GetUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsers(struct soap*, struct _tds__GetUsers*);
    @endcode

  - <GetUsersResponse> @ref _tds__GetUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsersResponse(struct soap*, struct _tds__GetUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsersResponse(struct soap*, struct _tds__GetUsersResponse*);
    @endcode

  - <CreateUsers> @ref _tds__CreateUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsers(struct soap*, struct _tds__CreateUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsers(struct soap*, struct _tds__CreateUsers*);
    @endcode

  - <CreateUsersResponse> @ref _tds__CreateUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsersResponse(struct soap*, struct _tds__CreateUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsersResponse(struct soap*, struct _tds__CreateUsersResponse*);
    @endcode

  - <DeleteUsers> @ref _tds__DeleteUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsers(struct soap*, struct _tds__DeleteUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsers(struct soap*, struct _tds__DeleteUsers*);
    @endcode

  - <DeleteUsersResponse> @ref _tds__DeleteUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsersResponse(struct soap*, struct _tds__DeleteUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsersResponse(struct soap*, struct _tds__DeleteUsersResponse*);
    @endcode

  - <SetUser> @ref _tds__SetUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUser(struct soap*, struct _tds__SetUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUser(struct soap*, struct _tds__SetUser*);
    @endcode

  - <SetUserResponse> @ref _tds__SetUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUserResponse(struct soap*, struct _tds__SetUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUserResponse(struct soap*, struct _tds__SetUserResponse*);
    @endcode

  - <GetWsdlUrl> @ref _tds__GetWsdlUrl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrl(struct soap*, struct _tds__GetWsdlUrl*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrl(struct soap*, struct _tds__GetWsdlUrl*);
    @endcode

  - <GetWsdlUrlResponse> @ref _tds__GetWsdlUrlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrlResponse(struct soap*, struct _tds__GetWsdlUrlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrlResponse(struct soap*, struct _tds__GetWsdlUrlResponse*);
    @endcode

  - <GetCapabilities> @ref _tds__GetCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities*);
    @endcode

  - <GetCapabilitiesResponse> @ref _tds__GetCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse*);
    @endcode

  - <GetHostname> @ref _tds__GetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostname(struct soap*, struct _tds__GetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostname(struct soap*, struct _tds__GetHostname*);
    @endcode

  - <GetHostnameResponse> @ref _tds__GetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostnameResponse(struct soap*, struct _tds__GetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostnameResponse(struct soap*, struct _tds__GetHostnameResponse*);
    @endcode

  - <SetHostname> @ref _tds__SetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostname(struct soap*, struct _tds__SetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostname(struct soap*, struct _tds__SetHostname*);
    @endcode

  - <SetHostnameResponse> @ref _tds__SetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameResponse(struct soap*, struct _tds__SetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameResponse(struct soap*, struct _tds__SetHostnameResponse*);
    @endcode

  - <SetHostnameFromDHCP> @ref _tds__SetHostnameFromDHCP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCP(struct soap*, struct _tds__SetHostnameFromDHCP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCP(struct soap*, struct _tds__SetHostnameFromDHCP*);
    @endcode

  - <SetHostnameFromDHCPResponse> @ref _tds__SetHostnameFromDHCPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCPResponse(struct soap*, struct _tds__SetHostnameFromDHCPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCPResponse(struct soap*, struct _tds__SetHostnameFromDHCPResponse*);
    @endcode

  - <GetDNS> @ref _tds__GetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNS(struct soap*, struct _tds__GetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNS(struct soap*, struct _tds__GetDNS*);
    @endcode

  - <GetDNSResponse> @ref _tds__GetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNSResponse(struct soap*, struct _tds__GetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNSResponse(struct soap*, struct _tds__GetDNSResponse*);
    @endcode

  - <SetDNS> @ref _tds__SetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNS(struct soap*, struct _tds__SetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNS(struct soap*, struct _tds__SetDNS*);
    @endcode

  - <SetDNSResponse> @ref _tds__SetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNSResponse(struct soap*, struct _tds__SetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNSResponse(struct soap*, struct _tds__SetDNSResponse*);
    @endcode

  - <GetNTP> @ref _tds__GetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTP(struct soap*, struct _tds__GetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTP(struct soap*, struct _tds__GetNTP*);
    @endcode

  - <GetNTPResponse> @ref _tds__GetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTPResponse(struct soap*, struct _tds__GetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTPResponse(struct soap*, struct _tds__GetNTPResponse*);
    @endcode

  - <SetNTP> @ref _tds__SetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTP(struct soap*, struct _tds__SetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTP(struct soap*, struct _tds__SetNTP*);
    @endcode

  - <SetNTPResponse> @ref _tds__SetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTPResponse(struct soap*, struct _tds__SetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTPResponse(struct soap*, struct _tds__SetNTPResponse*);
    @endcode

  - <GetDynamicDNS> @ref _tds__GetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNS(struct soap*, struct _tds__GetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNS(struct soap*, struct _tds__GetDynamicDNS*);
    @endcode

  - <GetDynamicDNSResponse> @ref _tds__GetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNSResponse(struct soap*, struct _tds__GetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNSResponse(struct soap*, struct _tds__GetDynamicDNSResponse*);
    @endcode

  - <SetDynamicDNS> @ref _tds__SetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNS(struct soap*, struct _tds__SetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNS(struct soap*, struct _tds__SetDynamicDNS*);
    @endcode

  - <SetDynamicDNSResponse> @ref _tds__SetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNSResponse(struct soap*, struct _tds__SetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNSResponse(struct soap*, struct _tds__SetDynamicDNSResponse*);
    @endcode

  - <GetNetworkInterfaces> @ref _tds__GetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfaces(struct soap*, struct _tds__GetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfaces(struct soap*, struct _tds__GetNetworkInterfaces*);
    @endcode

  - <GetNetworkInterfacesResponse> @ref _tds__GetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfacesResponse(struct soap*, struct _tds__GetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfacesResponse(struct soap*, struct _tds__GetNetworkInterfacesResponse*);
    @endcode

  - <SetNetworkInterfaces> @ref _tds__SetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfaces(struct soap*, struct _tds__SetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfaces(struct soap*, struct _tds__SetNetworkInterfaces*);
    @endcode

  - <SetNetworkInterfacesResponse> @ref _tds__SetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfacesResponse(struct soap*, struct _tds__SetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfacesResponse(struct soap*, struct _tds__SetNetworkInterfacesResponse*);
    @endcode

  - <GetNetworkProtocols> @ref _tds__GetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocols(struct soap*, struct _tds__GetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocols(struct soap*, struct _tds__GetNetworkProtocols*);
    @endcode

  - <GetNetworkProtocolsResponse> @ref _tds__GetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocolsResponse(struct soap*, struct _tds__GetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocolsResponse(struct soap*, struct _tds__GetNetworkProtocolsResponse*);
    @endcode

  - <SetNetworkProtocols> @ref _tds__SetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocols(struct soap*, struct _tds__SetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocols(struct soap*, struct _tds__SetNetworkProtocols*);
    @endcode

  - <SetNetworkProtocolsResponse> @ref _tds__SetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocolsResponse(struct soap*, struct _tds__SetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocolsResponse(struct soap*, struct _tds__SetNetworkProtocolsResponse*);
    @endcode

  - <GetNetworkDefaultGateway> @ref _tds__GetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGateway(struct soap*, struct _tds__GetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGateway(struct soap*, struct _tds__GetNetworkDefaultGateway*);
    @endcode

  - <GetNetworkDefaultGatewayResponse> @ref _tds__GetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGatewayResponse(struct soap*, struct _tds__GetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGatewayResponse(struct soap*, struct _tds__GetNetworkDefaultGatewayResponse*);
    @endcode

  - <SetNetworkDefaultGateway> @ref _tds__SetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGateway(struct soap*, struct _tds__SetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGateway(struct soap*, struct _tds__SetNetworkDefaultGateway*);
    @endcode

  - <SetNetworkDefaultGatewayResponse> @ref _tds__SetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGatewayResponse(struct soap*, struct _tds__SetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGatewayResponse(struct soap*, struct _tds__SetNetworkDefaultGatewayResponse*);
    @endcode

  - <GetZeroConfiguration> @ref _tds__GetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfiguration(struct soap*, struct _tds__GetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfiguration(struct soap*, struct _tds__GetZeroConfiguration*);
    @endcode

  - <GetZeroConfigurationResponse> @ref _tds__GetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfigurationResponse(struct soap*, struct _tds__GetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfigurationResponse(struct soap*, struct _tds__GetZeroConfigurationResponse*);
    @endcode

  - <SetZeroConfiguration> @ref _tds__SetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfiguration(struct soap*, struct _tds__SetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfiguration(struct soap*, struct _tds__SetZeroConfiguration*);
    @endcode

  - <SetZeroConfigurationResponse> @ref _tds__SetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfigurationResponse(struct soap*, struct _tds__SetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfigurationResponse(struct soap*, struct _tds__SetZeroConfigurationResponse*);
    @endcode

  - <GetIPAddressFilter> @ref _tds__GetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilter(struct soap*, struct _tds__GetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilter(struct soap*, struct _tds__GetIPAddressFilter*);
    @endcode

  - <GetIPAddressFilterResponse> @ref _tds__GetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilterResponse(struct soap*, struct _tds__GetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilterResponse(struct soap*, struct _tds__GetIPAddressFilterResponse*);
    @endcode

  - <SetIPAddressFilter> @ref _tds__SetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilter(struct soap*, struct _tds__SetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilter(struct soap*, struct _tds__SetIPAddressFilter*);
    @endcode

  - <SetIPAddressFilterResponse> @ref _tds__SetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilterResponse(struct soap*, struct _tds__SetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilterResponse(struct soap*, struct _tds__SetIPAddressFilterResponse*);
    @endcode

  - <AddIPAddressFilter> @ref _tds__AddIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilter(struct soap*, struct _tds__AddIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilter(struct soap*, struct _tds__AddIPAddressFilter*);
    @endcode

  - <AddIPAddressFilterResponse> @ref _tds__AddIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilterResponse(struct soap*, struct _tds__AddIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilterResponse(struct soap*, struct _tds__AddIPAddressFilterResponse*);
    @endcode

  - <RemoveIPAddressFilter> @ref _tds__RemoveIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilter(struct soap*, struct _tds__RemoveIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilter(struct soap*, struct _tds__RemoveIPAddressFilter*);
    @endcode

  - <RemoveIPAddressFilterResponse> @ref _tds__RemoveIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilterResponse(struct soap*, struct _tds__RemoveIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilterResponse(struct soap*, struct _tds__RemoveIPAddressFilterResponse*);
    @endcode

  - <GetAccessPolicy> @ref _tds__GetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicy(struct soap*, struct _tds__GetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicy(struct soap*, struct _tds__GetAccessPolicy*);
    @endcode

  - <GetAccessPolicyResponse> @ref _tds__GetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicyResponse(struct soap*, struct _tds__GetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicyResponse(struct soap*, struct _tds__GetAccessPolicyResponse*);
    @endcode

  - <SetAccessPolicy> @ref _tds__SetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicy(struct soap*, struct _tds__SetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicy(struct soap*, struct _tds__SetAccessPolicy*);
    @endcode

  - <SetAccessPolicyResponse> @ref _tds__SetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicyResponse(struct soap*, struct _tds__SetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicyResponse(struct soap*, struct _tds__SetAccessPolicyResponse*);
    @endcode

  - <CreateCertificate> @ref _tds__CreateCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificate(struct soap*, struct _tds__CreateCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificate(struct soap*, struct _tds__CreateCertificate*);
    @endcode

  - <CreateCertificateResponse> @ref _tds__CreateCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificateResponse(struct soap*, struct _tds__CreateCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificateResponse(struct soap*, struct _tds__CreateCertificateResponse*);
    @endcode

  - <GetCertificates> @ref _tds__GetCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificates(struct soap*, struct _tds__GetCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificates(struct soap*, struct _tds__GetCertificates*);
    @endcode

  - <GetCertificatesResponse> @ref _tds__GetCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesResponse(struct soap*, struct _tds__GetCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesResponse(struct soap*, struct _tds__GetCertificatesResponse*);
    @endcode

  - <GetCertificatesStatus> @ref _tds__GetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatus(struct soap*, struct _tds__GetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatus(struct soap*, struct _tds__GetCertificatesStatus*);
    @endcode

  - <GetCertificatesStatusResponse> @ref _tds__GetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatusResponse(struct soap*, struct _tds__GetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatusResponse(struct soap*, struct _tds__GetCertificatesStatusResponse*);
    @endcode

  - <SetCertificatesStatus> @ref _tds__SetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatus(struct soap*, struct _tds__SetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatus(struct soap*, struct _tds__SetCertificatesStatus*);
    @endcode

  - <SetCertificatesStatusResponse> @ref _tds__SetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatusResponse(struct soap*, struct _tds__SetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatusResponse(struct soap*, struct _tds__SetCertificatesStatusResponse*);
    @endcode

  - <DeleteCertificates> @ref _tds__DeleteCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificates(struct soap*, struct _tds__DeleteCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificates(struct soap*, struct _tds__DeleteCertificates*);
    @endcode

  - <DeleteCertificatesResponse> @ref _tds__DeleteCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificatesResponse(struct soap*, struct _tds__DeleteCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificatesResponse(struct soap*, struct _tds__DeleteCertificatesResponse*);
    @endcode

  - <GetPkcs10Request> @ref _tds__GetPkcs10Request
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10Request(struct soap*, struct _tds__GetPkcs10Request*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10Request(struct soap*, struct _tds__GetPkcs10Request*);
    @endcode

  - <GetPkcs10RequestResponse> @ref _tds__GetPkcs10RequestResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10RequestResponse(struct soap*, struct _tds__GetPkcs10RequestResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10RequestResponse(struct soap*, struct _tds__GetPkcs10RequestResponse*);
    @endcode

  - <LoadCertificates> @ref _tds__LoadCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificates(struct soap*, struct _tds__LoadCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificates(struct soap*, struct _tds__LoadCertificates*);
    @endcode

  - <LoadCertificatesResponse> @ref _tds__LoadCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificatesResponse(struct soap*, struct _tds__LoadCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificatesResponse(struct soap*, struct _tds__LoadCertificatesResponse*);
    @endcode

  - <GetClientCertificateMode> @ref _tds__GetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateMode(struct soap*, struct _tds__GetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateMode(struct soap*, struct _tds__GetClientCertificateMode*);
    @endcode

  - <GetClientCertificateModeResponse> @ref _tds__GetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateModeResponse(struct soap*, struct _tds__GetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateModeResponse(struct soap*, struct _tds__GetClientCertificateModeResponse*);
    @endcode

  - <SetClientCertificateMode> @ref _tds__SetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateMode(struct soap*, struct _tds__SetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateMode(struct soap*, struct _tds__SetClientCertificateMode*);
    @endcode

  - <SetClientCertificateModeResponse> @ref _tds__SetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateModeResponse(struct soap*, struct _tds__SetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateModeResponse(struct soap*, struct _tds__SetClientCertificateModeResponse*);
    @endcode

  - <GetCACertificates> @ref _tds__GetCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificates(struct soap*, struct _tds__GetCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificates(struct soap*, struct _tds__GetCACertificates*);
    @endcode

  - <GetCACertificatesResponse> @ref _tds__GetCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificatesResponse(struct soap*, struct _tds__GetCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificatesResponse(struct soap*, struct _tds__GetCACertificatesResponse*);
    @endcode

  - <LoadCertificateWithPrivateKey> @ref _tds__LoadCertificateWithPrivateKey
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKey(struct soap*, struct _tds__LoadCertificateWithPrivateKey*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKey(struct soap*, struct _tds__LoadCertificateWithPrivateKey*);
    @endcode

  - <LoadCertificateWithPrivateKeyResponse> @ref _tds__LoadCertificateWithPrivateKeyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    @endcode

  - <GetCertificateInformation> @ref _tds__GetCertificateInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformation(struct soap*, struct _tds__GetCertificateInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformation(struct soap*, struct _tds__GetCertificateInformation*);
    @endcode

  - <GetCertificateInformationResponse> @ref _tds__GetCertificateInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformationResponse(struct soap*, struct _tds__GetCertificateInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformationResponse(struct soap*, struct _tds__GetCertificateInformationResponse*);
    @endcode

  - <LoadCACertificates> @ref _tds__LoadCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificates(struct soap*, struct _tds__LoadCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificates(struct soap*, struct _tds__LoadCACertificates*);
    @endcode

  - <LoadCACertificatesResponse> @ref _tds__LoadCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificatesResponse(struct soap*, struct _tds__LoadCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificatesResponse(struct soap*, struct _tds__LoadCACertificatesResponse*);
    @endcode

  - <CreateDot1XConfiguration> @ref _tds__CreateDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfiguration(struct soap*, struct _tds__CreateDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfiguration(struct soap*, struct _tds__CreateDot1XConfiguration*);
    @endcode

  - <CreateDot1XConfigurationResponse> @ref _tds__CreateDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfigurationResponse(struct soap*, struct _tds__CreateDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfigurationResponse(struct soap*, struct _tds__CreateDot1XConfigurationResponse*);
    @endcode

  - <SetDot1XConfiguration> @ref _tds__SetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfiguration(struct soap*, struct _tds__SetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfiguration(struct soap*, struct _tds__SetDot1XConfiguration*);
    @endcode

  - <SetDot1XConfigurationResponse> @ref _tds__SetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfigurationResponse(struct soap*, struct _tds__SetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfigurationResponse(struct soap*, struct _tds__SetDot1XConfigurationResponse*);
    @endcode

  - <GetDot1XConfiguration> @ref _tds__GetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfiguration(struct soap*, struct _tds__GetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfiguration(struct soap*, struct _tds__GetDot1XConfiguration*);
    @endcode

  - <GetDot1XConfigurationResponse> @ref _tds__GetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationResponse(struct soap*, struct _tds__GetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationResponse(struct soap*, struct _tds__GetDot1XConfigurationResponse*);
    @endcode

  - <GetDot1XConfigurations> @ref _tds__GetDot1XConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurations(struct soap*, struct _tds__GetDot1XConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurations(struct soap*, struct _tds__GetDot1XConfigurations*);
    @endcode

  - <GetDot1XConfigurationsResponse> @ref _tds__GetDot1XConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationsResponse(struct soap*, struct _tds__GetDot1XConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationsResponse(struct soap*, struct _tds__GetDot1XConfigurationsResponse*);
    @endcode

  - <DeleteDot1XConfiguration> @ref _tds__DeleteDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfiguration(struct soap*, struct _tds__DeleteDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfiguration(struct soap*, struct _tds__DeleteDot1XConfiguration*);
    @endcode

  - <DeleteDot1XConfigurationResponse> @ref _tds__DeleteDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfigurationResponse(struct soap*, struct _tds__DeleteDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfigurationResponse(struct soap*, struct _tds__DeleteDot1XConfigurationResponse*);
    @endcode

  - <GetRelayOutputs> @ref _tds__GetRelayOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputs(struct soap*, struct _tds__GetRelayOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputs(struct soap*, struct _tds__GetRelayOutputs*);
    @endcode

  - <GetRelayOutputsResponse> @ref _tds__GetRelayOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputsResponse(struct soap*, struct _tds__GetRelayOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputsResponse(struct soap*, struct _tds__GetRelayOutputsResponse*);
    @endcode

  - <SetRelayOutputSettings> @ref _tds__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettings(struct soap*, struct _tds__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettings(struct soap*, struct _tds__SetRelayOutputSettings*);
    @endcode

  - <SetRelayOutputSettingsResponse> @ref _tds__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettingsResponse(struct soap*, struct _tds__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettingsResponse(struct soap*, struct _tds__SetRelayOutputSettingsResponse*);
    @endcode

  - <SetRelayOutputState> @ref _tds__SetRelayOutputState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputState(struct soap*, struct _tds__SetRelayOutputState*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputState(struct soap*, struct _tds__SetRelayOutputState*);
    @endcode

  - <SetRelayOutputStateResponse> @ref _tds__SetRelayOutputStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputStateResponse(struct soap*, struct _tds__SetRelayOutputStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputStateResponse(struct soap*, struct _tds__SetRelayOutputStateResponse*);
    @endcode

  - <SendAuxiliaryCommand> @ref _tds__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommand(struct soap*, struct _tds__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommand(struct soap*, struct _tds__SendAuxiliaryCommand*);
    @endcode

  - <SendAuxiliaryCommandResponse> @ref _tds__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommandResponse(struct soap*, struct _tds__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommandResponse(struct soap*, struct _tds__SendAuxiliaryCommandResponse*);
    @endcode

  - <GetDot11Capabilities> @ref _tds__GetDot11Capabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Capabilities(struct soap*, struct _tds__GetDot11Capabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Capabilities(struct soap*, struct _tds__GetDot11Capabilities*);
    @endcode

  - <GetDot11CapabilitiesResponse> @ref _tds__GetDot11CapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11CapabilitiesResponse(struct soap*, struct _tds__GetDot11CapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11CapabilitiesResponse(struct soap*, struct _tds__GetDot11CapabilitiesResponse*);
    @endcode

  - <GetDot11Status> @ref _tds__GetDot11Status
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Status(struct soap*, struct _tds__GetDot11Status*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Status(struct soap*, struct _tds__GetDot11Status*);
    @endcode

  - <GetDot11StatusResponse> @ref _tds__GetDot11StatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11StatusResponse(struct soap*, struct _tds__GetDot11StatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11StatusResponse(struct soap*, struct _tds__GetDot11StatusResponse*);
    @endcode

  - <ScanAvailableDot11Networks> @ref _tds__ScanAvailableDot11Networks
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11Networks(struct soap*, struct _tds__ScanAvailableDot11Networks*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11Networks(struct soap*, struct _tds__ScanAvailableDot11Networks*);
    @endcode

  - <ScanAvailableDot11NetworksResponse> @ref _tds__ScanAvailableDot11NetworksResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11NetworksResponse(struct soap*, struct _tds__ScanAvailableDot11NetworksResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11NetworksResponse(struct soap*, struct _tds__ScanAvailableDot11NetworksResponse*);
    @endcode

  - <GetSystemUris> @ref _tds__GetSystemUris
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUris(struct soap*, struct _tds__GetSystemUris*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUris(struct soap*, struct _tds__GetSystemUris*);
    @endcode

  - <GetSystemUrisResponse> @ref _tds__GetSystemUrisResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUrisResponse(struct soap*, struct _tds__GetSystemUrisResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUrisResponse(struct soap*, struct _tds__GetSystemUrisResponse*);
    @endcode

  - <StartFirmwareUpgrade> @ref _tds__StartFirmwareUpgrade
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgrade(struct soap*, struct _tds__StartFirmwareUpgrade*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgrade(struct soap*, struct _tds__StartFirmwareUpgrade*);
    @endcode

  - <StartFirmwareUpgradeResponse> @ref _tds__StartFirmwareUpgradeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgradeResponse(struct soap*, struct _tds__StartFirmwareUpgradeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgradeResponse(struct soap*, struct _tds__StartFirmwareUpgradeResponse*);
    @endcode

  - <StartSystemRestore> @ref _tds__StartSystemRestore
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestore(struct soap*, struct _tds__StartSystemRestore*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestore(struct soap*, struct _tds__StartSystemRestore*);
    @endcode

  - <StartSystemRestoreResponse> @ref _tds__StartSystemRestoreResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestoreResponse(struct soap*, struct _tds__StartSystemRestoreResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestoreResponse(struct soap*, struct _tds__StartSystemRestoreResponse*);
    @endcode

  - <GetStorageConfigurations> @ref _tds__GetStorageConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurations(struct soap*, struct _tds__GetStorageConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurations(struct soap*, struct _tds__GetStorageConfigurations*);
    @endcode

  - <GetStorageConfigurationsResponse> @ref _tds__GetStorageConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationsResponse(struct soap*, struct _tds__GetStorageConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationsResponse(struct soap*, struct _tds__GetStorageConfigurationsResponse*);
    @endcode

  - <CreateStorageConfiguration> @ref _tds__CreateStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfiguration(struct soap*, struct _tds__CreateStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfiguration(struct soap*, struct _tds__CreateStorageConfiguration*);
    @endcode

  - <CreateStorageConfigurationResponse> @ref _tds__CreateStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfigurationResponse(struct soap*, struct _tds__CreateStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfigurationResponse(struct soap*, struct _tds__CreateStorageConfigurationResponse*);
    @endcode

  - <GetStorageConfiguration> @ref _tds__GetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfiguration(struct soap*, struct _tds__GetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfiguration(struct soap*, struct _tds__GetStorageConfiguration*);
    @endcode

  - <GetStorageConfigurationResponse> @ref _tds__GetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationResponse(struct soap*, struct _tds__GetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationResponse(struct soap*, struct _tds__GetStorageConfigurationResponse*);
    @endcode

  - <SetStorageConfiguration> @ref _tds__SetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfiguration(struct soap*, struct _tds__SetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfiguration(struct soap*, struct _tds__SetStorageConfiguration*);
    @endcode

  - <SetStorageConfigurationResponse> @ref _tds__SetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfigurationResponse(struct soap*, struct _tds__SetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfigurationResponse(struct soap*, struct _tds__SetStorageConfigurationResponse*);
    @endcode

  - <DeleteStorageConfiguration> @ref _tds__DeleteStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfiguration(struct soap*, struct _tds__DeleteStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfiguration(struct soap*, struct _tds__DeleteStorageConfiguration*);
    @endcode

  - <DeleteStorageConfigurationResponse> @ref _tds__DeleteStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfigurationResponse(struct soap*, struct _tds__DeleteStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfigurationResponse(struct soap*, struct _tds__DeleteStorageConfigurationResponse*);
    @endcode

@section tdn Top-level root elements of schema "http://www.onvif.org/ver10/network/wsdl"

  - <Hello> (use wsdl2h option -g to auto-generate)

  - <HelloResponse> (use wsdl2h option -g to auto-generate)

  - <Probe> (use wsdl2h option -g to auto-generate)

  - <ProbeResponse> (use wsdl2h option -g to auto-generate)

  - <Bye> (use wsdl2h option -g to auto-generate)

  - <ByeResponse> (use wsdl2h option -g to auto-generate)

*/

/* End of ..\..\onvif_code\receiver.h */
